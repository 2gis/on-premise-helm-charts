name: Lint Helm Charts

on:
  # pull_request:
  #   branches:
  #     - develop
  workflow_dispatch:  # Добавлена возможность ручного запуска

env:
  MAIN_BRANCH: "develop" # Константа для основной ветки

jobs:
  lint-charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Получаем всю историю для сравнения изменений

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.17.2'

      - name: Install chart-testing (ct)
        run: |
          pip install chart-testing

      - name: Install kubeconform
        run: |
          KUBECONFORM_VERSION="v0.6.7"
          curl -LO https://github.com/yannh/kubeconform/releases/download/${KUBECONFORM_VERSION}/kubeconform-linux-amd64.tar.gz
          tar -xzf kubeconform-linux-amd64.tar.gz
          chmod +x kubeconform
          sudo mv kubeconform /usr/local/bin/

      - name: Generate `values-auto.yaml` for all charts
        run: |
          for chart in charts/*; do
            if [[ -d "$chart" ]]; then
              chart_name=$(basename "$chart")
              echo "Processing chart: $chart_name"

              helm show values "$chart" > "$chart/values-auto.yaml"

              # Заменяем `: ''` на `ключ-example`
              awk '
                function key_example(key) {
                  gsub(/\./, "_", key)
                  return key "-example"
                }
                /: *'\'''\''/ { sub(/'\'''\''/, "\"" key_example($1) "\"") } 1
              ' "$chart/values-auto.yaml" > "$chart/values-auto.yaml.tmp" && mv "$chart/values-auto.yaml.tmp" "$chart/values-auto.yaml"
            fi
          done

      - name: Lint and Validate Charts
        run: |
          for chart in charts/*; do
            if [[ -d "$chart" ]]; then
              echo "Linting chart: $(basename "$chart")"
              helm lint "$chart"

              echo "Running chart-testing on: $(basename "$chart")"
              ct lint --charts "$chart"

              echo "Validating chart: $(basename "$chart")"
              helm template "$chart" -f "$chart/values-auto.yaml" | kubeconform -summary -output json
            fi
          done

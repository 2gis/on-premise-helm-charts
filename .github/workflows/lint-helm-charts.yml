name: Lint Helm Charts

on:
  # pull_request:
  #   branches:
  #     - develop
  workflow_dispatch:  # Добавлена возможность ручного запуска

env:
  MAIN_BRANCH: "develop" # Константа для основной ветки

jobs:
  lint-charts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Получаем всю историю для сравнения изменений

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'v3.12.0'

      - name: Install chart-testing (ct)
        run: |
          pip install chart-testing

      - name: Install kubeconform
        run: |
          KUBECONFORM_VERSION="v0.6.7"
          curl -LO https://github.com/yannh/kubeconform/releases/download/${KUBECONFORM_VERSION}/kubeconform-linux-amd64.tar.gz
          tar -xzf kubeconform-linux-amd64.tar.gz
          chmod +x kubeconform
          sudo mv kubeconform /usr/local/bin/

      - name: Determine Charts to Lint
        id: charts-list
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # Ручной запуск: проверяем все чарты
            CHARTS=$(ls -d charts/*/ | sed 's|charts/||' | sed 's|/||')
          else
            # PR: анализируем измененные чарты относительно origin/develop
            CHANGED_FILES=$(git diff --name-only origin/${{ env.MAIN_BRANCH }} HEAD -- charts/)
            CHARTS=$(echo "$CHANGED_FILES" | grep -oP 'charts/\K[^/]+' | sort | uniq)
          fi

          if [ -z "$CHARTS" ]; then
            echo "No charts to lint."
            echo "charts=" >> $GITHUB_ENV
          else
            echo "Linting charts: $CHARTS"
            echo "charts=$CHARTS" >> $GITHUB_ENV
          fi

      - name: Lint and Validate Charts
        if: env.charts != ''
        run: |
          mkdir -p rendered
          for CHART in ${{ env.charts }}; do
            echo "Linting chart: $CHART"
            helm lint charts/$CHART

            echo "Running chart-testing on: $CHART"
            ct lint --charts charts/$CHART

            echo "Generating Kubernetes manifests for validation"
            helm template charts/$CHART > rendered/$CHART.yaml

            echo "Validating Kubernetes manifests with kubeconform"
            kubeconform -summary -output json rendered/$CHART.yaml
          done

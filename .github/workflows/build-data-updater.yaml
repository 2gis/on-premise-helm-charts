name: Build and Push Data Updater Docker Image

# üîÅ –£—Å–ª–æ–≤–∏—è –∑–∞–ø—É—Å–∫–∞ workflow:
on:
  # 1. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è workflow "Publish Helm Charts to ghcr.io"
  workflow_run:
    workflows: ["Publish Helm Charts to ghcr.io"]
    types:
      - completed

  # 2. –ú–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –≤—Ä—É—á–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å GitHub Actions
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag of the release to build Docker image for (e.g. 1.2.3)"
        required: true
        default: "1.0.0"

jobs:
  build-docker:
    # ‚úÖ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏:
    # - –ó–∞–ø—É—â–µ–Ω –≤—Ä—É—á–Ω—É—é (workflow_dispatch)
    # - –õ–∏–±–æ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—â–∏–π workflow –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ (workflow_run.conclusion == 'success')
    if: >-
      ${{
        github.event_name == 'workflow_dispatch' ||
        github.event.workflow_run.conclusion == 'success'
      }}

    runs-on: ubuntu-latest

    steps:
      # üîÑ –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ –Ω—É–∂–Ω—É—é –≤–µ—Ä—Å–∏—é –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ (–ø–æ –≤–≤–µ–¥—ë–Ω–Ω–æ–º—É —Ç–µ–≥—É –∏–ª–∏ –ø–æ –≤–µ—Ç–∫–µ/—Ç–µ–≥—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ workflow)
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: >-
            ${{ github.event_name == 'workflow_dispatch'
              && format('refs/tags/{0}', inputs.tag)
              || github.event.workflow_run.head_branch }}

      # ‚úÖ –®–∞–≥ 2: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—ã TAG_VERSION –∏ GIT_SHA
      # - –î–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–µ–º inputs.tag –∏ —Ç–µ–∫—É—â–∏–π SHA
      # - –î–ª—è workflow_run: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —Ç–µ–≥ –∏ SHA –∫–æ–º–º–∏—Ç–∞ –∏–∑ —Å–æ–±—ã—Ç–∏—è
      - name: Set ENV variables from dispatch or workflow_run
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Manual trigger with tag: ${{ inputs.tag }}"
            echo "TAG_VERSION=${{ inputs.tag }}" >> $GITHUB_ENV
            echo "GIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
          else
            TAG="${{ github.event.workflow_run.head_branch }}"
            echo "Triggered by workflow_run with tag: $TAG"
            echo "TAG_VERSION=${TAG}" >> $GITHUB_ENV
            echo "GIT_SHA=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV
          fi
      # –®–ê–ì 3: –í—Ö–æ–¥–∏–º –≤ GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # üê≥ –®–∞–≥ 4: –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è Docker-–æ–±—Ä–∞–∑–∞ –≤ GitHub Container Registry (ghcr.io)
      - name: Build and push Docker data-updater image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockerfiles/data-updater/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/images/data-updater:${{ env.TAG_VERSION }}
          build-args: |
            ON_PREMISE_RELEASE=${{ env.TAG_VERSION }}
          labels: |
            org.opencontainers.image.title=data-updater
            org.opencontainers.image.description=Data updater
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ env.TAG_VERSION }}
            org.opencontainers.image.revision=${{ env.GIT_SHA }}

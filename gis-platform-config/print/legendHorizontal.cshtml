@using System
<!doctype html>
<html>
<head>
<meta charset="utf-8">
<style>
    html,body {
      margin: 0;
      max-width: @(Model.Width)px;
      height: @(Model.Height)px;

	  font-family: Roboto;
  	  font-size: 14px;
      font-weight: 500;
      font-stretch: normal;
      font-style: normal;
    }

	.title {
		font-size: 24px;
		width: @(Model.Width - Model.Margin[1] - Model.Margin[3])px;
		margin: 0 40px;
    	padding: 32px 0;
    }

	.legendContainer {
		max-width: @(Model.Width - Model.Margin[1] - Model.Margin[3])px;
		margin: 0 16px 0 40px;
		height: 100%;
	}

	.printContainer {
		width: 100%;
	}

	.empty {
		width: 100%;
		height: 72px;
		background: white;
	}

	.legendRow {
	    width: 100%;
	    display: inline-block;
	}

	.layerLegendContainer {
		margin-right: 24px;
		padding-bottom: 40px;
		float: left;
		width: 260px;
        text-align: left;
	}

	.layerLegend {
		display: inline-block;
		max-width: 269px;
		text-align: left;
	}

	.layerLegendHeader {
	  width: 100%;
	  vertical-align: middle;
	}

	.layerSymbol {
		width: 24px;
		height: 24px;
		display: inline-block;
	    vertical-align: middle;
	}

	.layerName {
        display: inline-block;
		margin-left: 8px;
		width: 200px;
        vertical-align: middle;
	}

	.layerLegendClassified {
		padding-left: 40px;
		font-size: 12px;
	}

	.layerAttrName {
		padding: 10px 0;
		font-weight: bold;
	}

	.layerStyledAttr {
		vertical-align: middle;
		width: 100%;
	}

	.layerAttrSymbol {
		display: inline-block;
		vertical-align: middle;
	}

	.layerAttrSymbolAlias {
		display: inline-block;
		padding-left: 8px;
		vertical-align: middle;
		width: 120px;
	}

</style>

	<title>Map print</title>

</head>

<body>
<div class="printContainer">
		<div class ="title">Условные обозначения</div>
		<div class="legendContainer">
            @for(var i = 0; i < Model.Legend.LegendLayers.Count; i++)
			{
                var legend = Model.Legend.LegendLayers[i];

                if(i % 4 == 0)
                {
                    @:<div class="legendRow">
                }


			<div class="layerLegendContainer">
			<div class="layerLegend">
				<div class="layerLegendHeader">
					<img class="layerSymbol"
						 src = "data:image;base64,@Convert.ToBase64String(legend.Image)"
					/>
					<span class="layerName">@legend.Name</span>
				</div>
				@foreach(var legendLayerAttribute in legend.LegendLayerAttributes)
				{
				<div class="layerLegendClassified">
					<div class="layerAttrName">@legendLayerAttribute.AttributeName</div>

					@foreach(var condition in legendLayerAttribute.LegendConditions)
					{
					<div class="layerStyledAttr">
						<img class="layerAttrSymbol"
							 src = "data:image;base64,@Convert.ToBase64String(condition.Image)"
						/>
						<span class="layerAttrSymbolAlias">@condition.Value</span>
					</div>
					}
				</div>
				}
			</div>
			</div>
                @if(i % 4 == 3 || i == Model.Legend.LegendLayers.Count - 1)
                {
                    @:</div>
                }
			}
		</div>
		</div>
	</body>
</html>

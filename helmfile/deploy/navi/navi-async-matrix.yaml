---
bases:
- {{ env "HELMFILE_VALUES" | default "../../../../helmfile_values" }}/base.yaml
---
{{ if eq .Values.remoteCharts true }}
repositories:
- name: 2gis-on-premise
  url: https://2gis.github.io/on-premise-helm-charts
{{ end }}
---
{{ $path_values:= env "HELMFILE_VALUES" | default "../../../../helmfile_values" }}
releases:
  - name: navi-async-matrix
    {{- if eq .Values.remoteCharts true }}
    chart: 2gis-on-premise/navi-async-matrix
    {{- else}}
    chart: ../../../charts/navi-async-matrix
    {{- end }}
    namespace: {{ .Values.namespace  }}
    kubeContext: {{ .Values.kubeContext }}
    version: "{{ .Values.version }}"
    labels:
      chart: navi-async-matrix
    values:
      - {{ $path_values }}/templates/dgctl.gotmpl
      - {{ $path_values }}/services/navi/navi-async-matrix/{{ .Environment.Name }}-kafka.yaml
      - {{ $path_values }}/services/navi/navi-async-matrix/_common.gotmpl
      - {{ $path_values }}/templates/optionalEnv.gotmpl
    {{- if .Values.ingress.enabled }}
      - {{ $path_values }}/templates/ingress.gotmpl
    {{ end }}
    set:
      - name: s3.host
        value: {{ .Values.s3.citiesUrl }}
      - name: s3.accessKey
        value: {{ .Values.s3.accessKey }}
      - name: s3.secretKey
        value: {{ .Values.s3.secretKey }}
{{- if or .Values.kafka.authCert .Values.kafka.authLogin }}
  {{- if .Values.kafka.authCert }}  # kafka аутентификация по сертификату
    {{- if .Values.kafka.authCert.pathCert }} #windows
      - name: kafka.fileProperties.ssl\.cafile
        file: {{ .Values.kafka.authCert.pathCert }}\\{{ .Values.kafka.authCert.sslCA }}
      - name: kafka.fileProperties.ssl\.certfile
        file: {{ .Values.kafka.authCert.pathCert }}\\{{ .Values.kafka.authCert.sslCertificate }}
      - name: kafka.fileProperties.ssl\.keyfile
        file: {{ .Values.kafka.authCert.pathCert }}\\{{ .Values.kafka.authCert.sslKey }}
    {{ else }}
      - name: kafka.fileProperties.ssl\.cafile
        file: {{ $path_values }}/ssl/{{ .Values.kafka.authCert.sslCA }}
      - name: kafka.fileProperties.ssl\.certfile
        file: {{ $path_values }}/ssl/{{ .Values.kafka.authCert.sslCertificate }}
      - name: kafka.fileProperties.ssl\.keyfile
        file: {{ $path_values }}/ssl/{{ .Values.kafka.authCert.sslKey }}
    {{ end }}
      - name: kafka.properties.ssl\.check\.hostname
        value: ''
    {{- if .Values.kafka.authCert.sslPassword }}
      - name: kafka.sensitiveProperties.ssl\.password
        value: {{ .Values.kafka.authCert.sslPassword }}
    {{ end }}
  {{ else }} # kafka аутентификация по логину и паролю
      - name: kafka.properties.sasl\.plain\.username
        value: {{ .Values.kafka.authLogin.username }}
      - name: kafka.sensitiveProperties.sasl\.plain\.password
        value: {{ .Values.kafka.authLogin.password }}
  {{ end }}
{{ end }}
    {{- if .Values.ingress.enabled }}
    hooks:
    - events: ["postsync"]
      showlogs: true
      command: "../tests/navi-async-service.sh"
      args: ["{{ .Values.ingress.protocol }}://navi-async-matrix.{{ .Values.ingress.domain }}", "{{ .Values.apiKey }}"]
    {{ end }}

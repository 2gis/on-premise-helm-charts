helmDefaults:
  createNamespace: false
  atomic: true
  wait: true

 
environments:
  test:
    values:
    - version: 1.5.0 # актуальная версия релиза
      remoteCharts: false
      manifest: manifests/1675328936.json # укажите манифест, полученный при скачивании данных dgctl
      namespace: 2gis-on-premise # namespace k8s для деплоя сервисов 2gis
      kubeContext: dev-cluster # имя контекста k8s для доступа к кластеру
      apiKey: API_KEY # API-ключ для доступа к сервисам поиска. Подробнее см. в документации сервиса API Keys.
      dockerRegistry: docker-hub.2gis.ru
      imagePullSecrets: [] #указать k8s secrets, если требуется авторизация на doker registry
        #- name: secret_regestry
      s3:
        citiesUrl: http://artifacts.example.com
        bucket: onpremise-artifacts # бакет, куда загружены данные утилитой dgctl
        accessKey: AKIAIOSFODNN7EXAMPLE
        secretKey: wJalrXUtnFEMIK7MDENGbPxRfiCYEXAMPLEKEY
      ingress:
        enabled: false # включение ингресса
        domain: example.com # домен ингресса
        protocol: https # протокол ингресса http или https
        secretName: secret_tls # указать k8s secrets, содержащий сертификат для https, если будет использоваться https
      naviCustomResources: true # ресурсы и лимиты выставляются для каждого типа бека навигации в файле navi-custom-resources.yaml
      kafka: # методы аутентификации (login/password or ssl certificates)
        authLogin: {}
          # username:  kafka-user
          # password:  kafka-password
        authCert: # сертификаты и ключ нужно положить в директорию ssl и указать здесь имена файлов
          sslCA: CAcert.pem
          sslCertificate: Cert.crt
          sslKey: Private.key
          sslPassword: '' # укажите пароль Private.key, если используется
          pathCert: '' #если запускается на windows, необходимо указать абсолютный путь до директории с сертификатами,
                       #например: C:\\Users\\user\\on-premise-helm-charts\\helmfile\\ssl

  prod:
    values:
    - version: 1.5.0 
      remoteCharts: true
      manifest: manifests/1675328936.json 
      namespace: 2gis-on-premise 
      kubeContext: prod-cluster 
      dockerRegistry: docker.storage.example.local
      s3:
        citiesUrl: http://artifacts.example.com
        bucket: onpremise-artifacts 
        accessKey: AKIAIOSFODNN7EXAMPLE
        secretKey: wJalrXUtnFEMIK7MDENGbPxRfiCYEXAMPLEKEY
      ingress:
        enabled: true 
        domain: example.com 
        protocol: https 
        secretName: secret_tls 
      customProjectNavi: false 
      kafka: 
        authCert: 
          sslCA: CAcert.pem
          sslCertificate: Cert.crt
          sslKey: Private.key
          

---

# manifestPath -- Path to the manifest in S3-like storage. The manifest is downloaded via the dgctl utility
manifestPath: manifests/1635402744.json

serviceName: tileserver-api

name: tileserver
type: web

cassandra:
  # -- List of available Cassandra database nodes
  hosts: []

  # -- Replication factor for Cassandra
  replicaFactor: 3

  # -- Consistency level for database read queries. All possible values can be viewed by [link](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html#Readconsistencylevels)
  consistencyLevelRead: LOCAL_QUORUM

  # -- Consistency level for database write queries. All possible values can be viewed by [link](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html#Writeconsistencylevels)
  consistencyLevelWrite: LOCAL_QUORUM

api:

  # -- The path to the docker image. Must have a path to your private docker registry
  image: 2gis/tileserver
  # -- Tag with application version
  tag: v1.0.0
  pullPolicy: IfNotPresent

  terminationGracePeriodSeconds: 30

  labels: {}
  annotations: {}

  replicaCount: 3
  revisionHistory: 1
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 1
      memory: 512Mi

  podAnnotations: {}
  podLabels: {}

  nodeSelector: {}
  affinity: {}
  tolerations: {}
  imagePullSecrets: {}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

  service:
    port: 80
    type: ClusterIP
    annotations: {}
    labels: {}

  ingress:
    enabled: false

    className: nginx
    tls: []
    hosts:
      - host: tileserver.loc
        paths:
          - path: /

  pdb:
    enabled: true
    maxUnavailable: 1

  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 50

  vpa:
    enabled: false
    updateMode: Auto
    minAllowed:
      memory: 128Mi
    maxAllowed:
      cpu: 1
      memory: 512Mi

importer:
  enabled: true

  # -- The path to the docker image. Must have a path to your private docker registry
  image: 2gis/selfimporter
  # -- Tag with application version
  tag: v1.0.0

  pullPolicy: IfNotPresent

  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 100m
      memory: 256Mi

  # -- Number of parallel import processes (spawned jobs)
  workerNum: 20

  # -- Number of write processes per import process
  writerNum: 8

  tolerations: {}
  imagePullSecrets: {}

  nodeSelector: {}
  workerResources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 4
      memory: 512Mi


  storage:
    host: s3host.local
    bucket: backet
    accessKey: accessKey
    secretKey: secretKey

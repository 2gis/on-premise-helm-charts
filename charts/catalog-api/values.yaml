# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry host where On-Premise services' images reside. Format: `host:port`

dgctlDockerRegistry: ''


# @section Common settings

# @param nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
# @param affinity Kubernetes [pod affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity)
# @param tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings
# @param podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
# @param podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
# @param imagePullSecrets Kubernetes [secrets for pulling the image from the registry](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)

nodeSelector: {}
affinity: {}
tolerations: []
podAnnotations: {}
podLabels: {}
imagePullSecrets: []


# @section Kubernetes [Pod Disruption Budget](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#pod-disruption-budgets) settings

# @param pdb.enabled If PDB is enabled for the service
# @param pdb.minAvailable How many pods must be available after the eviction
# @param pdb.maxUnavailable How many pods can be unavailable after the eviction

pdb:
  enabled: false
  minAvailable: ''
  maxUnavailable: 1


# @section Deployment Artifacts Storage settings

# @param dgctlStorage.host S3 host. Format: `host:port`. **Required**
# @param dgctlStorage.bucket S3 bucket name. **Required**
# @param dgctlStorage.accessKey S3 access key for accessing the bucket. **Required**
# @param dgctlStorage.secretKey S3 secret key for accessing the bucket. **Required**
# @param dgctlStorage.manifest The path to the [manifest file](https://docs.2gis.com/en/on-premise/overview#nav-lvl2@paramCommon_deployment_steps). Format: `manifests/0000000000.json` <br> This file contains the description of pieces of data that the service requires to operate. **Required**

dgctlStorage:
  host: ''
  bucket: ''
  accessKey: ''
  secretKey: ''
  manifest: ''

# @section Strategy settings

# @param strategy.type Type of Kubernetes deployment. Can be `Recreate` or `RollingUpdate`.
# @param strategy.rollingUpdate.maxUnavailable Maximum number of pods that can be created over the desired number of pods when doing [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment).
# @param strategy.rollingUpdate.maxSurge Maximum number of pods that can be unavailable during the [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment) process.

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

# @section API settings

# @param api.replicas Number of replicas of API pods
# @param api.logLevel Log level

api:
  replicas: 1
  logLevel: info

  # @section api.image **Deployment settings**

  # @param api.image.repository Repository
  # @param api.image.tag Tag
  # @param api.image.pullPolicy Image [pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)

  image:
    repository: 2gis-on-premise/catalog-api
    tag: 3.600.0
    pullPolicy: IfNotPresent


  # @section Kubernetes [Horizontal Pod Autoscaling](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/) settings

  # @param api.hpa.enabled If HPA is enabled for the service
  # @param api.hpa.minReplicas Lower limit for the number of replicas to which the autoscaler can scale down
  # @param api.hpa.maxReplicas Upper limit for the number of replicas to which the autoscaler can scale up
  # @param api.hpa.scaleDownStabilizationWindowSeconds Scale-down window
  # @param api.hpa.scaleUpStabilizationWindowSeconds Scale-up window
  # @param api.hpa.targetCPUUtilizationPercentage Target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used
  # @param api.hpa.targetMemoryUtilizationPercentage Target average memory utilization (represented as a percentage of requested memory) over all the pods; if not specified the default autoscaling policy will be used

  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    scaleDownStabilizationWindowSeconds: ''
    scaleUpStabilizationWindowSeconds: ''
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: ''


  # @section api.resources Kubernetes [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) settings

  # @param api.resources.requests.cpu A CPU request
  # @param api.resources.requests.memory A memory request
  # @param api.resources.limits.cpu A CPU limit
  # @param api.resources.limits.memory A memory limit

  resources:
    requests:
      cpu: 2
      memory: 6000Mi
    limits:
      cpu: 4
      memory: 6500Mi


  # @section Service settings

  # @param api.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
  # @param api.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
  # @param api.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types)
  # @param api.service.port Service port

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80


  # @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

  # @param api.ingress.enabled If Ingress is enabled for the service.
  # @param api.ingress.className Name of the Ingress controller class.
  # @param api.ingress.hosts[0].host Hostname for the Ingress service.
  # @param api.ingress.hosts[0].paths[0].path Path of the host for the Ingress service.
  # @param api.ingress.hosts[0].paths[0].pathType Type of the path for the Ingress service.
  # @param api.ingress.tls TLS configuration

  ingress:
    enabled: false
    className: nginx
    hosts:
    - host: catalog-api.example.com
      paths:
      - path: /
        pathType: Prefix
    tls: []
    # - hosts:
    #   - catalog-api.example.com
    #   secretName: secret.tls

  # @section Database settings

  # @param api.postgres.host PostgreSQL rw/ro hostname or IP. **Required**
  # @param api.postgres.port PostgreSQL port
  # @param api.postgres.name PostgreSQL database name. **Required**
  # @param api.postgres.username PostgreSQL username. **Required**
  # @param api.postgres.password PostgreSQL password. **Required**
  # @param api.postgres.queryTimeout Max execution time PostgreSQL query timeout in seconds
  # @param api.postgres.poolSize.api PostgreSQL connection pool size for API
  # @param api.postgres.poolSize.preloaders.region PostgreSQL connection pool size for preloader regions
  # @param api.postgres.poolSize.preloaders.rubric PostgreSQL connection pool size for preloader rubrics
  # @param api.postgres.poolSize.preloaders.additionalAttribute PostgreSQL connection pool size for preloader additional attributes

  postgres:
    host: ''
    port: 5432
    name: ''
    username: ''
    password: ''
    queryTimeout: 3
    poolSize:
      api: 32
      preloaders:
        region: 2
        rubric: 3
        additionalAttribute: 3

  # @section Preloaders settings

  # @param api.preloaders.awaitTimeout Preloaders await timeout

  preloaders:
    awaitTimeout: 60s

# @section Search settings

# @param search.url URL of the Search service, ex: http://{search-api}.svc. This URL should be accessible from all the pods within your Kubernetes cluster. **Required**
# @param search.connectTimeout Timeout for connect to the Search service

search:
  url: ''
  connectTimeout: 300ms

# @section Keys settings

# @param keys.url URL of the Keys service, ex: http://{keys-api}.svc. This URL should be accessible from all the pods within your Kubernetes cluster. **Required**
# @param keys.token Keys service API key
# @param keys.client.connectingTimeout The time period within which the TCP connecting process must be completed
# @param keys.client.idleTimeout The time after which an idle connection will be automatically closed
# @param keys.client.maxRetries The maximum number of times failed requests are attempted again, (if the request can be safely retried) before giving up and returning an error
# @param keys.client.maxConnectionLifetime The maximum duration for a connection to be kept alive
# @param keys.client.baseConnectionBackoff The minimum duration to backoff new connection attempts after the previous connection attempt failed
# @param keys.client.maxConnectionBackoff Maximum backoff duration between failed connection attempts
# @param keys.client.responseTimeout The time period after the response was dispatched

keys:
  url: ''
  token: ''
  client:
    connectingTimeout: 1s
    idleTimeout: 1s
    maxRetries: 0
    maxConnectionLifetime: 20s
    baseConnectionBackoff: 1s
    maxConnectionBackoff: 20s
    responseTimeout: 5s

# @section License settings

# @param license.url URL of the License service. Ex: http(s)://license.svc **Required**
# @param license.requestTimeout Timeout for requests to the License service

license:
  url: ''
  requestTimeout: 1s


# @section Kubernetes Importer job settings

# @extra importer **Common settings**
# @param importer.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
# @param importer.workerNum Number of parallel import processes (workers)
# @param importer.initialDelaySeconds Number of seconds after the container has started before liveness or readiness probes are initiated
# @param importer.retry.download.maxAttempts The maximum number of retries download before stopping
# @param importer.retry.download.delay Delay until the retry attempts download
# @param importer.retry.execute.maxAttempts The maximum number of retries execute psql command before stopping
# @param importer.retry.execute.delay Delay until the retry attempts execute

importer:
  nodeSelector: {}
  workerNum: 3
  initialDelaySeconds: 1
  retry:
    download:
      maxAttempts: 3
      delay: 1s
    execute:
      maxAttempts: 3
      delay: 1s

  # @section importer.image **Deployment settings**

  # @param importer.image.repository Repository
  # @param importer.image.tag Tag
  # @param importer.image.pullPolicy Image [Pull Policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)

  image:
    repository: 2gis-on-premise/catalog-importer
    tag: 1.0.10
    pullPolicy: IfNotPresent

  # @section importer.postgres **Database settings**

  # @param importer.postgres.host PostgreSQL rw hostname or IP. **Required**
  # @param importer.postgres.port PostgreSQL port
  # @param importer.postgres.name PostgreSQL database name. **Required**
  # @param importer.postgres.username PostgreSQL username with rw access. **Required**
  # @param importer.postgres.password PostgreSQL password. **Required**
  # @param importer.postgres.schemaSwitchEnabled Automatic switch PostgreSQL schema on releases

  postgres:
    host: ''
    port: 5432
    name: ''
    username: ''
    password: ''
    schemaSwitchEnabled: true

  # @section importer.persistentVolume **Persistent Volume settings**

  # @param importer.persistentVolume.enabled If [Persistent Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) is enabled for the service
  # @param importer.persistentVolume.accessModes Persistent Volume [Access Mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
  # @param importer.persistentVolume.storageClass Kubernetes [Storage Classes](https://kubernetes.io/docs/concepts/storage/storage-classes/)
  # @param importer.persistentVolume.size Volume size

  persistentVolume:
    enabled: false
    accessModes:
    - ReadWriteOnce
    storageClass: topolvm-ext4
    size: 50Gi

  # @section importer.resources **Kubernetes [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) settings**
  # @param importer.resources.requests.cpu A CPU request
  # @param importer.resources.requests.memory A memory request
  # @param importer.resources.limits.cpu A CPU limit
  # @param importer.resources.limits.memory A memory limit

  resources:
    requests:
      cpu: 256m
      memory: 512Mi
    limits:
      cpu: 2
      memory: 2048Mi

  # @section importer.cleaner **Cleaner scheme settings**
  # @param importer.cleaner.enabled If clean schemes is enabled for the service
  # @param importer.cleaner.versionLimit Number of backup schemes


  cleaner:
    enabled: true
    versionLimit: 2

    # @section importer.cleaner.resources **Kubernetes [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) settings**
    # @param importer.cleaner.resources.requests.cpu A CPU request
    # @param importer.cleaner.resources.requests.memory A memory request
    # @param importer.cleaner.resources.limits.cpu A CPU limit
    # @param importer.cleaner.resources.limits.memory A memory limit

    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 1000m
        memory: 512Mi

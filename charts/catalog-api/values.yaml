# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry host where On-Premise services' images reside. Format: `host:port`

dgctlDockerRegistry: ''


# @section Common settings

# @param nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
# @param affinity Kubernetes [pod affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity)
# @param tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings
# @param podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
# @param podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
# @param imagePullSecrets Kubernetes [secrets for pulling the image from the registry](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)

nodeSelector: {}
affinity: {}
tolerations: []
podAnnotations: {}
podLabels: {}
imagePullSecrets: []


# @section Kubernetes [Pod Disruption Budget](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#pod-disruption-budgets) settings

# @param pdb.enabled If PDB is enabled for the service
# @param pdb.minAvailable How many pods must be available after the eviction
# @param pdb.maxUnavailable How many pods can be unavailable after the eviction

pdb:
  enabled: false
  minAvailable: ''
  maxUnavailable: 1


# @section Deployment Artifacts Storage settings

# @param dgctlStorage.host S3 host. Format: `host:port`. **required**
# @param dgctlStorage.bucket S3 bucket name. **required**
# @param dgctlStorage.accessKey S3 access key for accessing the bucket. **required**
# @param dgctlStorage.secretKey S3 secret key for accessing the bucket. **required**
# @param dgctlStorage.manifest The path to the [manifest file](https://docs.2gis.com/en/on-premise/overview#nav-lvl2@paramCommon_deployment_steps). Format: `manifests/0000000000.json` <br> This file contains the description of pieces of data that the service requires to operate. **required**

dgctlStorage:
  host: ''
  bucket: ''
  accessKey: ''
  secretKey: ''
  manifest: ''


# @section API settings

# @param api.replicas Number of replicas of API pods

api:
  replicas: 1


  # @section api.image **Deployment settings**

  # @param api.image.repository Repository
  # @param api.image.tag Tag
  # @param api.image.pullPolicy Image [pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)

  image:
    repository: 2gis-on-premise/catalog-api
    tag: 3.580.0
    pullPolicy: IfNotPresent


  # @section Kubernetes [Horizontal Pod Autoscaling](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/) settings

  # @param api.hpa.enabled If HPA is enabled for the service
  # @param api.hpa.minReplicas Lower limit for the number of replicas to which the autoscaler can scale down
  # @param api.hpa.maxReplicas Upper limit for the number of replicas to which the autoscaler can scale up
  # @param api.hpa.scaleDownStabilizationWindowSeconds Scale-down window
  # @param api.hpa.scaleUpStabilizationWindowSeconds Scale-up window
  # @param api.hpa.targetCPUUtilizationPercentage Target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used
  # @param api.hpa.targetMemoryUtilizationPercentage Target average memory utilization (represented as a percentage of requested memory) over all the pods; if not specified the default autoscaling policy will be used

  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    scaleDownStabilizationWindowSeconds: ''
    scaleUpStabilizationWindowSeconds: ''
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: ''


  # @section api.resources Kubernetes [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) settings

  # @param api.resources.requests.cpu A CPU request
  # @param api.resources.requests.memory A memory request
  # @param api.resources.limits.cpu A CPU limit
  # @param api.resources.limits.memory A memory limit

  resources:
    requests:
      cpu: 2
      memory: 6000Mi
    limits:
      cpu: 4
      memory: 6500Mi


  # @section Service settings

  # @param api.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
  # @param api.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
  # @param api.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types)
  # @param api.service.port Service port

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80


  # @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

  # @param api.ingress.enabled If Ingress is enabled for the service
  # @param api.ingress.hosts[0].host Hostname for the Ingress service

  ingress:
    enabled: false
    hosts:
    - host: catalog-api.host

  # @section Database settings

  # @param api.postgres.host PostgreSQL rw/ro hostname or ip. **required**
  # @param api.postgres.port PostgreSQL port
  # @param api.postgres.name PostgreSQL database name. **required**
  # @param api.postgres.username PostgreSQL username. **required**
  # @param api.postgres.password PostgreSQL password. **required**
  # @param api.postgres.queryTimeout Max execution time PostgreSQL query timeout in seconds

  postgres:
    host: ''
    port: 5432
    name: ''
    username: ''
    password: ''
    queryTimeout: 3

  # @section Preloaders settings

  # @param api.preloaders.awaitTimeout Preloaders await timeout

  preloaders:
    awaitTimeout: 60s

# @section Search settings

# @param search.url URL of the Search service, ex: http://{search-api}.svc. This URL should be accessible from all the pods within your Kubernetes cluster. **required**

search:
  url: ''


# @section Keys settings

# @param keys.url URL of the Keys service, ex: http://{keys-api}.svc. This URL should be accessible from all the pods within your Kubernetes cluster. **required**
# @param keys.requestTimeout Timeout for requests to the Keys API
# @param keys.tokens.places Places API key
# @param keys.tokens.geocoder Geocoder API key
# @param keys.tokens.suggest Suggest API key
# @param keys.tokens.categories Categories API key
# @param keys.tokens.regions Regions API key

keys:
  url: ''
  requestTimeout: 5s
  tokens:
    places: ''
    geocoder: ''
    suggest: ''
    categories: ''
    regions: ''


# @section Kubernetes Importer job settings

# @extra importer **Common settings**
# @param importer.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
# @param importer.workerNum Number of parallel import processes (workers)
# @param importer.initialDelaySeconds Number of seconds after the container has started before liveness or readiness probes are initiated
# @param importer.retry.maxAttempts The maximum number of retries download before stopping
# @param importer.retry.delay Delay until the retry attempts

importer:
  nodeSelector: {}
  workerNum: 3
  initialDelaySeconds: 1
  retry:
    maxAttempts: 3
    delay: 1s

  # @section importer.image **Deployment settings**

  # @param importer.image.repository Repository
  # @param importer.image.tag Tag
  # @param importer.image.pullPolicy Image [Pull Policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy)

  image:
    repository: 2gis-on-premise/catalog-importer
    tag: 1.0.9
    pullPolicy: IfNotPresent

  # @section importer.postgres **Database settings**

  # @param importer.postgres.host PostgreSQL rw hostname or ip. **required**
  # @param importer.postgres.port PostgreSQL port
  # @param importer.postgres.name PostgreSQL database name. **required**
  # @param importer.postgres.username PostgreSQL username with rw access. **required**
  # @param importer.postgres.password PostgreSQL password. **required**
  # @param importer.postgres.schemaSwitchEnabled Automatic switch PostgreSQL schema on releases

  postgres:
    host: ''
    port: 5432
    name: ''
    username: ''
    password: ''
    schemaSwitchEnabled: true

  # @section importer.persistentVolume **Persistent Volume settings**

  # @param importer.persistentVolume.enabled If [Persistent Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) is enabled for the service
  # @param importer.persistentVolume.accessModes Persistent Volume [Access Mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
  # @param importer.persistentVolume.storageClass Kubernetes [Storage Classes](https://kubernetes.io/docs/concepts/storage/storage-classes/)
  # @param importer.persistentVolume.size Volume size

  persistentVolume:
    enabled: false
    accessModes:
    - ReadWriteOnce
    storageClass: topolvm-ext4
    size: 50Gi

  # @section importer.resources **Kubernetes [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) settings**
  # @param importer.resources.requests.cpu A CPU request
  # @param importer.resources.requests.memory A memory request
  # @param importer.resources.limits.cpu A CPU limit
  # @param importer.resources.limits.memory A memory limit

  resources:
    requests:
      cpu: 256m
      memory: 512Mi
    limits:
      cpu: 2
      memory: 2048Mi

  # @section importer.cleaner **Cleaner scheme settings**
  # @param importer.cleaner.enabled If clean schemes is enabled for the service
  # @param importer.cleaner.versionLimit Number of backup schemes


  cleaner:
    enabled: true
    versionLimit: 2

    # @section importer.cleaner.resources **Kubernetes [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) settings**
    # @param importer.cleaner.resources.requests.cpu A CPU request
    # @param importer.cleaner.resources.requests.memory A memory request
    # @param importer.cleaner.resources.limits.cpu A CPU limit
    # @param importer.cleaner.resources.limits.memory A memory limit

    resources:
      requests:
        cpu: 50m
        memory: 128Mi
      limits:
        cpu: 1000m
        memory: 512Mi

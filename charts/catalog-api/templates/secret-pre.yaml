apiVersion: v1
kind: Secret
metadata:
  name: {{ include "catalog.secret.jobs.name" . }}
  labels:
    {{- include "catalog.labels" . | nindent 4 }}
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-20"
type: Opaque
data:
  importerDbPassword:  {{ .Values.importer.postgres.password | b64enc }}
  {{- with .Values.dgctlStorage.accessKey }}
  dgctlStorageAccessKey:  {{ . | b64enc }}
  {{- end }}
  {{- with .Values.dgctlStorage.secretKey }}
  dgctlStorageSecretKey:  {{ . | b64enc }}
  {{- end }}
{{- if .Values.importer.postgres.tls.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "catalog.importer.name-psql" . | quote }}
  labels:
    {{- include "catalog.labels" . | nindent 4 }}
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-30"
type: Opaque
data:
  client.crt: {{ required "A valid importer.postgres.tls.cert entry required" .Values.importer.postgres.tls.cert | b64enc | quote }}
  client.key: {{ required "A valid importer.postgres.tls.key entry required" .Values.importer.postgres.tls.key | b64enc | quote }}
  ca.crt: {{ required "A valid importer.postgres.tls.rootCert entry required" .Values.importer.postgres.tls.rootCert | b64enc | quote }}
{{- end }}

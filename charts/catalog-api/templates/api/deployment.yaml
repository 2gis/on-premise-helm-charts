apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "catalog.name" . }}
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
  labels:
    {{- include "catalog.labels" . | nindent 4 }}
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.api.hpa.enabled }}
  replicas: {{ .Values.api.replicas }}
  {{- end }}
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "catalog.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "catalog.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.api.postgres.tls.enabled }}
      initContainers:
      - name: copy-certs
        image: '{{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}'
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        resources:
          {{- toYaml .Values.api.resources | nindent 12 }}
        command:
          - /bin/sh
          - -ec
          - |
            cp /tmp/certs/* /etc/2gis/secret/psql/
            chmod 600 /etc/2gis/secret/psql/client.key
        volumeMounts:
          - name: {{ include "catalog.name-psql-raw" . | quote }}
            mountPath: /tmp/certs
          - name: {{ include "catalog.name-psql" . | quote }}
            mountPath: /etc/2gis/secret/psql
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          env:
            {{- include "catalog.env.settings" . | nindent 12 }}
            {{- include "catalog.env.postgres" . | nindent 12 }}
            {{- include "catalog.env.preloaders" . | nindent 12 }}
            {{- include "catalog.env.search" . | nindent 12 }}
            {{- include "catalog.env.keys" . | nindent 12 }}
            {{- include "catalog.env.license" . | nindent 12 }}
          {{- if .Values.api.postgres.tls.enabled }}
          volumeMounts:
            - name: {{ printf "%s-psql" (include "catalog.name" .) | quote }}
              mountPath: /etc/2gis/secret/psql
          {{- end }}
      {{- if .Values.api.postgres.tls.enabled }}
      volumes:
        - name: {{ include "catalog.name-psql-raw" . | quote }}
          secret:
            secretName: {{ include "catalog.name-psql" . | quote }}
        - name: {{ include "catalog.name-psql" . | quote }}
          emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if and .Values.importer.cleaner.enabled .Values.importer.postgres.schemaSwitchEnabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "catalog.importer.name" . }}-cleaner
  labels:
    {{- include "catalog.importer.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "catalog.importer.name" . }}-cleaner
      labels:
        {{- include "catalog.importer.labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: cleaner-job
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.importer.image.repository }}:{{ .Values.importer.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: [ "importer", "clear" ]
          resources:
            {{- toYaml .Values.importer.cleaner.resources | nindent 12 }}
          env:
            {{- include "catalog.env.importer" . | nindent 12 }}
            {{- if .Values.customCAs }}
            {{- include "catalog.env.custom.ca" . | nindent 12 }}
            {{- end }}
          {{- if .Values.customCAs.bundle }}
          volumeMounts:
            {{- include "catalog.custom.ca.volumeMounts" . | nindent 12 }}
          {{- end }}
      {{- if .Values.customCAs.bundle }}
      volumes:
        {{- include "catalog.custom.ca.volumes" . | nindent 8 }}
      {{- end }}
      {{- with .Values.importer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

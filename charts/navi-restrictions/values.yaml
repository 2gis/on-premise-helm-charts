# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`

dgctlDockerRegistry: ''


# @section Common settings

# @param replicaCount A replica count for the pod
# @param revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).
# @param imagePullSecrets Kubernetes image pull secrets
# @param nameOverride Base name to use in all the Kubernetes entities deployed by this chart
# @param fullnameOverride Base fullname to use in all the Kubernetes entities deployed by this chart
# @param podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
# @param podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
# @param labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
# @param podSecurityContext Kubernetes [pod security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
# @param nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
# @param tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings
# @param affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity)
# @param priorityClassName Kubernetes [pod priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/)
# @param terminationGracePeriodSeconds Kubernetes [termination grace period](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/)
# @param prometheusEnabled If Prometheus scrape is enabled

replicaCount: 1
revisionHistoryLimit: 3
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
podAnnotations: {}
podLabels: {}
labels: {}
podSecurityContext: {}
nodeSelector: {}
tolerations: []
affinity: {}
priorityClassName: ''
terminationGracePeriodSeconds: 120
prometheusEnabled: true


# @section Docker registry settings

# @param api.image.repository API service image repository
# @param api.image.pullPolicy API service pull policy
# @param api.image.tag API service image tag
# @param cron.image.repository Syncer service image repository
# @param cron.image.pullPolicy Syncer service pull policy
# @param cron.image.tag Syncer service image tag


# @section Service account settings

# @param serviceAccount.create Specifies whether a service account should be created
# @param serviceAccount.annotations Annotations to add to the service account
# @param serviceAccount.name The name of the service account to use. If not set and create is true, a name is generated using the fullname template

serviceAccount:
  create: false
  annotations: {}
  name: ''


# @section Kubernetes [Pod Disruption Budget](https://kubernetes.io/docs/concepts/workloads/pods/disruptions/#pod-disruption-budgets) settings

# @param pdb.enabled If PDB is enabled for the service
# @param pdb.minAvailable How many pods must be available after the eviction
# @param pdb.maxUnavailable How many pods can be unavailable after the eviction

pdb:
  enabled: true
  minAvailable: ''
  maxUnavailable: 1


# @section Strategy settings

# @param strategy.type Type of Kubernetes deployment. Can be `Recreate` or `RollingUpdate`
# @param strategy.rollingUpdate.maxUnavailable Maximum number of pods that can be created over the desired number of pods when doing [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment)
# @param strategy.rollingUpdate.maxSurge Maximum number of pods that can be unavailable during the [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment) process

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1


# @section API service settings

# @param naviBackHost Hostname of Navi-Back service **required**
# @param naviBackHostScheme Scheme (http/https) to access Navi-Back service
# @param naviCastleHost Hostname of Navi-Castle service **required**
# @param naviCastleHostScheme Scheme (http/https) to access Navi-Castle service
naviBackHost: ''
naviBackHostScheme: http
naviCastleHost: ''
naviCastleHostScheme: http

# @param api.key API key **required**
# @param api.debug If the debug mode is enabled
# @param api.isInitDb If `true` and the database does not exist, it will be created
# @param api.attractorUri Attractor URI of Navi-Back service
# @param api.securityContext Kubernetes [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)

api:
  key: ''
  debug: false
  isInitDb: true
  attractorUri: attract/1.0.0/global/

  securityContext: {}

  image:
    repository: 2gis-on-premise/navi-restrictions-api
    pullPolicy: IfNotPresent
    tag: 1.0.1

  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 256Mi

  # @extra api.service **Service settings.**
  # @param api.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types)
  # @param api.service.port Service port
  # @param api.service.targetPort Port inside the container
  # @param api.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
  # @param api.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)

  service:
    type: ClusterIP
    port: 80
    targetPort: 8000
    annotations: {}
    labels: {}

  # @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

  # @param api.ingress.enabled If Ingress is enabled for the service
  # @param api.ingress.className Name of the Ingress controller class
  # @param api.ingress.hosts[0].host Hostname for the Ingress service
  # @param api.ingress.hosts[0].paths[0].path Path of the host for the Ingress service
  # @param api.ingress.hosts[0].paths[0].pathType Type of the path for the Ingress service
  # @param api.ingress.tls TLS configuration

  ingress:
    enabled: false
    className: nginx
    hosts:
    - host: navi-restrictions.example.com
      paths:
      - path: /
        pathType: Prefix
    tls: []
    # - hosts:
    #   - navi-restrictions.example.com
    #   secretName: secret.tls

  # @section Kubernetes [Horizontal Pod Autoscaling](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/) settings

  # @param api.hpa.enabled If HPA is enabled for the service
  # @param api.hpa.minReplicas Lower limit for the number of replicas to which the autoscaler can scale down
  # @param api.hpa.maxReplicas Upper limit for the number of replicas to which the autoscaler can scale up
  # @param api.hpa.scaleDownStabilizationWindowSeconds Scale-down window
  # @param api.hpa.scaleUpStabilizationWindowSeconds Scale-up window
  # @param api.hpa.targetCPUUtilizationPercentage Target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used
  # @param api.hpa.targetMemoryUtilizationPercentage Target average memory utilization (represented as a percentage of requested memory) over all the pods; if not specified the default autoscaling policy will be used

  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    scaleDownStabilizationWindowSeconds: ''
    scaleUpStabilizationWindowSeconds: ''
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: ''

  # @section Kubernetes [Vertical Pod Autoscaling](https://github.com/kubernetes/autoscaler/blob/master/vertical-pod-autoscaler/README.md) settings

  # @param api.vpa.enabled If VPA is enabled for the service
  # @param api.vpa.updateMode VPA [update mode](https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler#quick-start)
  # @param api.vpa.minAllowed.cpu Lower limit for the number of CPUs to which the autoscaler can scale down
  # @param api.vpa.minAllowed.memory Lower limit for the RAM size to which the autoscaler can scale down
  # @param api.vpa.maxAllowed.cpu Upper limit for the number of CPUs to which the autoscaler can scale up
  # @param api.vpa.maxAllowed.memory Upper limit for the RAM size to which the autoscaler can scale up

  vpa:
    enabled: false
    updateMode: Auto
    minAllowed:
      cpu: 500m
      memory: 256Mi
    maxAllowed:
      cpu: 2000m
      memory: 1024Mi


# @section Database settings

# @param postgres.host PostgreSQL host **required**
# @param postgres.port PostgreSQL port
# @param postgres.name PostgreSQL database name **required**
# @param postgres.user PostgreSQL username **required**
# @param postgres.password PostgreSQL password. **required**

postgres:
  host: ''
  port: 5432
  name: ''
  user: ''
  password: ''


# @section Cron job settings

# @param cron.enabled If Cron job is enabled
# @param cron.schedule Cron job schedule
# @param cron.concurrencyPolicy Cron job concurrency policy: `Allow` or `Forbid`
# @param cron.successfulJobsHistoryLimit How many completed and failed jobs should be kept
# @param cron.containerPort Cron container port
# @param cron.edgesUriTemplate URL template for getting edges
# @param cron.edgeAttributesUriTemplate URL template for getting an edge's details
# @param cron.projects List of projects to get data for
# @param cron.maxAttributesFetcherRps Maximum amount oif requests to `edgeAttributesUrlTemplate` per second

cron:
  enabled: false
  schedule: 1 * * * *
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  containerPort: 8000
  edgesUriTemplate: restrictions_json/{project}/{date_str}_{hour}.json
  edgeAttributesUriTemplate: develop/edge?edge_id={edge_id}&offset=200&routing=carrouting
  projects:
  - moscow
  maxAttributesFetcherRps: 25

  image:
    repository: 2gis-on-premise/navi-restrictions-syncer
    pullPolicy: IfNotPresent
    tag: 1.0.1

  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 256Mi


# @section Limits

# @extra api.resources **Limits for the API service**
# @param api.resources.requests.cpu A CPU request
# @param api.resources.requests.memory A memory request
# @param api.resources.limits.cpu A CPU limit
# @param api.resources.limits.memory A memory limit

# @extra cron.resources **Limits for the Cron service**
# @param cron.resources.requests.cpu A CPU request
# @param cron.resources.requests.memory A memory request
# @param cron.resources.limits.cpu A CPU limit
# @param cron.resources.limits.memory A memory limit


# @section customCAs **Custom Certificate Authority**

# @param customCAs.bundle Custom CA [text representation of the X.509 PEM public-key certificate](https://www.rfc-editor.org/rfc/rfc7468#section-5.1)
# @param customCAs.certsPath Custom CA bundle mount directory in the container. If empty, the default value: "/usr/local/share/ca-certificates"

customCAs:
  bundle: ''
# bundle: |
    # -----BEGIN CERTIFICATE-----
    # ...
    # -----END CERTIFICATE-----
  certsPath: ''

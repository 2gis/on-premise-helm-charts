---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "navi-restrictions.fullname" . }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "navi-restrictions.labels" . | nindent 4 }}
spec:
  {{- if not .Values.api.hpa.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "navi-restrictions.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ (include (print $.Template.BasePath "/secret.yaml") . | fromYaml).data | toYaml | sha256sum }}
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{ .Values.api.service.targetPort | quote }}
        {{- if .Values.prometheusEnabled }}
        prometheus.io/scrape: "true"
        {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "navi-restrictions.labels" . | nindent 8 }}
        {{- include "navi-restrictions.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "navi-restrictions.serviceAccountName" . }}
      {{- with .Values.affinity }}
      affinity:
        {{- tpl (. | toYaml) $ | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}
          image: '{{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}'
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.targetPort }}
              protocol: TCP
          livenessProbe: &healthProbe
            httpGet:
              path: /healthcheck/
              port: http
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe: *healthProbe
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          {{- with .Values.api.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: DEBUG
              value: "{{ .Values.api.debug | ternary "True" "False" }}"
            - name: IS_INIT_DB
              value: "{{ .Values.api.isInitDb | ternary "True" "False" }}"
            - name: DB_HOST
              value: {{ required "A valid .Values.db.host entry required" .Values.db.host | quote }}
            - name: DB_PORT
              value: {{ required "A valid .Values.db.port entry required" .Values.db.port | quote }}
            - name: DB_NAME
              value: {{ required "A valid .Values.db.name entry required" .Values.db.name | quote }}
            - name: DB_USER
              value: {{ required "A valid .Values.db.user entry required" .Values.db.user | quote }}
            - name: ATTRACTOR_URL
              value: {{ required "A valid .Values.api.attractorUrl entry required" .Values.api.attractorUrl | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "navi-restrictions.fullname" . }}
                  key: dbPassword
            - name: RESTRICTIONS_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "navi-restrictions.fullname" . }}
                  key: keysApi

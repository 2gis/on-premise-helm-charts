# @section License settings

# @extra license **Common settings**
# @param license.path License file path in storage.
# @param license.updatePeriod Duration how often service should fetch new license from storage.
# @param license.retryPeriod Duration how often service should try to fetch license from storage if previous attempts were failing.
# @param license.softBlockPeriod Duration until the license expiration time when license service should respond with 'soft' block status.

license:
  path: ''

  updatePeriod: 1h
  retryPeriod: 30s

  softBlockPeriod: 72h

# @section Storage settings

# @extra storage **Common settings**
# @param storage.host S3 endpoint. Format: `host:port`.
# @param storage.bucket S3 bucket name.
# @param storage.accessKey S3 access key for accessing the bucket.
# @param storage.secretKey S3 secret key for accessing the bucket.

storage:
  host: ''
  bucket: ''
  accessKey: ''
  secretKey: ''

# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.
# @param imagePullSecrets Kubernetes image pull secrets for the Docker Registry endpoint.

dgctlDockerRegistry: ''
imagePullSecrets: []

# @section Kubernetes [deployment](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/) settings

# @extra deployment **Common settings**
# @param deployment.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param deployment.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param deployment.podAnnotations Kubernetes pod [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param deployment.podLabels Kubernetes pod [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param deployment.replicas A replica count for the pod.
# @param deployment.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param deployment.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.
# @param deployment.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.

deployment:
  annotations: {}
  labels: {}

  podAnnotations: {}
  podLabels: {}

  replicas: 1
  nodeSelector: {}
  affinity: {}
  tolerations: {}

  # @extra deployment.image **Docker image settings**
  # @param deployment.image.repository Docker Repository.
  # @param deployment.image.tag Docker image tag.
  # @param deployment.image.pullPolicy Kubernetes pull policy for the service's Docker image.

  image:
    repository: 2gis-on-premise/pasportool
    tag: 1.0.0
    pullPolicy: IfNotPresent

  # @extra deployment.resources **Kubernetes [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) settings**
  # @param deployment.resources.requests.cpu A CPU request.
  # @param deployment.resources.requests.memory A memory request.
  # @param deployment.resources.limits.cpu A CPU limit.
  # @param deployment.resources.limits.memory A memory limit.

  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 1
      memory: 512Mi

# @section Kubernetes [service](https://kubernetes.io/docs/concepts/services-networking/service/) settings

# @extra service **Common settings**
# @param service.port Service port.
# @param service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param service.annotations Kubernetes service [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param service.labels Kubernetes service [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

service:
  port: 80
  type: ClusterIP
  annotations: {}
  labels: {}

# @section Kubernetes [ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

# @extra ingress **Common settings**
# @param ingress.enabled If ingress is enabled for the service.
# @param ingress.hosts[0].host Hostname for the ingress service.

ingress:
  enabled: false
  hosts:
    - host: pasportool.host

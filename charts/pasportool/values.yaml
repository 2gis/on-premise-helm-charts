# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.

dgctlDockerRegistry: ''

# @section Common settings

# @param imagePullSecrets Kubernetes image pull secrets.
# @param imagePullPolicy Kubernetes image pull policy.
# @param licensePath License file path in storage.
# @param updatePeriod Duration how often service should fetch new license from storage.
# @param retryPeriod Duration how often service should try to fetch license from storage if previous attempts were failing.
# @param softBlockPeriod Duration until the license expiration time when license service should respond with 'soft' block status.

imagePullSecrets: []
imagePullPolicy: IfNotPresent

licensePath: ''

updatePeriod: 1h
retryPeriod: 30s

softBlockPeriod: 72h

# @section Deployment Artifacts Storage settings

# @param dgctlStorage.host S3 endpoint. Format: `host:port`.
# @param dgctlStorage.bucket S3 bucket name.
# @param dgctlStorage.accessKey S3 access key for accessing the bucket.
# @param dgctlStorage.secretKey S3 secret key for accessing the bucket.

dgctlStorage:
  host: ''
  bucket: ''
  accessKey: ''
  secretKey: ''

# @section Pasportool service settings

# @extra pasportool **Common settings**
# @param pasportool.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param pasportool.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param pasportool.podAnnotations Kubernetes pod [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param pasportool.podLabels Kubernetes pod [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param pasportool.replicas A replica count for the pod.
# @param pasportool.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param pasportool.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.
# @param pasportool.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.

pasportool:
  annotations: {}
  labels: {}

  podAnnotations: {}
  podLabels: {}

  replicas: 1
  nodeSelector: {}
  affinity: {}
  tolerations: {}

  # @extra pasportool.image **Docker image settings**
  # @param pasportool.image.repository Docker Repository.
  # @param pasportool.image.tag Docker image tag.

  image:
    repository: 2gis-on-premise/pasportool
    tag: 1.0.0

  # @extra pasportool.resources **Kubernetes [resource management](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) settings**
  # @param pasportool.resources.requests.cpu A CPU request.
  # @param pasportool.resources.requests.memory A memory request.
  # @param pasportool.resources.limits.cpu A CPU limit.
  # @param pasportool.resources.limits.memory A memory limit.

  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 1
      memory: 512Mi

  # @section Kubernetes [service](https://kubernetes.io/docs/concepts/services-networking/service/) settings

  # @param pasportool.service.port Service port.
  # @param pasportool.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  # @param pasportool.service.annotations Kubernetes service [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param pasportool.service.labels Kubernetes service [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  service:
    port: 80
    type: ClusterIP
    annotations: {}
    labels: {}

  # @section Kubernetes [ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

  # @param pasportool.ingress.enabled If ingress is enabled for the service.
  # @param pasportool.ingress.hosts[0].host Hostname for the ingress service.

  ingress:
    enabled: false
    hosts:
      - host: 'pasportool.ingress.host'

{{- with .Values.pasportool.ingress -}}
{{- if .enabled -}}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "pasportool.name" $ }}
  {{- if not (empty .annotations) }}
  annotations:
    {{- toYaml .annotations | nindent 4 }}
  {{- end }}
  labels:
    {{- include "pasportool.labels" $ | nindent 4 }}
    {{- if not (empty .labels) }}
    {{- toYaml .labels | nindent 4 }}
    {{- end }}
spec:
  {{- if .className }}
  ingressClassName: {{ .className }}
  {{- end }}
  {{- if not (empty .tls) }}
  tls:
    {{- range $idx_tls := .tls }}
    {{ $tls_path := printf "$.Values.pasportool.ingress.tls[%d]" $idx_tls }}
    - hosts:
      {{- $hosts := required (print "A valid " $tls_path ".hosts entry is required") .hosts}}
      {{- range $idx_host := .hosts }}
        - {{ required (printf "A valid %s.hosts[%d] entry is required" $tls_path $idx_host) . | quote }}
      {{- end }}
      secretName: {{ required (print "A valid " $tls_path ".secretName entry is required") .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- $hosts := required "A valid $.Values.pasportool.ingress.hosts entry is required" .hosts}}
    {{- range $idx_host := $hosts }}
    {{- $host_path := printf "$.Values.pasportool.ingress.hosts[%d]" $idx_host }}
    - host: {{ required (print "A valid " $host_path ".host entry is required") .host | quote }}
      http:
        paths:
          {{- $paths := required (print "A valid " $host_path ".paths entry is required") .paths }}
          {{- range $idx_path := $paths }}
          {{- $path_path := printf "%s.paths[%d]" $host_path $idx_path }}
          - path: {{ required (print "A valid " $path_path ".path entry is required") .path }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "pasportool.name" $ }}
                port:
                  name: http
          {{- end }}
    {{- end }}

{{- end -}}
{{- end -}}

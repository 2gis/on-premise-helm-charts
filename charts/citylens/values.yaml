# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port` **Required**

dgctlDockerRegistry: ''

# @section Deployment Artifacts Storage settings

# @param dgctlStorage.host S3 host. Format: `host:port`. **Required**
# @param dgctlStorage.secure Set to `true` if dgctlStorage.host must be accessed via https. **Required**
# @param dgctlStorage.bucket S3 bucket name. **Required**
# @param dgctlStorage.accessKey S3 access key for accessing the bucket. **Required**
# @param dgctlStorage.secretKey S3 secret key for accessing the bucket. **Required**
# @param dgctlStorage.manifest The path to the [manifest file](https://docs.2gis.com/en/on-premise/overview#nav-lvl2@paramCommon_deployment_steps). Format: `manifests/0000000000.json` <br> This file contains the description of pieces of data that the service requires to operate. **Required**
# @param dgctlStorage.verifySsl Set to `false` if dgctlStorage.host must be accessed via https without certificate validation. **Required**
# @param dgctlStorage.region S3 region name.

dgctlStorage:
  host: ''
  secure: false
  bucket: ''
  accessKey: ''
  secretKey: ''
  manifest: ''
  verifySsl: true
  region: ''

# @section Citylens API service settings

# @section Image settings

# @param api.image.repository Repository.
# @param api.image.tag Tag.
# @param api.image.pullPolicy Pull Policy.

# @section Resources settings

# @param api.replicas A replica count for the pod.

# @param api.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param api.resources.requests.cpu A CPU request.
# @param api.resources.requests.memory A memory request.
# @param api.resources.limits.cpu A CPU limit.
# @param api.resources.limits.memory A memory limit.

# @section Service settings

# @param api.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param api.service.port Service port.
# @param api.service.targetPort Service target port.
# @param api.service.metricsTargetPort Service prometheus metrics target port. Metrics are available on /healthz/metrics endpoint.
# @param api.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param api.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

# @param api.ingress.enabled If Ingress is enabled for the service.
# @param api.ingress.className Resource that contains additional configuration including the name of the controller that should implement the class.
# @param api.ingress.annotations.nginx.ingress.kubernetes.io/proxy-body-size Proxy-body-size parameter (default 1MB).
# @param api.ingress.hosts[0].host Hostname for the Ingress service. Ex.: 'citylens.api'.
# @param api.ingress.hosts[0].paths[0].path Endpoint of host.
# @param api.ingress.hosts[0].paths[0].pathType Path type of endpoint.
# @param api.ingress.tls Tls settings for https.

# @section Auth settings for authentication

# @param api.auth.enabled If authentication is needed.
# @param api.auth.authServerUrl API URL of authentication service, OIDC-compatibility expected. Ex.: `http(s)://keycloak.ingress.host/`. **Required**
# @param api.auth.storeOIDCUserinfoFields List of fields from OIDC userinfo_endpoint response to store for users, uploading tracks. Ex.: `['en_name', 'id_no']`.
# @param api.auth.realm Authentication realm. Used for constructing openid-configuration endpoint: `/realms/realm/.well-known/openid-configuration` if realm defined, `/.well-known/openid-configuration` othervise. Ex: CityLens_app
# @param api.auth.verifySsl Enable\Disable SSL check.

# @section Bearer tokens for callbacks & predictors

# @param api.auth.predictorsTokens.camcom Bearer token, expected on CamCom callback endpoint and CamCom prediction endpoint (if integration with CamCom enabled).

# @section Licensing server settings

# @param api.licensing.url Licensing server v2 URL. https://license.svc. **Required**

# @section Custom settings

# @param api.showDocs Show documentation link if needed.
# @param api.logLevel Log level.
# @param api.metricsAppName Value for service prometheus metrics label "app_name".

# @section Metadata settings

# @param api.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param api.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param api.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param api.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param api.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param api.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param api.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

api:
  image:
    repository: 2gis-on-premise/citylens-api
    pullPolicy: IfNotPresent
    tag: 1.17.5

  replicas: 4

  revisionHistoryLimit: 3

  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80
    targetPort: 8000
    metricsTargetPort: 8001

  ingress:
    enabled: false
    className: ''
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
    hosts:
    - host: citylens-api.host
      paths:
      - path: /
        pathType: Prefix
    tls: []
      # - hosts:
      #    host: 'citylens-api.host'
      #  secretName: ''

  auth:
    enabled: true
    authServerUrl: ''
    realm: ''
    storeOIDCUserinfoFields: []
    verifySsl: true
    predictorsTokens:
      camcom: ''

  licensing:
    url: ''

  showDocs: false

  logLevel: INFO

  metricsAppName: citylens-api

  annotations: {}
  labels: {}
  podAnnotations: {}
  podLabels: {}
  nodeSelector: {}
  affinity: {}
  tolerations: {}

# @section Citylens web service settings

# @section Image settings

# @param web.image.repository Repository.
# @param web.image.tag Tag.
# @param web.image.pullPolicy Pull Policy.

# @section Resources settings

# @param web.replicas A replica count for the pod.

# @param web.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param web.resources.requests.cpu A CPU request.
# @param web.resources.requests.memory A memory request.
# @param web.resources.limits.cpu A CPU limit.
# @param web.resources.limits.memory A memory limit.

# @section Service settings

# @param web.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param web.service.port Service port.
# @param web.service.targetPort Service target port.
# @param web.service.metricsTargetPort Service prometheus metrics target port. Metrics are available on /healthz/metrics endpoint.
# @param web.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param web.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param web.service.metricsEnabled Enable prometheus metrics

# @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

# @param web.ingress.enabled If Ingress is enabled for the service.
# @param web.ingress.className Resource that contains additional configuration including the name of the controller that should implement the class.
# @param web.ingress.annotations.nginx.ingress.kubernetes.io/proxy-body-size Proxy-body-size parameter (default 1MB).
# @param web.ingress.hosts[0].host Hostname for the Ingress service. Ex.: 'citylens.web'.
# @param web.ingress.hosts[0].paths[0].path Endpoint of host.
# @param web.ingress.hosts[0].paths[0].pathType Path type of endpoint.
# @param web.ingress.tls Tls settings for https.

# @section Auth settings for authentication

# @param web.auth.enabled If authentication is needed.
# @param web.auth.realm Authentication realm. Used for constructing openid-configuration endpoint: `/realms/realm/.well-known/openid-configuration` if realm defined, `/.well-known/openid-configuration` othervise. Ex: Inspection_Portal_backend
# @param web.auth.authServerUrl API URL of authentication service, OIDC-compatibility expected. Ex: `http(s)://keycloak.ingress.host` **Required**
# @param web.auth.clientId Client id from keycloak. Ex: citylens-web-client **Required**
# @param web.auth.clientSecret Client Secret from keycloak. **Required**
# @param web.auth.verifySsl Enable\Disable SSL check.
# @param web.auth.pkce Enable\Disable PKCE (Proof Key for Code Exchange) in Authorization Code flow.

# @section Custom settings

# @param web.logLevel Log level.
# @param web.metricsAppName Value for service prometheus metrics label "app_name".
# @param web.pgPoolSize Postgres: maximum number of connections in connections pool to maintain.
# @param web.pgPoolMaxOverflow Postgres: maximum number of extra connections in connections pool (relative of pgPoolSize).

# @section Metadata settings

# @param web.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param web.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param web.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param web.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param web.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param web.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param web.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

web:
  image:
    repository: 2gis-on-premise/citylens-web
    pullPolicy: IfNotPresent
    tag: 1.17.5

  replicas: 1

  revisionHistoryLimit: 3

  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80
    targetPort: 5000
    metricsTargetPort: 5001
    metricsEnabled: true

  ingress:
    enabled: false
    className: ''
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: '0'
    hosts:
    - host: citylens-web.host
      paths:
      - path: /
        pathType: Prefix
    tls: []
      # - hosts:
      #    host: 'citylens-web.host'
      #  secretName: ''

  auth:
    enabled: false
    realm: ''
    authServerUrl: ''
    clientId: ''
    clientSecret: ''
    verifySsl: true
    pkce: false

  pgPoolSize: 5
  pgPoolMaxOverflow: 10

  logLevel: WARNING
  metricsAppName: citylens-web

  annotations: {}
  labels: {}
  podAnnotations: {}
  podLabels: {}
  nodeSelector: {}
  affinity: {}
  tolerations: {}

# @section Citylens workers service settings

# @section Resources settings

# @param worker.resources.requests.cpu A CPU request.
# @param worker.resources.requests.memory A memory request.
# @param worker.resources.limits.cpu A CPU limit.
# @param worker.resources.limits.memory A memory limit.

worker:

  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi

# @section Citylens Frames Saver worker's settings

# @param worker.framesSaver.replicas A replica count for the pod.

# @param worker.framesSaver.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.framesSaver.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.framesSaver.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.framesSaver.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.framesSaver.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.framesSaver.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.framesSaver.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.framesSaver.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  framesSaver:

    replicas: 4

    revisionHistoryLimit: 3

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

# @section Citylens Camcom sender worker's settings

# @param worker.camcomSender.enabled If Camcom Sender worker is enabled for the service.

# @param worker.camcomSender.replicas A replica count for the pod.

# @param worker.camcomSender.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.camcomSender.apiKey A key for Camcom's API access
# @param worker.camcomSender.endpointUrl Camcom endpoint URL

# @param worker.camcomSender.requestTimeout Camcom request timeout
# @param worker.camcomSender.requestRateLimit.calls Camcom calls rate limit
# @param worker.camcomSender.requestRateLimit.period Camcom period rate limit
# @param worker.camcomSender.requestRetries Camcom request retries
# @param worker.camcomSender.requestRetriesBackoff request retries backoff

# @param worker.camcomSender.sourceEnv Environment name to send to CamCam (source_env field in request), ignored if empty.


# @param worker.camcomSender.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.camcomSender.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.camcomSender.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.camcomSender.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.camcomSender.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.camcomSender.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.camcomSender.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  camcomSender:

    enabled: false

    replicas: 1

    revisionHistoryLimit: 3

    apiKey: ''
    endpointUrl: ''
    requestTimeout: 1
    requestRateLimit:
      calls: 1000
      period: 60
    requestRetries: 3
    requestRetriesBackoff: 1
    sourceEnv: ''

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

# @section Citylens Predictions Saver worker's settings

# @param worker.predictionsSaver.replicas A replica count for the pod.

# @param worker.predictionsSaver.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.predictionsSaver.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.predictionsSaver.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.predictionsSaver.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.predictionsSaver.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.predictionsSaver.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.predictionsSaver.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.predictionsSaver.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  predictionsSaver:

    replicas: 1

    revisionHistoryLimit: 3

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

# @section Citylens Logs Saver worker's settings

# @param worker.logsSaver.replicas A replica count for the pod.

# @param worker.logsSaver.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.logsSaver.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.logsSaver.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.logsSaver.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.logsSaver.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.logsSaver.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.logsSaver.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.logsSaver.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  logsSaver:

    replicas: 1

    revisionHistoryLimit: 3

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

# @section Citylens Reporter Pro worker's settings (synchronization with Pro)

# @param worker.reporterPro.enabled If integration with Pro is enabled for the service.
# @param worker.reporterPro.predictors From what sources detections should be localized.
# @param worker.reporterPro.trackTimeoutDays Timeout in days for track to be considered being uploading.

# @param worker.reporterPro.replicas A replica count for the pod.

# @param worker.reporterPro.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.reporterPro.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.reporterPro.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.reporterPro.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.reporterPro.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.reporterPro.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.reporterPro.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.reporterPro.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  reporterPro:

    enabled: true

    predictors: [camcom]
    trackTimeoutDays: 1

    replicas: 1

    revisionHistoryLimit: 3

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

# @section Citylens Reporter Pro Tracks worker's settings (track status actualization, requires Reporter Pro)

# @param worker.reporterProTracks.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.reporterProTracks.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.reporterProTracks.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.reporterProTracks.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.reporterProTracks.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.reporterProTracks.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.reporterProTracks.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.reporterProTracks.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  reporterProTracks:

    revisionHistoryLimit: 3

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

# @section Citylens Track Metadata Saver worker's settings

# @param worker.trackMetadataSaver.replicas A replica count for the pod.

# @param worker.trackMetadataSaver.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.trackMetadataSaver.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.trackMetadataSaver.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.trackMetadataSaver.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.trackMetadataSaver.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.trackMetadataSaver.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.trackMetadataSaver.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.trackMetadataSaver.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  trackMetadataSaver:

    replicas: 1

    revisionHistoryLimit: 3

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}


# @section Citylens Tracks Uploader worker's settings

# @param worker.tracksUploader.enabled If Tracks Uploader worker is enabled for the service.

# @param worker.tracksUploader.replicas A replica count for the pod.

# @param worker.tracksUploader.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.tracksUploader.api Destination API address citylens. Ex.: http(s)://citylens-api.host/
# @param worker.tracksUploader.source Source address citylens-web. Ex.: http(s)://citylens-web.host
# @param worker.tracksUploader.verifySsl Set to `false` if tracksUploader.api or tracksUploader.source must be accessed via https without certificate validation **Required**
# @param worker.tracksUploader.reloadTrackTimeoutSeconds Track reload timeout, seconds.

# @param worker.tracksUploader.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.tracksUploader.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.tracksUploader.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.tracksUploader.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.tracksUploader.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.tracksUploader.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.tracksUploader.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  tracksUploader:

    enabled: false

    replicas: 1

    revisionHistoryLimit: 3

    api: ''
    source: ''
    verifySsl: true
    reloadTrackTimeoutSeconds: 900  # 15 minutes

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}


# @section Citylens Map Matcher worker's settings

# @param worker.mapMatcher.enabled If Map Matcher worker is enabled for the service.

# @param worker.mapMatcher.replicas A replica count for the pod.

# @param worker.mapMatcher.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.mapMatcher.baseUrl Map Matching API address. Ex.: http://navi-front.svc **Required**
# @param worker.mapMatcher.key Map Matching API key. **Required**
# @param worker.mapMatcher.interpolation Set to `true` for compatibility with Map Matching API which requires gps points timestamps in seconds as integers (w/o millisecond precision support).
# @param worker.mapMatcher.retries Total number of retries in case of Map Matching API unavailability/errors.
# @param worker.mapMatcher.timeoutSeconds Map Matching API timeout, seconds.

# @param worker.mapMatcher.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.mapMatcher.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.mapMatcher.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.mapMatcher.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.mapMatcher.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.mapMatcher.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.mapMatcher.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  mapMatcher:

    enabled: false

    replicas: 1

    baseUrl: ''
    key: ''
    interpolation: true
    retries: 3
    timeoutSeconds: 30

    revisionHistoryLimit: 3

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}


# @section Citylens Detections Localizer worker's settings

# @param worker.detectionsLocalizer.enabled If Detections Localizer worker is enabled for the service.
# @param worker.detectionsLocalizer.predictors From what sources detections should be localized.

# @param worker.detectionsLocalizer.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.detectionsLocalizer.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.detectionsLocalizer.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.detectionsLocalizer.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.detectionsLocalizer.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.detectionsLocalizer.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.detectionsLocalizer.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.detectionsLocalizer.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  detectionsLocalizer:

    enabled: false

    predictors: [camcom]

    revisionHistoryLimit: 3

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}


# @section Citylens Lifecycle Controller worker's settings (depends on Detections Localizer worker)

# @param worker.lifecycleController.scheduledLocalizationTimeoutMinutes Timeout in minutes after that track localization will be rescheduled if it was scheduled and not done.
# @param worker.lifecycleController.minTrackLocalizationIntervalMinutes Interval in minutes between scheduling track detections localization again.

# @param worker.lifecycleController.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.lifecycleController.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.lifecycleController.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.lifecycleController.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.lifecycleController.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.lifecycleController.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.lifecycleController.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.lifecycleController.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  lifecycleController:

    scheduledLocalizationTimeoutMinutes: 1380  # 23h
    minTrackLocalizationIntervalMinutes: 10

    revisionHistoryLimit: 3

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}


# @section Citylens Dashboard batch events worker's settings

# @param worker.dashboardBatchEvents.replicas A replica count for the pod.

# @section Citylens Dashboard batch events worker's Image settings

# @param worker.dashboardBatchEvents.image.repository Repository.
# @param worker.dashboardBatchEvents.image.tag Tag.
# @param worker.dashboardBatchEvents.image.pullPolicy Pull Policy.

# @param worker.dashboardBatchEvents.logLevel Worker's log level.

# @param worker.dashboardBatchEvents.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.dashboardBatchEvents.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.dashboardBatchEvents.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.dashboardBatchEvents.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.dashboardBatchEvents.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.dashboardBatchEvents.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.dashboardBatchEvents.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.dashboardBatchEvents.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

  dashboardBatchEvents:

    replicas: 1

    image:
      repository: 2gis-on-premise/citylens-workers
      pullPolicy: IfNotPresent
      tag: 1.17.5

    revisionHistoryLimit: 3

    logLevel: INFO

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}


# @section Migration job settings

# @param migrations.enabled If migrations needed.

# @param migrations.image.repository Repository.
# @param migrations.image.tag Tag.
# @param migrations.image.pullPolicy Pull Policy

# @param migrations.resources.requests.cpu A CPU request.
# @param migrations.resources.requests.memory A memory request.
# @param migrations.resources.limits.cpu A CPU limit.
# @param migrations.resources.limits.memory A memory limit.
# @param migrations.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).

migrations:

  enabled: true

  image:
    repository: 2gis-on-premise/citylens-database
    pullPolicy: IfNotPresent
    tag: 1.17.1

  resources:
    requests:
      cpu: 100m
      memory: 1Gi
    limits:
      cpu: 200m
      memory: 2Gi

  nodeSelector: {}

# @section Kafka settings

# @param kafka.bootstrapServer A Kafka broker endpoint. **Required**
# @param kafka.username A Kafka username for connection. **Required**
# @param kafka.password A Kafka password for connection. **Required**
# @param kafka.securityProtocol Protocol used to communicate with brokers. Currently supported: SASL_PLAINTEXT.
# @param kafka.saslMechanism Authentication mechanism. Valid values are: PLAIN, SCRAM-SHA-256, SCRAM-SHA-512.
# @param kafka.produceTimeoutSeconds Timeout for producer.
# @param kafka.topics.frames List of topics for Frames saver worker. **Required**
# @param kafka.topics.tracks List of topics for Tracks metadata worker. **Required**
# @param kafka.topics.pro Topic for frames synchronization with Pro (used by Reporter pro worker). **Required**
# @param kafka.topics.proObjects Topic for localized detections synchronization with Pro (used by Reporter pro worker, requires Detections Localizer worker). **Required**
# @param kafka.topics.proDrivers Topic for drivers tracks synchronization with Pro (used by Reporter pro worker). **Required**
# @param kafka.topics.uploader Topic for Uploader worker. **Required**
# @param kafka.topics.logs Topic for citylens mobile app logs, uploaded via citylens-api. **Required**
# @param kafka.topics.framesLifecycle Topic for frames lifecycle events. **Required**
# @param kafka.topics.objectsLifecycle Topic for objects lifecycle events. **Required**
# @param kafka.topics.tracksLifecycle Topic for tracks lifecycle events. **Required**
# @param kafka.topics.predictions Topic for predictions events from detectors. **Required**
# @param kafka.consumerGroups.prefix Kafka topics prefix. **Required**

kafka:

  bootstrapServer: ''
  username: ''
  password: ''
  securityProtocol: SASL_PLAINTEXT
  saslMechanism: SCRAM-SHA-512
  produceTimeoutSeconds: 5
  topics:
    frames: ''
    tracks: ''
    pro: ''
    proObjects: ''
    proDrivers: ''
    logs: ''
    uploader: ''
    framesLifecycle: ''
    objectsLifecycle: ''
    tracksLifecycle: ''
    predictions: ''
  consumerGroups:
    prefix: ''

# @section S3 settings
# @param s3.verifySsl Verify SSL certificate when connecting to s3.endpoint.
# @param s3.endpoint S3 endpoint. Format: `host:port` or `url`. **Required**
# @param s3.accessKey S3 access key for accessing the bucket. **Required**
# @param s3.secretAccessKey S3 secret key for accessing the bucket. **Required**
# @param s3.bucketPrefix S3 bucket name prefix for the frames buckets. **Required**
# @param s3.logsBucketPrefix S3 bucket name prefix for the mobile app logs buckets. **Required**
# @param s3.region S3 region.
# @param s3.setPublicReadACL Set "public-read" ACL on buckets and objects.

s3:
  verifySsl: true
  endpoint: ''
  accessKey: ''
  secretAccessKey: ''
  bucketPrefix: ''
  logsBucketPrefix: ''
  region: ''
  setPublicReadACL: false

# @section postgres **Database settings**

# @param postgres.host PostgreSQL rw hostname or IP. **Required**
# @param postgres.port PostgreSQL port. **Required**
# @param postgres.database PostgreSQL database name. **Required**
# @param postgres.username PostgreSQL username with rw access. **Required**
# @param postgres.password PostgreSQL password. **Required**

postgres:
  host: ''
  port: 5432
  database: ''
  username: ''
  password: ''

# @section Map settings

# @param map.tileserverUrl URL template for tileserver. Ex.: `http://tileserver.host`
# @param map.mapgl.host Hostname of mapgl server. **Required**
# @param map.mapgl.key Key of mapgl server. **Required**
# @param map.projects[0].name Name of project.
# @param map.projects[0].coords Coordinates of area.
# @param map.initialProject Default project shown on Map.

map:
  tileserverUrl: ''
  mapgl:
    host: ''
    key: ''
  projects:
  - name: ''
    coords: []
  initialProject: ''

# @section Custom settings

# @param dashboardDomain Link to Citylens web address. **Required**
# @param locale Locale language (en by default).
# @param headerLinks List of links for navbar.

dashboardDomain: ''

locale: en

headerLinks:
- drivers
- tracks
- interest_zones
- map

# @section PRO integration (only when Pro reporter enabled)

# @param pro.baseUrl PRO API URL. Ex: http(s)://pro-api.svc
# @param pro.key PRO API auth token
# @param pro.verifySsl Set to `false` if pro.baseUrl must be accessed via https without certificate validation. **Required**
# @param pro.framesAssetId PRO Frames asset id (used for filters actualization). Ex: your_frames_asset_name
# @param pro.objectsAssetId PRO Objects asset id (used for filters actualization). Ex: your_objects_asset_name

pro:
  baseUrl: ''
  key: ''
  verifySsl: true
  framesAssetId: ''
  objectsAssetId: ''

# @section **Custom Certificate Authority**

# @param customCAs.bundle Custom CA [text representation of the X.509 PEM public-key certificate](https://www.rfc-editor.org/rfc/rfc7468#section-5.1)
# @param customCAs.certsPath Custom CA bundle mount directory in the container.

customCAs:
  bundle: ''
  # bundle: |
  #   -----BEGIN CERTIFICATE-----
  #   ...
  #   -----END CERTIFICATE-----
  certsPath: ''

# @section Citylens routes services settings

# @skip routes.environment
# @param routes.imagePullSecrets Kubernetes image pull secrets.
# @param routes.terminationGracePeriodSeconds Kubernetes [termination grace period](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/). Should be at least 300 seconds
# @param routes.migration.enabled If migrations needed.

# @extra routes **Strategy**
# @param routes.strategy.type Type of Kubernetes deployment. Can be `Recreate` or `RollingUpdate`.
# @param routes.strategy.rollingUpdate.maxUnavailable Maximum number of pods that can be created over the desired number of pods when doing [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment).
# @param routes.strategy.rollingUpdate.maxSurge Maximum number of pods that can be unavailable during the [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment) process.

# @extra routes **Postgres**
# @param routes.postgres.database PostgreSQL database name. **Required**
# @param routes.postgres.timeout The time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.
# @param routes.postgres.commandTimeout The time to wait (in seconds) while trying to execute a command before terminating the attempt and generating an error.
# @param routes.postgres.maxPoolSize The maximum connection pool size.
# @param routes.postgres.pooling Whether connection pooling should be used.

# @extra routes **Hangfire**
# @param routes.hangfire.postgres.database PostgreSQL database name. **Required**
# @param routes.hangfire.postgres.timeout The time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error.
# @param routes.hangfire.postgres.commandTimeout The time to wait (in seconds) while trying to execute a command before terminating the attempt and generating an error.
# @param routes.hangfire.postgres.maxPoolSize The maximum connection pool size.
# @param routes.hangfire.postgres.pooling Whether connection pooling should be used.

# @section Citylens routes API

# @section Image settings
# @param routes.api.image.repository Repository.
# @param routes.api.image.tag Tag.
# @param routes.api.image.pullPolicy Pull Policy.

# @section Resources settings
# @param routes.api.replicaCount A replica count for the pod.
# @param routes.api.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).
# @param routes.api.resources.requests.cpu A CPU request.
# @param routes.api.resources.requests.memory A memory request.
# @param routes.api.resources.limits.cpu A CPU limit.
# @param routes.api.resources.limits.memory A memory limit.

# @section Service settings
# @param routes.api.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param routes.api.service.port Service port.
# @param routes.api.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param routes.api.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings
# @param routes.api.ingress.enabled If Ingress is enabled for the service.
# @param routes.api.ingress.className Resource that contains additional configuration including the name of the controller that should implement the class.
# @param routes.api.ingress.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param routes.api.ingress.hosts[0].host Hostname for the Ingress service. Ex.: 'citylens.api'.
# @param routes.api.ingress.hosts[0].paths[0].path Endpoint of host.
# @param routes.api.ingress.hosts[0].paths[0].pathType Path type of endpoint.
# @param routes.api.ingress.tls Tls settings for https.

# @section Metadata settings
# @param routes.api.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param routes.api.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param routes.api.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param routes.api.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param routes.api.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param routes.api.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param routes.api.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.
# @param routes.api.tempPath Path to directory used for temp data

# @extra routes.api.logging Routes **Logging** settings
# @param routes.api.logging.level Log message level. verbose, debug, information, warning, error, fatal.

# @section Citylens routes Worker

# @section Image settings
# @param routes.worker.image.repository Repository.
# @param routes.worker.image.tag Tag.
# @param routes.worker.image.pullPolicy Pull Policy.

# @section Resources settings
# @param routes.worker.replicaCount A replica count for the pod.
# @param routes.worker.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).
# @param routes.worker.resources.requests.cpu A CPU request.
# @param routes.worker.resources.requests.memory A memory request.
# @param routes.worker.resources.limits.cpu A CPU limit.
# @param routes.worker.resources.limits.memory A memory limit.

# @section Metadata settings
# @param routes.worker.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param routes.worker.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param routes.worker.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param routes.worker.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param routes.worker.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param routes.worker.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param routes.worker.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.
# @param routes.worker.tempPath Path to directory used for temp data

# @extra routes.worker.logging Routes **Logging** settings
# @param routes.worker.logging.level Log message level. verbose, debug, information, warning, error, fatal.

# @section Bus configuration settings
# @extra routes.worker.busConfig Bus configuration
# @extra routes.worker.busConfig.consumers Consumers for the bus configuration
# @extra routes.worker.busConfig.consumers.appEvents App events for the consumers
# @param routes.worker.busConfig.consumers.appEvents.topic The topic for the app events.
# @param routes.worker.busConfig.consumers.appEvents.groupId The group ID for the app events.
# @param routes.worker.busConfig.consumers.appEvents.bufferSize The buffer size for the app events.
# @param routes.worker.busConfig.consumers.appEvents.workersCount The workers count for the app events.

routes:

  environment: ''
  imagePullSecrets: []
  terminationGracePeriodSeconds: 60

  migration:
    enabled: true

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

  postgres:
    database: ''
    timeout: 15
    commandTimeout: 30
    maxPoolSize: 30
    pooling: false

  hangfire:
    postgres:
      database: ''
      timeout: 15
      commandTimeout: 30
      maxPoolSize: 30
      pooling: false

  api:
    image:
      repository: 2gis-on-premise/citylens-routes-api
      tag: latest
      pullPolicy: IfNotPresent

    replicaCount: 2

    revisionHistoryLimit: 3

    resources:
      requests:
        cpu: 400m
        memory: 256M
      limits:
        cpu: 1
        memory: 1024M

    service:
      annotations: {}
      labels: {}
      type: ClusterIP
      port: 80

    ingress:
      enabled: false
      annotations: {}
      className: ''
      tls: []
      hosts:
        - host: citylens-routes-api.host
          paths:
            - path: /
              pathType: Prefix

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: []

    tempPath: /tmp

    logging:
      level: 'information'

  worker:
    image:
      repository: 2gis-on-premise/citylens-worker-service
      tag: latest
      pullPolicy: IfNotPresent

    replicaCount: 1

    revisionHistoryLimit: 3

    resources:
      requests:
        cpu: 400m
        memory: 256M
      limits:
        cpu: 1
        memory: 1024M

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: []

    tempPath: /tmp

    logging:
      level: 'information'

    busConfig:
      consumers:
        appEvents:
          topic: ''
          groupId: ''
          bufferSize: 100
          workersCount: 10

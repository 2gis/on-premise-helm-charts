# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.

dgctlDockerRegistry: ''
api:
  image:
    repository: '2gis-on-premise/citylens-api'
    pullPolicy: IfNotPresent
    tag: 'v1.0.2'

  replicas: 4

  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80
    targetPort: 8000

  ingress:
    enabled: true
    className: ''
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    hosts:
    - host: 'citylens.host'
      paths:
      - path: '/'
        pathType: Prefix
    tls: []
      # - hosts:
      #    host: ''
      #  secretName: ''

  annotations: {}
  labels: {}
  podAnnotations: {}
  podLabels: {}
  nodeSelector: {}
  affinity: {}
  tolerations: {}

web:
  image:
    repository: '2gis-on-premise/citylens-web'
    pullPolicy: IfNotPresent
    tag: '1.0.5'

  replicas: 1

  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80
    targetPort: 5000

  ingress:
    enabled: true
    className: ''
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
    hosts:
    - host: 'citylens.host'
      paths:
      - path: '/'
        pathType: Prefix
    tls: []
      # - hosts:
      #    host: ''
      #  secretName: ''

  annotations: {}
  labels: {}
  podAnnotations: {}
  podLabels: {}
  nodeSelector: {}
  affinity: {}
  tolerations: {}

worker:
  framesSaver:

    replicas: 4

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

  camcomSender:
    enabled: false

    replicas: 1
    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

  predictionsSaver:

    replicas: 1

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

  reporterPro:

    replicas: 1

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

  trackMetadataSaver:

    replicas: 1

    annotations: {}
    labels: {}
    podAnnotations: {}
    podLabels: {}
    nodeSelector: {}
    affinity: {}
    tolerations: {}

  resources:
    requests:
      cpu: 1000m
      memory: 1Gi
    limits:
      cpu: 2000m
      memory: 2Gi

migrations:

  enabled: true

  image:
    repository: '2gis-on-premise/citylens-database'
    pullPolicy: IfNotPresent
    tag: 'v1.0.0'
  resources:
    requests:
      cpu: 100m
      memory: 1Gi
    limits:
      cpu: 200m
      memory: 2Gi

  nodeSelector: {}

kafka:

  bootstrapServer: ''
  username: ''
  password: ''
  topics:
    frames: ''
    tracks: ''
    prediction: ''
    pro: ''
    camcom: ''
    logs: ''
    framesGroupId: ''
    tracksGroupId: ''
    predictionGroupId: ''
    camcomSenderGroupId: ''

s3:
  endpoint: ''
  accessKey: ''
  secretAccessKey: ''
  bucketPrefix: ''

postgres:
  host: ''
  port: 5432
  database: ''
  username: ''
  password: ''

dashboardDomain: ''

locale: ''

headerLinks:
  - 'drivers'
  - 'tracks'
  - 'help'

reporters:
  - 'pro'

predictors:
  - 'camcom'

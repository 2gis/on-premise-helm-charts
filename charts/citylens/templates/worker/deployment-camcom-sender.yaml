{{- if .Values.worker.camcomSender.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "citylens.camcom-sender.name" . }}
  {{- if .Values.worker.camcomSender.annotations }}
  annotations:
    {{- toYaml .Values.worker.camcomSender.annotations | nindent 4 }}
  {{- end }}
  labels:
    {{- include "citylens.camcom-sender.labels" . | nindent 4 }}
  {{- if .Values.worker.camcomSender.labels }}
    {{- toYaml .Values.worker.camcomSender.labels | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.worker.camcomSender.replicas }}
  selector:
    matchLabels:
      {{- include "citylens.camcom-sender.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      {{- with .Values.worker.camcomSender.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "citylens.camcom-sender.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ include "citylens.camcom-sender.name" . }}
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.web.image.repository }}:{{ .Values.web.image.tag }}
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          command: [ "/bin/sh", "-c" ]
          args: [ "flask sender camcom_predictor" ]
          env:
            - name: CONFIG_PATH
              value: /opt/worker/config/dashboard_config.yaml
            - name: DASHBOARD_DB_URL
              value: {{ .Values.postgres.dbUrl }}
            - name: S3_ACCESS_KEY
              value: {{ .Values.s3.accessKey }}
            - name: S3_SECRET_ACCESS_KEY
              value: {{ .Values.s3.secretAccessKey }}
            - name: KAFKA_PASSWORD
              value: {{ .Values.kafka.password }}
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /opt/worker/config
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "citylens.camcom-sender.name" . }}-configmap
      {{- with .Values.worker.camcomSender.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.camcomSender.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.worker.camcomSender.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}

{{- if .Values.routes.migration.enabled }}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "citylens.routes.migration.name" . }}-job
  labels:
    {{- include "citylens.routes.migration.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-5"
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "citylens.routes.migration.name" . }}
      labels:
        {{- include "citylens.routes.migration.labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- with .Values.routes.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: api-migrate
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" $.Values.dgctlDockerRegistry }}/{{ .Values.routes.api.image.repository }}:{{ .Values.routes.api.image.tag }}
          imagePullPolicy: {{ .Values.routes.api.image.pullPolicy }}
          args: [ "migrate" ]
          resources:
            {{- toYaml .Values.routes.api.resources | nindent 12 }}
          env:
            - name: Postgres__ReadWrite__ConnectionString
              value: {{ include "routes-api.connectionString" . }}
            - name: Postgres__ReadWrite__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret

            - name: Postgres__ReadOnly__ConnectionString
              value: {{ include "routes-api.connectionString" . }}
            - name: Postgres__ReadOnly__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret

            - name: Hangfire__Postgres__ConnectionString
              value: {{ include "routes-hangfire.connectionString" . }}
            - name: Hangfire__Postgres__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret

        - name: worker-migrate
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" $.Values.dgctlDockerRegistry }}/{{ .Values.routes.worker.image.repository }}:{{ .Values.routes.worker.image.tag }}
          imagePullPolicy: {{ .Values.routes.worker.image.pullPolicy }}
          args: [ "migrate" ]
          resources:
            {{- toYaml .Values.routes.worker.resources | nindent 12 }}
          env:
            - name: Postgres__ReadWrite__ConnectionString
              value: {{ include "routes-api.connectionString" . }}
            - name: Postgres__ReadWrite__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret

            - name: Postgres__ReadOnly__ConnectionString
              value: {{ include "routes-api.connectionString" . }}
            - name: Postgres__ReadOnly__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret

            - name: Hangfire__Postgres__ConnectionString
              value: {{ include "routes-hangfire.connectionString" . }}
            - name: Hangfire__Postgres__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret

            - name: BusConfig__Broker
              value: {{ .Values.kafka.bootstrapServer | quote }}
            - name: BusConfig__SecurityInformation__SaslUsername
              value: {{ $.Values.kafka.username | quote }}
            - name: BusConfig__SecurityInformation__SaslPassword
              valueFrom:
                secretKeyRef:
                  key: busConfigSaslPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret
            - name: BusConfig__SecurityInformation__SaslMechanism
              value: {{ .Values.routes.worker.busConfig.securityInformation.saslMechanism | quote }}
            - name: BusConfig__SecurityInformation__SecurityProtocol
              value: {{ .Values.routes.worker.busConfig.securityInformation.securityProtocol | quote }}

            - name: BusConfig__Consumers__AppEvents__Topic
              value: {{ .Values.kafka.topics.tracks | quote }}
            - name: BusConfig__Consumers__AppEvents__GroupId
              value: "{{ required "A valid .Values.routes.worker.busConfig.consumers.appEvents.groupId entry required" $.Values.routes.worker.busConfig.consumers.appEvents.groupId }}"
            - name: BusConfig__Consumers__AppEvents__BufferSize
              value: {{ $.Values.routes.worker.busConfig.consumers.appEvents.bufferSize | quote }}
            - name: BusConfig__Consumers__AppEvents__WorkersCount
              value: {{ $.Values.routes.worker.busConfig.consumers.appEvents.workersCount | quote }}

        - name: realtime-data-api-migrate
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" $.Values.dgctlDockerRegistry }}/{{ .Values.routes.realtimeDataApi.image.repository }}:{{ .Values.routes.realtimeDataApi.image.tag }}
          imagePullPolicy: {{ .Values.routes.realtimeDataApi.image.pullPolicy }}
          args: [ "migrate" ]
          resources:
            {{- toYaml .Values.routes.realtimeDataApi.resources | nindent 12 }}
          env:
            - name: Postgres__ReadWrite__ConnectionString
              value: {{ include "routes-realtime-data-api.connectionString" . }}
            - name: Postgres__ReadWrite__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret

            - name: Postgres__ReadOnly__ConnectionString
              value: {{ include "routes-realtime-data-api.connectionString" . }}
            - name: Postgres__ReadOnly__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret

            - name: Hangfire__Postgres__ConnectionString
              value: {{ include "routes-realtime-data-api.connectionString" . }}
            - name: Hangfire__Postgres__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.migration.name" . }}-secret

{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "citylens.routes.realtimeDataApi.name" . }}
  {{- with .Values.routes.realtimeDataApi.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "citylens.routes.realtimeDataApi.labels" . | nindent 4 }}
  {{- with .Values.routes.realtimeDataApi.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.routes.realtimeDataApi.replicaCount }}
  revisionHistoryLimit: {{ .Values.routes.realtimeDataApi.revisionHistoryLimit }}
  {{- if .Values.routes.strategy }}
  strategy:
    {{- toYaml .Values.routes.strategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "citylens.routes.realtimeDataApi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.routes.yaml") . | sha256sum }}
      {{- with .Values.routes.realtimeDataApi.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "citylens.routes.realtimeDataApi.labels" . | nindent 8 }}
      {{- with .Values.routes.realtimeDataApi.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.routes.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.routes.realtimeDataApi.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.routes.realtimeDataApi.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.routes.realtimeDataApi.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.routes.terminationGracePeriodSeconds }}
      volumes:
        - name: temp-volume
          emptyDir: { }
      containers:
        - name: {{ include "citylens.routes.realtimeDataApi.name" . }}
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" $.Values.dgctlDockerRegistry }}/{{ .Values.routes.realtimeDataApi.image.repository }}:{{ .Values.routes.realtimeDataApi.image.tag }}
          imagePullPolicy: {{ .Values.routes.realtimeDataApi.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: {{ .Values.routes.realtimeDataApi.tempPath | quote }}
              name: temp-volume
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /health/live
              port: http
            failureThreshold: 20
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.routes.realtimeDataApi.resources | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: [ "/bin/sh", "-c", "sleep 5" ]
          env:
            - name: Common__TempPath
              value: {{ .Values.routes.realtimeDataApi.tempPath | quote }}

            - name: Common__Logging__LogLevel
              value: {{ .Values.routes.realtimeDataApi.logging.level | quote }}
            - name: Common__Logging__ExtendedRestLogging
              value: {{ .Values.routes.realtimeDataApi.logging.extendedRestLogging | quote }}
            - name: Common__Logging__ExtendedSqlLogging
              value: {{ .Values.routes.realtimeDataApi.logging.extendedSqlLogging | quote }}

            - name: Postgres__ReadWrite__ConnectionString
              value: {{ include "routes-realtime-data-api.connectionString" . }}
            - name: Postgres__ReadWrite__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.api.name" . }}-secret

            - name: Postgres__ReadOnly__ConnectionString
              value: {{ include "routes-realtime-data-api.connectionString" . }}
            - name: Postgres__ReadOnly__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.api.name" . }}-secret

            - name: Hangfire__Postgres__ConnectionString
              value: {{ include "routes-realtime-data-api.connectionString" . }}
            - name: Hangfire__Postgres__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "citylens.routes.api.name" . }}-secret

            - name: RealTimeDataSettings__DaysToLeaveData
              value: {{ $.Values.routes.realtimeDataApi.daysToLeaveData | quote }}

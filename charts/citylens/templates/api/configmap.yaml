apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "citylens.api.name" . }}-configmap
data:
  api_config.yaml: |
    kafka:
    {{- with .Values.kafka }}
      bootstrap_servers: {{  required "A valid .Values.kafka.bootstrap.servers entry required" .bootstrapServer | squote }}
      security:
        security_protocol: 'SASL_PLAINTEXT'
        sasl_mechanism: 'SCRAM-SHA-512'
        sasl_plain_username: {{ required "A valid .Values.kafka.username entry required" .username | squote }}
        sasl_plain_password: {{ required "A valid .Values.kafka.password entry required" .password | squote }}
    topics:
      frames: {{ required "A valid .Values.kafka.topics.frames entry required" .topics.frames | squote }}
      tracks: {{ required "A valid .Values.kafka.topics.tracks entry required" .topics.tracks | squote }}
      logs: {{ required "A valid .Values.kafka.topics.logs entry required" .topics.logs | squote }}
      {{- range .predictors }}
      {{- if eq .name "camcom" }}
      camcom: {{ required "A valid .topic entry required" .topic| squote }}
      {{- end }}
      {{- if eq .name "manual" }}
      manual: {{ required "A valid .topic entry required" .topic| squote }}
      {{- end }}
      {{- end }}
    {{- end }}
    database:
    {{- with .Values.postgres }}
      postgres: 'postgresql+asyncpg://{{ required "A valid .Values.postgres.username entry required" .username }}:{{ required "A valid .Values.postgres.password entry required" .password }}@{{ required "A valid .Values.postgres.host entry required" .host }}:{{ required "A valid .Values.postgres.port entry required" .port }}/{{ required "A valid .Values.postgres.database entry required" .database }}'
    {{- end }}
    {{- with .Values.api.auth }}
    auth:
      enabled: {{ .enabled }}
      {{- if .enabled }}
      auth_server_url: {{ required "A valid .Values.api.auth.authServerUrl entry required" .authServerUrl | quote }}
      verify_ssl: {{ .verifySsl }}
      {{- if .realm }}
      realm: {{ .realm | quote }}
      {{- end}}
      predictor_tokens:
        {{- .Values.api.auth.predictorsTokens | toYaml | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- with .Values.api.licensing }}
    pasportool:
      {{- if .enabled }}
      enabled: {{ .enabled }}
      {{- end }}
      client_params:
        endpoint_url: {{ required "A valid .Values.api.licensing.url entry required" .url | quote }}
    {{- end }}
    show_docs: {{ .Values.api.showDocs }}
    log_level: {{ .Values.api.logLevel }}
    metrics_app_name: {{ .Values.api.metricsAppName }}

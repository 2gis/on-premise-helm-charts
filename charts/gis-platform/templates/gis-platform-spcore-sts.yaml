---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gis-platform-spcore.fullname" . }}
spec:
{{- if .Values.spcore.reset_cluster }}
  replicas: 1
{{- else }}
  replicas: {{ .Values.spcore.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "gis-platform-spcore.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "gis-platform.spcore.headless_service" . }}
  template:
    metadata:
      annotations:
        checksum/config: {{ (include (print $.Template.BasePath "/gis-platform-spcore-configmap.yaml") . | fromYaml).data | toYaml | sha256sum }}
        checksum/secret: {{ (include (print $.Template.BasePath "/secret.yml") . | fromYaml).data | toYaml | sha256sum }}
      labels:
        {{- include "gis-platform-spcore.selectorLabels" . | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.spcore.terminationGracePeriodSeconds }}
{{- if .Values.spcore.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.spcore.nodeSelector | indent 8 }}
{{- end }}
      {{- if .Values.spcore.priorityClassName }}
      priorityClassName: {{ .Values.spcore.priorityClassName }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "gis-platform-spcore.selectorLabels" . | nindent 16 }}
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 1
      containers:
        - name: {{ include "gis-platform-spcore.fullname" . }}
          command: ["/spcore-entrypoint.sh"]
          {{- if .Values.spcore.reset_cluster }}
          args: ["-ru"]
          {{- else if .Values.spcore.update_db }}
          args: ["-u"]
          {{- end }}
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.spcore.image.repository }}:{{ .Values.spcore.image.tag }}
          startupProbe:
            httpGet:
              path: /
              port: {{ .Values.spcore.http_port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.spcore.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.spcore.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.spcore.startupProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.spcore.http_port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.spcore.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.spcore.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.spcore.readinessProbe.failureThreshold }}
          ports:
          - containerPort: {{ .Values.spcore.cloud_port }}
          - containerPort: {{ .Values.spcore.http_port }}
          resources:
            {{- toYaml .Values.spcore.resources | nindent 12 }}
          env:
          - name: GIS_PLATFORM_CATALOG_URL
            value: {{ .Values.spcore.catalog.url }}
          - name: GIS_PLATFORM_NAVI_URL
            value: {{ .Values.spcore.navi.url }}
          - name: GIS_PLATFORM_CATALOG_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "gis-platform.secret" . }}
                key: gis_platform_catalog_key
          - name: INSTANCE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SPCORE_host
            value: "{{ .Values.external_proto }}://{{ .Values.external_hostname }}"
          - name: SPCORE_jwtConfiguration__adminAccessToken
            valueFrom:
              secretKeyRef:
                name: {{ include "gis-platform.secret" . }}
                key: jwt_token_admin
          - name: SPCORE_jwtConfiguration__tokenKey
            valueFrom:
              secretKeyRef:
                name: {{ include "gis-platform.secret" . }}
                key: jwt_token_key
          - name: SPCORE_debugMode
            value: {{ .Values.spcore.debug_mode | quote }}
          - name: SPCORE_cloudConnectorPort
            value: {{ .Values.spcore.cloud_port | quote }}
          - name: SPCORE_httpPort
            value: {{ .Values.spcore.http_port | quote }}
          - name: SPCORE_dbConnectionString
            valueFrom:
              secretKeyRef:
                name: {{ include "gis-platform.secret" . }}
                key: db_connection_string
          - name: SPCORE_s3Configuration__accessKey
            valueFrom:
              secretKeyRef:
                name: {{ include "gis-platform.secret" . }}
                key: s3_access_key
          - name: SPCORE_s3Configuration__secretKey
            valueFrom:
              secretKeyRef:
                name: {{ include "gis-platform.secret" . }}
                key: s3_secret_key
          - name: SPCORE_zkConnectionAddress
            value: {{ include "gis-platform.zookeeper_connection_string" . | quote }}
          - name: SPCORE_SuEmail
            value: {{ .Values.spcore.admin.email | quote }}
          - name: SPCORE_SuPassword
            valueFrom:
              secretKeyRef:
                name: {{ include "gis-platform.secret" . }}
                key: admin_password
          volumeMounts:
          - name: {{ include "gis-platform-spcore.name" . }}-configmap
            mountPath: /app/SPCore.json.template
            subPath: SPCore.json.template
          - name: {{ include "gis-platform-spcore.name" . }}-configmap
            mountPath: /spcore-entrypoint.sh
            subPath: spcore-entrypoint.sh
          - name: {{ include "gis-platform-spcore.name" . }}-configmap
            mountPath: /app/NLog.config
            subPath: NLog.config.template
      volumes:
        - name: {{ include "gis-platform-spcore.name" . }}-configmap
          configMap:
            name: {{ include "gis-platform-spcore.fullname" . }}
            defaultMode: 0755

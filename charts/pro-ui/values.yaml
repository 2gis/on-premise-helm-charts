# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.

dgctlDockerRegistry: ''

# @param imagePullPolicy Pull Policy
# @param imagePullSecrets Kubernetes image pull secrets.
imagePullPolicy: IfNotPresent
imagePullSecrets: []

# @section Strategy settings

# @param strategy.type Type of Kubernetes deployment. Can be `Recreate` or `RollingUpdate`.
# @param strategy.rollingUpdate.maxUnavailable Maximum number of pods that can be created over the desired number of pods when doing [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment).
# @param strategy.rollingUpdate.maxSurge Maximum number of pods that can be unavailable during the [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment) process.

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

# @section Deployment settings

# @param image.repository Repository
# @param image.tag Tag
image:
  repository: 2gis-on-premise/pro-ui
  tag: 4.5.0

# @section Common deployment settings

# @param replicas A replica count for the pod.
# @param revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).
# @param terminationGracePeriodSeconds Seconds pod needs to [terminate](https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods) gracefully
# @param nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
# @param tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param readinessProbe.enabled Enable [readinessProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes) on PRO UI containers
# @param livenessProbe.enabled Enable [livenessProbe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes) on PRO UI containers
# @param containerPort Port on which application listen connection in container

replicas: 1
revisionHistoryLimit: 3
terminationGracePeriodSeconds: 60
nodeSelector: {}
affinity: {}
tolerations: []
podAnnotations: {}
podLabels: {}
annotations: {}
labels: {}
readinessProbe:
  enabled: true
livenessProbe:
  enabled: false
containerPort: 3000

# @section UI service settings

ui:
  # @skip ui.logLevel
  # @skip ui.isOnPremise
  # @param ui.healthcheckPath Application http path for health check
  # @param ui.appTheme Branding inside the app. Possible values: `"2gis"` or `"urbi"`.
  # @param ui.appLocale Language in the app. Possible values: `"ar_AE"`, `"en_AE"` or `"ru_RU"`.
  # @param ui.appInitialMapCenter Default map coordinates, it contains of two numbers in an array: [lng, lat] (e.g., [55.27, 25.2] stands for Dubai, [37.64, 55.74] â€” for Moscow).
  # @param ui.supportDocumentationLink Product online documentation root link. Ex.: 'https://docs.urbi.ae/en/pro', 'https://docs.2gis.com/ru/pro'
  # @param ui.immersiveModels A string value for config to enabling 3D-models. Possible values: [{"id":4,"name":"Ground","mapOptions":{"center":[53.287567,23.564967],"styleZoom":19.2,"pitch":45,"rotation":0},"objects":[{"buildingIds":[],"coords":[53.284762,23.569323],"scale":90,"rotateX":0.5,"rotateY":0,"moveX":0,"moveY":0,"moveZ":0,"models":[{"path":"/static/models/adnoc/ground.glb","name":"Ground","displayName":"Ground"}]}]}]
  # @param ui.publicS3Url Optional URL of public S3 where style data will be placed. Example: https://s3.domain.example.com/

  healthcheckPath: /api/healthcheck/app
  logLevel: error
  isOnPremise: true
  appTheme: urbi
  appLocale: en_AE
  appInitialMapCenter: '[46.71, 24.72]'
  supportDocumentationLink: ''
  immersiveModels: ''
  publicS3Url: ''

  # @param ui.auth.sso Flag to turn on/off the authorization. Possible values: `"true"` or `"false"`.
  # @param ui.auth.secure Flag to turn on/off the https for auth. Possible values: `"true"` or `"false"`.
  # @param ui.auth.safeHosts a string with regExp, which checks incoming authCodeUrl
  # @param ui.auth.codeUrl an URL, which is used to exchange code to token: host/api/auth/code
  # Ex: http(s)://pro-ui.ingress.host/api/auth/code
  # @skip ui.auth.brand
  # @param ui.auth.clientId a client_id from keycloack
  # @param ui.auth.clientSecret a client_secret from keycloack
  # @param ui.auth.oAuthProvider a provider name. Possible values: "keycloak" | "openid"
  # if oAuthProvider == 'openid', identityProviderUrl and oAuthApiUrl params
  # will be ignored, cause these URL will be loaded via openIdWellKnownUrlListUrl
  # ui.auth.oAuthProvider == 'keycloak' is deprecated.
  # @param ui.auth.oAuthScopes scopes for openid connect. Possible values:
  # any of: name, email, phone, avatar, openid
  # Ex.: "name email openid"
  # @param ui.auth.identityProviderUrl a provider base URL
  # Ex.: http(s)://keycloak.ingress.host/realms/URBI_Pro/protocol/openid-connect/auth
  # @param ui.auth.oAuthApiUrl an oAuth provider base URL
  # Ex.: http(s)://keycloak.ingress.host/realms/URBI_Pro/protocol/openid-connect/
  # @skip ui.auth.platformManagerHost
  # @param ui.auth.turnOffCertValidation Flag to turn off certificate validation. Possible values: `"true"` or `"false"`.
  # @param ui.auth.openIdWellKnownUrlListUrl URL to OpenID Connect Discovery data
  # specs: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata
  # Ex.: http(s)://keycloak.ingress.host/realms/URBI_Pro/.well-known/openid-configuration
  # Used only in case of ui.auth.oAuthProvider == 'openid'
  auth:
    sso: false
    secure: true
    safeHosts: .*
    codeUrl: ''
    brand: ''
    clientId: ''
    clientSecret: ''
    oAuthProvider: keycloak
    oAuthScopes: ''
    identityProviderUrl: ''
    oAuthApiUrl: ''
    platformManagerHost: ''
    turnOffCertValidation: false
    openIdWellKnownUrlListUrl: ''
  # @section 2GIS Pro API settings

  # @param ui.api.url Base URL for the Pro API with protocol and trailing slash, ex: http://pro-api.ingress.host/.
  # @param ui.api.timeout Timeout in ms for API request on client side, ex: 30000.
  # @param ui.api.serverTimeout Timeout in ms for API request on server side, ex: 30000.

  api:
    url: ''
    timeout: 30000
    serverTimeout: 30000

  # @section MapGL JS API settings

  # @param ui.mapgl.host FQDN (domain or IP) for the [MapGL JS API](https://docs.2gis.com/en/on-premise/map) service with or without protocol. Without protocol we will put App's protocol.
  # @skip ui.mapgl.scriptPath
  # @param ui.mapgl.key A key to the [MapGL JS API](https://docs.2gis.com/en/on-premise/map) service.
  # @param ui.mapgl.styleUrl Optional URL for [MapGL Style](https://docs.2gis.com/en/mapgl/styles/overview/editor) `style.json` folder, e.g., '//mapgl.ingress.host/style'. ui.mapgl.styleUrl has priority over ui.mapgl.styleId.
  # @param ui.mapgl.styleIconsUrl Optional URL for [MapGL Style](https://docs.2gis.com/en/mapgl/styles/overview/editor) icons folder, e.g., '//mapgl.ingress.host/style/icons'
  # @param ui.mapgl.styleFontsUrl Optional URL for [MapGL Style](https://docs.2gis.com/en/mapgl/styles/overview/editor) fonts folder, e.g., '//mapgl.ingress.host/style/fonts'
  # @param ui.mapgl.stylePreview URL to image for ui.mapgl.styleUrl or ui.mapgl.styleId. It needs for preview in manager styles.
  # @param ui.mapgl.styleModelsUrl Optional URL for [MapGL Style](https://docs.2gis.com/en/mapgl/styles/overview/editor) models folder, e.g., '//mapgl.ingress.host/style/models'

  mapgl:
    host: mapgl-api.host
    scriptPath: ''
    key: ''
    styleUrl: ''
    styleIconsUrl: ''
    styleFontsUrl: ''
    stylePreview: ''
    styleModelsUrl: ''

  # @section Mapbox style config settings
  #
  # Fill that parameters if your app has connection to Global Internet.
  # @param ui.mapbox.styleToken Optional [Mapbox Token](https://docs.mapbox.com/api/accounts/tokens/)
  mapbox:
    styleToken: ''

  # @section External style manager configuration.
  # External style manager allows managing WMS- and WMTS-maps from external sources.
  # Access to public (internet) or private (intranet) WM(T)S services is required for this feature to work.
  #
  # @param ui.externalStyleManager.enabled - Set "true" to enable External Style Manager features
  externalStyleManager:
    enabled: false

  # @section Map styles config settings
  #
  # @param ui.styles.s3Bucket Optional S3 bucket name for style files. Bucket must be public.
  # @param ui.styles.configUrl Optional URL for styles config file
  styles:
    s3Bucket: ''
    configUrl: ''

  # @section WhiteLabel config settings
  #
  # @param ui.whiteLabel.configUrl Optional URL for whitelabel config file
  # @param ui.whiteLabel.s3Bucket Optional S3 bucket name for whitelabel files. Bucket must be public. If set with ui.publicS3Url all relative URL in config will be replaced to ui.publicS3Url + ui.whiteLabel.s3Bucket + originalURL
  whiteLabel:
    configUrl: ''
    s3Bucket: ''

# @section Service settings

# @param service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param service.port Service port.
# @param service.targetPort Service target port.

service:
  annotations: {}
  labels: {}
  type: ClusterIP
  port: 3000
  targetPort: http

# @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

# @param ingress.enabled If Ingress is enabled for the service.
# @param ingress.className Name of the Ingress controller class.
# @param ingress.hosts[0].host Hostname for the Ingress service.
# @param ingress.hosts[0].paths[0].path Path of the host for the Ingress service.
# @param ingress.hosts[0].paths[0].pathType Type of the path for the Ingress service.
# @param ingress.tls TLS configuration

ingress:
  enabled: false
  className: nginx
  hosts:
  - host: pro-ui.example.com
    paths:
    - path: /
      pathType: Prefix
  tls: []
  # - hosts:
  #   - pro-ui.example.com
  #   secretName: secret.tls

# @section Limits

# @param resources.requests.cpu A CPU request.
# @param resources.requests.memory A memory request.
# @param resources.limits.cpu A CPU limit.
# @param resources.limits.memory A memory limit.

resources:
  requests:
    cpu: 300m
    memory: 256Mi
  limits:
    cpu: 1
    memory: 384Mi

# @section Autoscaling configuration

# @param hpa.enabled Enable hpa for PRO UI
# @param hpa.minReplicas Minimum number of PRO UI replicas
# @param hpa.maxReplicas Maximum number of PRO UI replicas
# @param hpa.targetCPU Target CPU utilization percentage
# @param hpa.targetMemory Target Memory utilization percentage
hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPU: 100
  targetMemory: ''

# @section Artifacts Storage settings

# @param dgctlStorage.host S3 endpoint. Format: `host:port`. **Required**
# @param dgctlStorage.secure Set to `true` if dgctlStorage.host must be accessed via https. **Required**
# @param dgctlStorage.bucket S3 bucket name. **Required**
# @param dgctlStorage.accessKey S3 access key for accessing the bucket. **Required**
# @param dgctlStorage.secretKey S3 secret key for accessing the bucket. **Required**
# @param dgctlStorage.manifest The path to the [manifest file](https://docs.2gis.com/en/on-premise/overview#nav-lvl2@paramCommon_deployment_steps). Format: `manifests/0000000000.json`.<br> This file contains the description of pieces of data that the service requires to operate. **Required**
# @param dgctlStorage.region AuthenticationRegion property for S3 client. Used in AWS4 request signing, this is an optional property
# @param dgctlStorage.disablePayloadSigning Turns off payload signing, this is an optional property. Should be TRUE for Oracle S3 storage

dgctlStorage:
  host: ''
  secure: false
  bucket: ''
  accessKey: ''
  secretKey: ''
  manifest: ''
  region: ''
  disablePayloadSigning: false

# @section Import job settings

# If the Style Importer Job failed, then we don't need to deploy the whole pro-ui app.

# @param stylesImporter.name Styles Import job name.
# @param stylesImporter.image.repository Docker Repository Image.
# @param stylesImporter.image.tag Docker image tag.
# @param stylesImporter.backoffLimit The number of [retries](https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-backoff-failure-policy) before considering a Job as failed.
# @param stylesImporter.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param stylesImporter.maxParallelJobs How many import jobs can be run simultaneously
# @param stylesImporter.startOnDeploy Indicates that styles import should start when service installed or updated
# @param stylesImporter.resources.requests.cpu A CPU request.
# @param stylesImporter.resources.requests.memory A memory request.
# @param stylesImporter.resources.limits.cpu A CPU limit.
# @param stylesImporter.resources.limits.memory A memory limit.

stylesImporter:
  name: styles-importer
  image:
    repository: 2gis-on-premise/pro-importer
    tag: 1.54.0
  backoffLimit: 2
  nodeSelector: {}
  resources:
    requests:
      cpu: 700m
      memory: 768M
    limits:
      cpu: 1000m
      memory: 8Gi
  maxParallelJobs: 1
  startOnDeploy: false

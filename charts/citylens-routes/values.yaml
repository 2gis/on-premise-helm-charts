# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.

dgctlDockerRegistry: ''

# @section **Common settings**
# @param appName Name of the service.
# @param imagePullSecrets Kubernetes image pull secrets.
# @param nameOverride Base name to use in all the Kubernetes entities deployed by this chart.
# @param fullnameOverride Base fullname to use in all the Kubernetes entities deployed by this chart.
# @param priorityClassName Kubernetes [pod priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/).
# @param terminationGracePeriodSeconds Kubernetes [termination grace period](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/).

appName: citylens-routes-api
environment: ''
imagePullSecrets: [ ]
nameOverride: ''
fullnameOverride: ''
priorityClassName: ''
terminationGracePeriodSeconds: 60

# @extra Strategy settings

# @param strategy.type Type of Kubernetes deployment. Can be `Recreate` or `RollingUpdate`.
# @param strategy.rollingUpdate.maxUnavailable Maximum number of pods that can be created over the desired number of pods when doing [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment).
# @param strategy.rollingUpdate.maxSurge Maximum number of pods that can be unavailable during the [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment) process.

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

# @section Citylens Routes API service settings

# @section Image settings

# @param api.image.repository Repository
# @param api.image.tag Tag
# @param api.image.pullPolicy Pull Policy

# @section Resources settings

# @param api.replicaCount A replica count for the pod.

# @param api.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param api.resources.requests.cpu A CPU request.
# @param api.resources.requests.memory A memory request.
# @param api.resources.limits.cpu A CPU limit.
# @param api.resources.limits.memory A memory limit.

# @section Service settings

# @param api.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
# @param api.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param api.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param api.service.port PRO API service port.

# @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

# @param api.ingress.enabled If Ingress is enabled for the service.
# @param api.ingress.annotations.nginx.ingress.kubernetes.io/proxy-body-size Proxy-body-size parameter (default 1MB).
# @param api.ingress.className Resource that contains additional configuration including the name of the controller that should implement the class.
# @param api.ingress.tls Tls settings for https
# @param api.ingress.hosts[0].host Hostname for the Ingress service.

# @section Metadata settings

# @param api.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param api.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param api.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param api.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param api.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param api.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param api.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

# @section Api configuration

# @param api.serviceAccount Kubernetes service account
# @param api.tempPath Path to directory used for temp data
# @param api.allowAnyOrigin Cors policy: allow any origin to perform requests to pro-api service
# @extra api.logging Logging settings
# @param api.logging.format Log message format, possible options: 'default' - compact json, 'renderedCompactJson' - rendered json format, 'simple' - plain text
# @param api.logging.targets Collection of logging targets divided by comma. Currently only 'console' and 'database' are supported. Console is used by default (no need to specify).

api:
  image:
    repository: 2gis-on-premise/citylens-routes-api
    tag: latest
    pullPolicy: IfNotPresent

  replicaCount: 2

  revisionHistoryLimit: 3

  resources:
    requests:
      cpu: 400m
      memory: 256M
    limits:
      cpu: 1
      memory: 1024M

  service:
    annotations: { }
    labels: { }
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations:
    className: ''
    tls: []
    hosts:
      - host: citylens-routes-api.host

  annotations: { }
  labels: { }
  podAnnotations: { }
  podLabels: { }
  nodeSelector: { }
  affinity: { }
  tolerations: [ ]

  serviceAccount: runner
  tempPath: /tmp
  allowAnyOrigin: false
  logging:
    format: simple
    targets: ''

# @section Citylens Worker Service settings

# @section Image settings

# @param worker.image.repository Repository
# @param worker.image.tag Tag
# @param worker.image.pullPolicy Pull Policy

# @section Resources settings

# @param worker.replicaCount A replica count for the pod.

# @param worker.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

# @param worker.resources.requests.cpu A CPU request.
# @param worker.resources.requests.memory A memory request.
# @param worker.resources.limits.cpu A CPU limit.
# @param worker.resources.limits.memory A memory limit.

# @section Service settings

# @param worker.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
# @param worker.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param worker.service.port PRO API service port.

# @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

# @param worker.ingress.enabled If Ingress is enabled for the service.
# @param worker.ingress.annotations.nginx.ingress.kubernetes.io/proxy-body-size Proxy-body-size parameter (default 1MB).
# @param worker.ingress.className Resource that contains additional configuration including the name of the controller that should implement the class.
# @param worker.ingress.tls Tls settings for https
# @param worker.ingress.hosts[0].host Hostname for the Ingress service.

# @section Metadata settings

# @param worker.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param worker.podAnnotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param worker.podLabels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

# @param worker.nodeSelector Kubernetes pod [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param worker.tolerations Kubernetes pod [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param worker.affinity Kubernetes pod [affinity](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity) settings.

# @section Api configuration

# @param worker.serviceAccount  Kubernetes service account
# @param worker.tempPath Path to directory used for temp data
# @param worker.allowAnyOrigin Cors policy: allow any origin to perform requests to pro-api service
# @extra worker.logging Logging settings
# @param worker.logging.format Log message format, possible options: 'default' - compact json, 'renderedCompactJson' - rendered json format, 'simple' - plain text
# @param worker.logging.targets Collection of logging targets divided by comma. Currently only 'console' and 'database' are supported. Console is used by default (no need to specify).

# @section worker.busConfig Bus configuration settings

# @param worker.busConfig.brokers A list of brokers for the bus configuration.
# @extra worker.busConfig.securityInformation Security information for the bus configuration
# @param worker.busConfig.securityInformation.saslUsername The username for SASL authentication.
# @param worker.busConfig.securityInformation.saslPassword The password for SASL authentication.
# @param worker.busConfig.securityInformation.saslMechanism The mechanism for SASL authentication.
# @param worker.busConfig.securityInformation.securityProtocol The security protocol for the bus configuration.
# @extra worker.busConfig.consumers Consumers for the bus configuration
# @extra worker.busConfig.consumers.appEvents App events for the consumers
# @param worker.busConfig.consumers.appEvents.topic The topic for the app events.
# @param worker.busConfig.consumers.appEvents.groupId The group ID for the app events.
# @param worker.busConfig.consumers.appEvents.bufferSize The buffer size for the app events.
# @param worker.busConfig.consumers.appEvents.workersCount The workers count for the app events.

worker:
  image:
    repository: 2gis-on-premise/citylens-worker-service
    tag: latest
    pullPolicy: IfNotPresent

  replicaCount: 1

  revisionHistoryLimit: 3

  resources:
    requests:
      cpu: 400m
      memory: 256M
    limits:
      cpu: 1
      memory: 1024M

  service:
    annotations: { }
    labels: { }
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: { }
    className: ''
    hosts:
      - host: citylens-worker-service.host

  annotations: { }
  labels: { }
  podAnnotations: { }
  podLabels: { }
  nodeSelector: { }
  affinity: { }
  tolerations: [ ]

  serviceAccount: runner
  tempPath: /tmp
  logging:
    format: simple
    targets: ''

  busConfig:
    brokers: [ ]
    securityInformation:
      saslUsername: ''
      saslPassword: ''
      saslMechanism: ''
      securityProtocol: ''
    consumers:
      appEvents:
        topic: ''
        groupId: ''
        bufferSize: 100
        workersCount: 10

# @section PostgreSQL settings

# @param postgres.connectionString Connection string to the PostgreSQL database. Format: `Server=SERVER_URL;Database=DB_NAME;UID=USER_NAME;`
# @param postgres.connectionStringReadonly Connection string to the readonly node of PostgreSQL database. Format: `Server=SERVER_URL;Database=DB_NAME;UID=USER_NAME;`
# @param postgres.password User password to connect to the PostgreSQL database.
# @param postgres.userName User to connect to the PostgreSQL database.
# @param postgres.appName App name to connect to the PostgreSQL database.

postgres:
  connectionString: ''
  connectionStringReadonly: ''
  password: ''
  userName: ''
  appName: ''

# @section Hangfire settings

# @section database settings
# @param hangfire.database.connectionString Connection string to the Hangfire PostgreSQL database. Format: `Server=SERVER_URL;Database=DB_NAME;UID=USER_NAME;`
# @param hangfire.postgres.password User password to connect to the Hangfire database.
# @param hangfire.postgres.userName User to connect to the Hangfire database.
# @param hangfire.postgres.appName App name to connect to the Hangfire database.

hangfire:
  database:
    connectionString: ''
    password: ''
    userName: ''
    appName: ''
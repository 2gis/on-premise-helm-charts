apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "migration.name" . }}-job
  labels:
    {{- include "migration.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-5"
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ include "migration.name" . }}
      labels:
        {{- include "migration.labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: api-migrate
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" $.Values.dgctlDockerRegistry }}/{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          args: [ "migrate" ]
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          env:
            - name: PgSettings__ConnectionString
              value: {{ required "A valid .Values.postgres.connectionString entry required" $.Values.postgres.connectionString }}
            - name: PgSettings__UserName
              value: "{{ .Values.postgres.userName }}"
            - name: PgSettings__AppName
              value: "{{ .Values.postgres.appName }}"
            - name: PgSettings__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "migration.secret.name" . }}
            - name: Hangfire__Database__ConnectionString
              value: "{{ .Values.hangfire.database.connectionString }}"
            - name: Hangfire__Database__UserName
              value: "{{ .Values.hangfire.database.userName }}"
            - name: Hangfire__Database__AppName
              value: "{{ .Values.hangfire.database.appName }}"
            - name: Hangfire__Database__Password
              valueFrom:
                secretKeyRef:
                  name: {{ include "migration.secret.name" . }}
                  key: hangfirePassword
            - name: Hangfire__DashboardAuthorization__Enabled
              value: "{{ .Values.hangfire.dashboardAuthorization.enabled }}"
        - name: worker-migrate
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" $.Values.dgctlDockerRegistry }}/{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          args: [ "migrate" ]
          resources:
            {{- toYaml .Values.worker.resources | nindent 12 }}
          env:
            - name: PgSettings__ConnectionString
              value: {{ required "A valid .Values.postgres.connectionString entry required" $.Values.postgres.connectionString }}
            - name: PgSettings__UserName
              value: "{{ .Values.postgres.userName }}"
            - name: PgSettings__AppName
              value: "{{ .Values.postgres.appName }}"
            - name: PgSettings__Password
              valueFrom:
                secretKeyRef:
                  key: postgresPassword
                  name: {{ include "migration.secret.name" . }}
            - name: BusConfig__Brokers
              value: "{{ .Values.worker.busConfig.brokers }}"
            - name: BusConfig__SecurityInformation__SaslUsername
              value: "{{ .Values.worker.busConfig.securityInformation.saslUsername }}"
            - name: BusConfig__SecurityInformation__SaslPassword
              valueFrom:
                secretKeyRef:
                  key: busConfigSaslPassword
                  name: {{ include "migration.secret.name" . }}
            - name: BusConfig__SecurityInformation__SaslMechanism
              value: "{{ .Values.worker.busConfig.securityInformation.saslMechanism }}"
            - name: BusConfig__SecurityInformation__SecurityProtocol
              value: "{{ .Values.worker.busConfig.securityInformation.securityProtocol }}"
            - name: BusConfig__Consumers__AppEvents__Topic
              value: "{{ .Values.worker.busConfig.consumers.appEvents.topic }}"
            - name: BusConfig__Consumers__AppEvents__GroupId
              value: "{{ .Values.worker.busConfig.consumers.appEvents.groupId }}"
            - name: BusConfig__Consumers__AppEvents__BufferSize
              value: "{{ .Values.worker.busConfig.consumers.appEvents.bufferSize }}"
            - name: BusConfig__Consumers__AppEvents__WorkersCount
              value: "{{ .Values.worker.busConfig.consumers.appEvents.workersCount }}"
            - name: Hangfire__Database__ConnectionString
              value: "{{ .Values.hangfire.database.connectionString }}"
            - name: Hangfire__Database__UserName
              value: "{{ .Values.hangfire.database.userName }}"
            - name: Hangfire__Database__AppName
              value: "{{ .Values.hangfire.database.appName }}"
            - name: Hangfire__Database__Password
              valueFrom:
                secretKeyRef:
                  name: {{ include "migration.secret.name" . }}
                  key: hangfirePassword
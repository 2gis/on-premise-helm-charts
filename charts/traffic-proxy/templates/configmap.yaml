---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "traffic-proxy.fullname" . }}
  labels:
    {{- include "traffic-proxy.labels" . | nindent 4 }}
data:
  nginx.conf: |
    worker_processes {{ .Values.proxy.worker.processes }};

    pid /run/nginx.pid;

    events {
        worker_connections  {{ .Values.proxy.worker.connections }};
    }

    http {

        {{- if .Values.proxy.upstreams }}
        upstream backend {
            {{- range .Values.proxy.upstreams }}
            server {{ . }} max_fails=5;
            {{- end }}
        }
        {{- end }}

        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format main escape=json '{"remote_addr":"$remote_addr",'
                                    '"remote_user":"$remote_user",'
                                    '"time_local":"$time_local",'
                                    '"time_msec":"$msec",'
                                    '"request":"$request",'
                                    '"status":"$status",'
                                    '"host":"$host",'
                                    '"request_time":"$request_time",'
                                    '"upstream_response_time":"$upstream_response_time",'
                                    '"body_bytes_sent":"$body_bytes_sent",'
                                    '"http_referer":"$http_referer",'
                                    '"http_user_agent":"$http_user_agent",'
                                    '"request_id":"$http_x_request_id",'
                                    '"upstream_request_id":"$upstream_http_x_request_id"}';

      {{- if .Values.proxy.log.customFormats }}
        {{ .Values.proxy.log.customFormats | indent 8 }}
      {{- end }}

      {{- if .Values.proxy.log.accessLog.enabled }}
        access_log {{ .Values.proxy.log.accessLog.path }}  {{ .Values.proxy.log.accessLog.format }};
      {{- else }}
        access_log off;
      {{- end }}

        error_log  {{ .Values.proxy.log.errorLog.path }}  {{ .Values.proxy.log.errorLog.level }};

        sendfile       on;
        tcp_nopush     on;
        keepalive_timeout  {{ .Values.proxy.keepaliveTimeout }};

      {{ if .Values.proxy.cache.enabled }}
        proxy_cache_path /var/cache/nginx/trafficcache keys_zone=trafficcache:{{ .Values.proxy.cache.size }};
      {{ end }}

        server {
          listen {{ .Values.proxy.listen }} default;
          server_name _;

          location / {
            {{ if .Values.proxy.upstreams }}
              proxy_pass         {{ .Values.proxy.protocol }}://backend;
              proxy_set_header   Host {{ required "A valid .Values.proxy.host required" .Values.proxy.host }};
            {{ else }}
              proxy_pass         {{ required "A valid .Values.proxy.host required" .Values.proxy.host }};
            {{ end }}
              proxy_set_header   Upgrade $http_upgrade;
              proxy_set_header   Connection keep-alive;
              proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header   X-Forwarded-Proto $scheme;
            {{ if .Values.proxy.cache.enabled }}
              proxy_cache trafficcache;
              proxy_cache_valid any {{ .Values.proxy.cache.age }};
              proxy_cache_bypass $http_upgrade;
            {{ end }}
          }

          location /health {
              default_type text/html;
              return 200 "<!DOCTYPE html><h2>OK</h2>\n";
          }

      {{ if .Values.proxy.locations }}
        {{ range .Values.proxy.locations }}
          location {{ .path }} {
            {{- .definition | trim | nindent 14}}
          }
        {{ end }}
      {{ end }}
        }

    {{ if .Values.proxy.httpServers }}
      {{ range .Values.proxy.httpServers  }}
        {{- . | trim | nindent 6 }}
      {{ end }}
    {{ end }}
    }

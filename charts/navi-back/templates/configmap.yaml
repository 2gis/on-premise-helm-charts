---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "naviback.fullname" . }}-configmap
data:
  navi-back.conf: |
  {{- if .Values.naviback.overrideConfig }}
    {{ .Values.naviback.overrideConfig | nindent 4 }}
  {{- else }}
    {
      "log": {
        "logger_name": "navi-back",
        "file_prefix": "../../../../",
        "enable_syslog": true,
        "level": {{ .Values.naviback.logLevel | quote }},
        "disabled_tags_": [
          "http",
          "UploadData",
          "Download",
          "ProjectContext"
        ],
        "format": "Json",
        "enable_mirroring": true
      },
      "service": {
        "pid_file": "/var/run/2gis/navi-back.pid"
      },
      {{- /* distribute equally fot HTTP/GRPC */}}
      {{- $httpHandlers := 0 }}
      {{- $grpcHandlers := 0 }}
      {{- if .Values.naviback.grpcPort }}
          {{- $httpHandlers = div .Values.naviback.handlersNumber 2 }}
          {{- $grpcHandlers = sub .Values.naviback.handlersNumber $httpHandlers }}
      {{- else }}
          {{- $httpHandlers = .Values.mosesd.handlersNumber }}
      {{- end }}
      "http": {
        "server": "0.0.0.0",
        "port": {{ .Values.naviback.appPort }},
        "handlers_number": {{ $httpHandlers }},
        "log_verbose": false,
        "max_process_time": {{ .Values.naviback.maxProcessTime | default 20 | int }},
        "response_timelimit": {{ .Values.naviback.responseTimelimit | default 120 | int }},
        "request_timeout": {{ .Values.naviback.requestTimeout | default 120 | int }},
        "timeout_limit_sec": {{ .Values.naviback.timeoutLimitSec | default 1200 | int }},
        "timeout_increment_sec": {{ .Values.naviback.timeoutIncrementSec | default 140 | int }},
        "total_retry_duration_sec": {{ .Values.naviback.totalRetryDurationSec | default 2400 | int }},
        "initial_retry_interval_sec": {{ .Values.naviback.initialRetryIntervalSec | default 2 | int }},
        "retry_policy": "linear"
      },
      {{- if .Values.naviback.grpcPort }}
      "grpc":
      {
        "server" : "0.0.0.0",
        "port" : {{ .Values.naviback.grpcPort | int }},
        "max_process_time" : {{ .Values.naviback.maxProcessTime | default 20 | int }},
        "response_timelimit" : {{ .Values.naviback.responseTimelimit | default 120 | int }},
        "request_timeout" : {{ .Values.naviback.requestTimeout | default 120 | int }},
        "thread_pool_size" : {{ $grpcHandlers }}
      },
      {{- end }}
      {{- if .Values.naviback.sentry.enabled }}
      "error_tracker" : {
        "report_destination_address" : {{ .Values.naviback.sentry.address | quote }},
        "project_name" : {{ .Values.naviback.sentry.project | quote }},
        "user_name" : {{ .Values.naviback.sentry.username | quote }},
        "print_outgoing_messages" : {{ .Values.naviback.sentry.printMessages | default false }},
        "debug" : {{ .Values.naviback.sentry.debug | default false }},
        "path" : {{ .Values.naviback.sentry.reportPath | default "/tmp/sentry" | quote }},
        "handler" : {{ .Values.naviback.sentry.handler | default "/usr/sbin/2gis/mosesd/crashpad_handler" | quote }}
      },
      {{- end }}
      {{- if .Values.transmitter.enabled }}
      "transmitter": {
        "type": {{ .Values.transmitter.type | quote }},
        "host": "127.0.0.1",
        "port": 9999,
        "response_timeout_ms": {{ .Values.transmitter.responseTimeoutMs | int }}
      },
      {{- end }}
      "context": {
        "variables": {
          "LOCAL_PATH": "/opt/castle",
          "LOCAL_ETC": "/etc/2gis/mosesd",
          "REMOTE_PATH": "{{ include "config.setCastleUrl" $ }}",
          "REMOTE_FORECAST" : "{{ .Values.naviback.forecastHost }}",
          "REMOTE_ECA" : "{{ include "config.setEcaUrl" $ }}"
        },
      "rules": {
        "update_period" : 0,
          "nodes": [
            "file://{LOCAL_ETC}/rules.conf"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        "cities": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/{{ .Values.naviback.citiesFilename }}"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        "index": {
          "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 600 }},
          {{- /* search .zip in files */}}
          {{- if regexMatch ".*\\.zip.*" .Values.naviback.indexFilename }}
          "content": "index.json",
          {{- end }}
          "nodes": [
            "{REMOTE_PATH}/{{ .Values.naviback.indexFilename }}"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        {{- if not (include "config.isCTX" $) }}
        {{- if .Values.naviback.indices.speedIndex.enabled }}
        "speed_index" :
        {
            "update_period" : {{ .Values.naviback.disableUpdates | ternary 604800 20 }},
            "nodes" :
            [
                "{REMOTE_ECA}/traffic/moses/speeds5.json"
            ],
            "timeout_seconds":
            {
                "count": 60
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.speedIndex.enabled */}}
        {{- if .Values.naviback.indices.forecastedSpeedsIndex.enabled }}
        "forecasted_speeds_index" :
        {
            "update_period" : {{ .Values.naviback.disableUpdates | ternary 604800 20 }},
            "nodes" :
            [
                "http://{REMOTE_FORECAST}/index.json"
            ],
            "timeout_seconds":
            {
                "count": 30
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.forecastedSpeedsIndex.enabled */}}
        {{- if .Values.naviback.indices.forecastedSpeeds.enabled }}
        "forecasted_speeds" :
        {
            "update_period" : 0,
            "nodes" :
            [
                "http://{REMOTE_FORECAST}/"
            ],
            "timeout_seconds":
            {
                "count": 30
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.forecastedSpeeds.enabled */}}
        {{- if .Values.naviback.indices.etaCorrectionCores.enabled }}
        "eta_correction_cores" :
        {
            "update_period" : 0,
            "nodes" :
            [
                "{REMOTE_PATH}/"
            ],
            "timeout_seconds":
            {
                "count": 60
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.etaCorrectionCores.enabled */}}
        {{- if .Values.naviback.indices.taxiReferers.enabled }}
        "taxi_referers":
        {
            "update_period" : 3600,
             "nodes" :
            [
                "{REMOTE_PATH}/options/taxi_referers.json"
            ],
            "timeout_seconds":
            {
                "count": 360
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.taxiReferers.enabled */}}
        {{- else }}
        {{- if .Values.naviback.indices.restrictedTransportRoutes.enabled }}
        "restricted_transport_routes" :
        {
            "update_period" : 0,
            "nodes" :
            [
              "{REMOTE_PATH}/"
            ],
            "timeout_seconds":
            {
               "count": 10
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.restrictedTransportRoutes.enabled */}}
        {{- if .Values.naviback.indices.restrictedTransportPlatforms.enabled }}
        "restricted_transport_platforms" :
        {
            "update_period" : 0,
            "nodes" :
            [
                "{REMOTE_PATH}/"
            ],
            "timeout_seconds":
            {
                "count": 10
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.restrictedTransportPlatforms.enabled */}}
        {{- if .Values.naviback.indices.restrictedTransportIndex.enabled }}
        "restricted_transport_index" :
        {
            "update_period" : {{ .Values.naviback.disableUpdates | ternary 604800 300 }},
            "nodes" :
            [
                "{REMOTE_PATH}/restricted_transport.json.zip"
            ],
            "timeout_seconds":
            {
                "count": 10
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.restrictedTransportIndex.enabled */}}
        {{- end }}
        {{- if .Values.naviback.indices.ctxOptions.enabled }}
        "ctx_options": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/options/ctx_config.json"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        {{- end }}{{- /* .Values.naviback.indices.ctxOptions.enabled */}}
        {{- if .Values.naviback.indices.carOptions.enabled }}
        "car_options": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/options/{{ .Values.naviback.indices.carOptions.filename | default "carrouting.json" }}"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        {{- end }}{{- /* .Values.naviback.indices.carOptions.enabled */}}
        {{- if .Values.naviback.indices.countryCarOptions.enabled }}
        "country_car_options": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/options/{payload}.json"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        {{- end }}{{- /* .Values.naviback.indices.countryCarOptions.enabled */}}
        {{- if .Values.naviback.indices.projectCarOptions.enabled }}
        "project_car_options": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        {{- end }}{{- /* .Values.naviback.indices.projectCarOptions.enabled */}}
        "routing_resources": {
          "nodes": [
            "dir:///usr/share/2gis/moses2-routing-resources/"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        "packages": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": {
            "count": 60
          }
        },
        "restrictions": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        {{- if .Values.naviback.indices.entrances.enabled }}
        "entrances": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        {{- end }}{{- /* .Values.naviback.indices.entrances.enabled */}}
        {{- if not (include "config.isCTX" $) }}

        {{- if .Values.naviback.indices.smatrix.enabled }}
        "smatrix": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        {{- end }}{{- /* .Values.naviback.indices.smatrix.enabled */}}
        {{- if .Values.naviback.indices.speedCams.enabled }}
        "speed_cams": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": {
            "count": 30
          }
        },
        {{- end }}{{- /* .Values.naviback.indices.speedCams.enabled */}}
        {{- if .Values.naviback.indices.tugcUsersIndex.enabled }}
        "tugc_users_index" :
        {
            "update_period" : {{ .Values.naviback.disableUpdates | ternary 604800 300 }},
            "nodes" :
            [
                "{REMOTE_PATH}/tugc_users.json.zip"
            ],
            "timeout_seconds":
            {
                "count": 30
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.tugcUsersIndex.enabled */}}
        {{- if .Values.naviback.indices.tugcUsers.enabled }}
        "tugc_users" :
        {
            "update_period" : 0,
            "nodes" :
            [
                "{REMOTE_PATH}/"
            ],
            "timeout_seconds":
            {
                "count": 30
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.tugcUsers.enabled */}}
        {{- if .Values.naviback.indices.tugc2gisIndex.enabled }}
        "tugc_2gis_index" :
        {
            "update_period" : {{ .Values.naviback.disableUpdates | ternary 604800 600 }},
            "nodes" :
            [
                "{REMOTE_PATH}/tugc_2gis.json.zip"
            ],
            "timeout_seconds":
            {
                "count": 30
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.tugc2gisIndex.enabled */}}
        {{- if .Values.naviback.indices.tugc2gis.enabled }}
        "tugc_2gis" :
        {
            "update_period" : 0,
            "nodes" :
            [
                "{REMOTE_PATH}/"
            ],
            "timeout_seconds":
            {
                "count": 30
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.tugc2gis.enabled */}}
        {{- if .Values.naviback.indices.onlineSpeeds.enabled }}
        "online_speeds" :
        {
            "update_period" : 0,
            "max_updated_time_diff_minutes" : 20,
            "nodes" :
            [
                "{REMOTE_ECA}/"
            ],
            "timeout_seconds":
            {
                "count": 30
            }
        },
        {{- end }}{{- /* .Values.naviback.indices.onlineSpeeds.enabled */}}
        {{- end }}
        {{- if (include "config.isTaxi" $) }}
        {{- if .Values.naviback.indices.taxiSpeedIndex.enabled }}
          "taxi_speed_index": {
              "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 20 }},
              "nodes": [
              "{REMOTE_ECA}/traffic/moses/speeds5.json"
              ],
              "timeout_seconds": {
              "count": 60
              }
              },
        {{- end }}{{- /* .Values.naviback.indices.taxiSpeedIndex.enabled */}}
        {{- if .Values.naviback.indices.onlineTaxiSpeeds.enabled }}
          "online_taxi_speeds" :
            {
              "update_period" : 0,
              "max_updated_time_diff_minutes" : 20,
              "nodes" :
              [
                "{REMOTE_ECA}/"
              ],
              "timeout_seconds":
              {
                "count": 60
              }
            },
        {{- end }}{{- /* .Values.naviback.indices.onlineTaxiSpeeds.enabled */}}
        {{- end }}
        {{- if (include "config.isTruck" $) }}
        {{- if .Values.naviback.indices.passZones.enabled }}
          "pass_zones":
            {
              "update_period": 0,
              "nodes":
              [
                "{REMOTE_PATH}/"
              ],
              "timeout_seconds":
              {
                "count": 60
              }
            },
        {{- end }}{{- /* .Values.naviback.indices.passZones.enabled */}}
        {{- end }}
            "edge_transition_probability": {
              "update_period": 0,
              "nodes": [
                  "{REMOTE_PATH}/"
              ],
              "timeout_seconds": {
                  "count": 60
              },
            "cache_path": "file://{LOCAL_PATH}/{project_name}/edge_transition_probability.json"
        },
            "turn_penalties": {
              "update_period": 0,
              "nodes": [
                  "{REMOTE_PATH}/"
              ],
              "timeout_seconds": {
                  "count": 60
              },
            "cache_path": "file://{LOCAL_PATH}/{project_name}/turn_penalties.json"
        },
        {{- if .Values.s3.enabled }}
          "s3": {
            "distance_matrix": {
              "endpoint": {{ .Values.s3.host | quote }},
              "bucket": {{ .Values.s3.bucket | quote }},
              "access_key": {{ .Values.s3.accessKey | quote }},
              "secret_key": {{ .Values.s3.secretKey | quote }}
            }
          },
        {{- end }}
        {{- if (include "config.isMapMatching" $) }}
        "map_matching" :
        {
          "fmm":
            {
              "k": "24",
              "radius": "4000",
              "gps_error": "3000",
              "vmax": "40",
              "factor": "1.5",
              "reverse_tolerance": "0.1"
            }
        },
        {{- end }}
        {{- if .Values.kafka.enabled }}
          "kafka": {
            "task_group_id" : {{ .Values.kafka.groupId | quote }},
            "cancel_group_id": {{ .Values.kafka.groupId | quote }},
            "handlers_number": {{ .Values.kafka.handlersNumber }},
            {{- /*
                 Collect merged Kafka properties from these dictionaries:
                   - kafka.properties: this is a simple key/value dictionary
                   - kafka.fileProperties: this is a key/content dictionary given in values,
                     content is sensitive and stored in Secret resource, they get
                     mounted as files sonamed after key. While actual secret values are
                     hidden this way, what actually goes here in environment properties is
                     file names. This value substitution is implemented down here.
                 */ -}}
            {{- $kafkaProperties := dict -}}
            {{- range $key, $_ := .Values.kafka.fileProperties -}}
            {{- $_ := set $kafkaProperties $key (printf "/etc/2gis/mosesd/secret/%s" $key) -}}
            {{- end -}}
            {{- $kafkaProperties := mustMerge $kafkaProperties .Values.kafka.properties -}}
            "kafka_properties": {{ mustToPrettyJson $kafkaProperties | nindent 12 }},
            "distance_matrix": {
              "task_topic": {{ .Values.kafka.distanceMatrix.taskTopic | quote }},
              "cancel_topic":  {{ .Values.kafka.distanceMatrix.cancelTopic | quote }},
              "status_topic":  {{ .Values.kafka.distanceMatrix.statusTopic | quote }},
              "update_task_status_period_sec": {{ .Values.kafka.distanceMatrix.updateTaskStatusPeriodSec | int }},
              "message_expired_period_sec" : {{ .Values.kafka.distanceMatrix.messageExpiredPeriodSec | int }},
              "request_download_timeout_sec" : {{ .Values.kafka.distanceMatrix.requestDownloadTimeoutSec | int }},
              "response_upload_timeout_sec": {{ .Values.kafka.distanceMatrix.responseUploadTimeoutSec | int }}
            }
          },
        {{- end }}
        {{- if and .Values.naviback.bss.enabled .Values.naviback.bss.client.serviceRemoteAddress }}
          "business_statistics_system" : {
            "client" : {
                "service_remote_address" : {{ .Values.naviback.bss.client.serviceRemoteAddress | mustToJson }},
                "message_count_to_flush" : {{ .Values.naviback.bss.client.messageCountToFlush | mustToJson }},
                "use_compression" : {{ .Values.naviback.bss.client.useCompression | mustToJson }},
                "package_size_max_bytes" : {{ .Values.naviback.bss.client.packageSizeMaxBytes | mustToJson }},
                "pending_transmission_max_count" : {{ .Values.naviback.bss.client.pendingTransmissionMaxCount | mustToJson }},
                "timeout_ms" : {{ .Values.naviback.bss.client.timeoutLimitMilSec | mustToJson }}
              }
          },
        {{- end }}{{- /* .Values.naviback.bss.enabled */}}
        {{- if not .Values.license.notSupported }}
        {{- $licenseUrl := .Values.license.url | required "Valid license.url required!" }}
        "pasportool_client":
          {{- toPrettyJson .Values.license | nindent 8 -}},
        {{- end }}{{- /* if not .Values.license.notSupported */}}
        {{- if .Values.naviback.rtr.enabled }}
        "restrictions_index": {
          "update_period": 300,
          "nodes": [
            "{{ .Values.naviback.rtr.url }}/restrictions_index.json.zip"
          ],
          "timeout_seconds": {
            "count": 30
          },
          "cache_path_": "file://{LOCAL_PATH}/{project_name}/restrictions_index.json.zip"
        },
        {{- end }}{{- /* if .Values.mosesd.rtr.enabled */}}
        {{- if .Values.naviback.additionalSections }}
          {{- include "tplvalues.render" ( dict "value" .Values.naviback.additionalSections "context" $) | nindent 8 }}
        {{- end }}
        "server_info": {
          "simple_network_car" : {{ include "config.setSimpleNetworkCar" $ | default false -}},
          "simple_network_pedestrian" : {{ include "config.setSimpleNetworkPedestrian" $ | default false -}},
          "simple_network_taxi" : {{ include "config.setSimpleNetworkTaxi" $ | default false -}},
          "simple_network_bicycle" : {{ include "config.setSimpleNetworkBicycle" $ | default false -}},
          "simple_network_truck" : {{ include "config.setSimpleNetworkTruck" $ | default false -}},
          "simple_network_emergency" : {{ include "config.setSimpleNetworkEmergency" $ | default false -}},
          "ctx_only": {{ include "rules.inRoutingSectionOnly" (dict "routingValue" "ctx" "context" $) -}},
          "attractor_car" : {{ include "config.setAttractorCar" $ | default false -}},
          "attractor_pedestrian" : {{ include "config.setAttractorPedestrian" $ | default false -}},
          "attractor_bicycle" : {{ include "config.setAttractorBicycle" $ | default false -}},
          "attractor_taxi" : {{ include "config.setAttractorTaxi" $ | default false -}},
          "attractor_truck" : {{ include "config.setAttractorTruck" $ | default false -}},
          "reduce_edges_optimization_flag" : {{ include "config.setReduceEdgesOptimizationFlag" $ | default false -}},
          {{- if ((.Values.resources).limits).cpu }}
          "dist_matrix_thread_pool_size" : {{ include "config.setCpuNumber" . }},
          "simple_network_build_thread_pool_size" : {{ include "config.setCpuNumber" . }},
          {{- end }}
          "update_projects_limit" : 2,
          "carrouting_page_cache_size" : 8192,
          "carrouting_tile_cache_size" : 8192,
          "carrouting_bit_tile_cache_size" : 2048,
          "dump_query" : {{ mustToJson (.Values.naviback.dump).query }},
          "dump_result" : {{ mustToJson (.Values.naviback.dump).result }},
          "dump_answer" : {{ mustToJson (.Values.naviback.dump).answer }},
          "max_parallel_workers" : 2,
          "use_memory_mapped_vfs" : true,
          "engine_update_period_sec" : {{ include "config.setEngineUpdatePeriod" $ | default 30 }},
          {{- if .Values.naviback.server_id }}
          "server_id" : "{{- include "tplvalues.render" ( dict "value" .Values.naviback.server_id "context" .) }}",
          {{- else }}
          "server_id" : "{{- include "naviback.fullname" . }}",
          {{- end }}
          "extended_metrics": [ ],
          "dash_colors": [
            {
              "ratio": 2,
              "class": 0
            },
            {
              "ratio": 3.75,
              "class": 1
            },
            {
              "ratio": 10,
              "class": 2
            },
            {
              "ratio": 1000,
              "class": 5
            }
          ],
          "dm_sources_limit": {{ .Values.naviback.dmSourcesLimit | int }},
          "dm_targets_limit": {{ .Values.naviback.dmTargetsLimit | int }},
          "carrouting_options": {
            "distance_matrix_options": {
              "enable_passable_barriers": {{ .Values.naviback.enablePassableBarriers | default false | mustToJson }}
            }
          },
          "traffic_color_options": {
            "from_0_to_5_km": {
              "green_jam_ratio": 50,
              "yellow_jam_minutes": 10,
              "deep_red_jam_minutes": 20
            },
            "from_5_to_10_km": {
              "green_jam_ratio": 40,
              "yellow_jam_minutes": 15,
              "deep_red_jam_minutes": 25
            },
            "from_10_km": {
              "green_jam_ratio": 30,
              "yellow_jam_minutes": 20,
              "deep_red_jam_minutes": 30
            }
          }
          {{- if .Values.naviback.serverAdditionalSections -}}
            ,{{- include "tplvalues.render" ( dict "value" .Values.naviback.serverAdditionalSections "context" $) | nindent 10 }}
          {{- end }}
        }
      }
    }
  {{- end }}{{- /* .Values.naviback.overrideConfig */}}
  rules.conf: |-
    {{- include "rules.renderRules" . }}
  {{- if .Values.transmitter.enabled }}
  envoy.yaml: |
    admin:
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9901
    static_resources:
      listeners:
      - name: attractor_listener
        address:
          socket_address:
            protocol: TCP
            address: 127.0.0.1
            port_value: 9999
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: attractor
              http_filters:
              - name: envoy.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      - name: attractor
        connect_timeout: 1s
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        # empty parameter specifying not to sway off gRPC
        http2_protocol_options: {}
        load_assignment:
          cluster_name: attractor
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.transmitter.host | default "localhost" | quote }}
                    port_value: {{ .Values.transmitter.port | default 8080 | int }}
  {{- end }}{{- /* if .Values.transmitter.enabled */}}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "generic-chart.fullname" . }}-configmap
data:
  navi-back.conf: |
  {{- if .Values.naviback.overrideConfig }}
    {{ .Values.naviback.overrideConfig | nindent 4 }}
  {{- else }}
    {
      "log": {
        "logger_name": "navi-back",
        "file_prefix": "../../../../",
        "enable_syslog": true,
        "level": {{ .Values.naviback.logLevel | quote }},
        "disabled_tags_": [
          "http",
          "UploadData",
          "Download",
          "ProjectContext"
        ],
        "format": "Json",
        "json_message_field_name": {{ .Values.naviback.logMessageField | quote }},
        "enable_mirroring": true
      },
      "service": {
        "pid_file": "/var/run/2gis/navi-back.pid"
      },
      {{- /* distribute equally fot HTTP/GRPC */}}
      "http": {
        "server": "0.0.0.0",
        "port": {{ .Values.naviback.appPort }},
        "handlers_number": {{ .Values.naviback.handlersNumber | int }},
        "queue_size": {{ .Values.naviback.queueSize | int }},
        "log_verbose": false,
        "max_process_time": {{ include "config.getMaxProcessTime" . | int }},
        "response_timelimit": {{ .Values.naviback.responseTimelimit | default 120 | int }},
        "request_timeout": {{ .Values.naviback.requestTimeout | default 120 | int }},
        "timeout_limit_sec": {{ .Values.naviback.timeoutLimitSec | default 1200 | int }},
        "timeout_increment_sec": {{ .Values.naviback.timeoutIncrementSec | default 140 | int }},
        "total_retry_duration_sec": {{ .Values.naviback.totalRetryDurationSec | default 2400 | int }},
        "initial_retry_interval_sec": {{ .Values.naviback.initialRetryIntervalSec | default 2 | int }},
        "retry_policy": "linear"
      },
      {{- if .Values.naviback.grpcPort }}
      "grpc":
      {
        "server": "0.0.0.0",
        "port": {{ .Values.naviback.grpcPort | int }},
        "max_process_time": {{ .Values.naviback.maxProcessTime | default 20 | int }},
        "response_timelimit": {{ .Values.naviback.responseTimelimit | default 120 | int }},
        "request_timeout": {{ .Values.naviback.requestTimeout | default 120 | int }}
      },
      {{- end }}
      {{- if .Values.naviback.sentry.enabled }}
      "error_tracker": {
        "report_destination_address": {{ .Values.naviback.sentry.address | quote }},
        "project_name": {{ .Values.naviback.sentry.project | quote }},
        "user_name": {{ .Values.naviback.sentry.username | quote }},
        "print_outgoing_messages": {{ .Values.naviback.sentry.printMessages | default false }},
        "debug": {{ .Values.naviback.sentry.debug | default false }},
        "path": {{ .Values.naviback.sentry.reportPath | default "/tmp/sentry" | quote }},
        "handler": {{ .Values.naviback.sentry.handler | default "/usr/sbin/2gis/mosesd/crashpad_handler" | quote }}
      },
      {{- end }}
      {{- if .Values.transmitter.enabled }}
      "transmitter": {
        "type": {{ .Values.transmitter.type | quote }},
        "host": "127.0.0.1",
        "port": 9999,
        "timeout_limit_ms": {{ .Values.transmitter.responseTimeoutMs | int }}
      },
      {{- end }}
      "context": {
        {{- if .Values.naviback.validation.enabled }}
        "validation": [
          {
            "service_name": "ctx",
            "schemas_folder": {{ .Values.naviback.validation.ctx.schemasFolder | quote }},
            "request_schema_name": {{ .Values.naviback.validation.ctx.requestSchemaName | quote }},
            "response_schema_name": {{ .Values.naviback.validation.ctx.responseSchemaName | quote }}
          },
          {
            "service_name": "bss",
            "schemas_folder": {{ .Values.naviback.validation.bss.schemasFolder | quote }},
            "request_schema_name": {{ .Values.naviback.validation.bss.requestSchemaName | quote }},
            "response_schema_name": {{ .Values.naviback.validation.bss.responseSchemaName | quote }}
          },
          {
            "service_name": "distance_matrix",
            "schemas_folder": {{ .Values.naviback.validation.distanceMatrix.schemasFolder | quote }},
            "request_schema_name": {{ .Values.naviback.validation.distanceMatrix.requestSchemaName | quote }},
            "response_schema_name": {{ .Values.naviback.validation.distanceMatrix.responseSchemaName | quote }}
          },
          {
            "service_name": "isochrone",
            "schemas_folder": {{ .Values.naviback.validation.isochrone.schemasFolder | quote }},
            "request_schema_name": {{ .Values.naviback.validation.isochrone.requestSchemaName | quote }},
            "response_schema_name": {{ .Values.naviback.validation.isochrone.responseSchemaName | quote }}
          }
        ],
        {{- end }}
        "variables": {
          "LOCAL_PATH": "/opt/castle",
          "LOCAL_ETC": "/etc/2gis/mosesd",
          {{- if .Values.naviback.hierarchies.enabled }}
          "S3_CACHE_PATH": {{ .Values.naviback.hierarchies.s3path | quote }},
          "SHORTCUT_PATH": "/tmp/hierarchies/shortcuts",
          "PATCHES_PATH": "/tmp/hierarchies/patches",
          {{- end }}{{- /* if .Values.naviback.hierarchies.enabled */}}
          "REMOTE_PATH": "{{ include "config.setCastleUrl" $ }}",
          "REMOTE_PATH_PROXY": "{{ .Values.naviback.castleUrlProxy }}",
          "REMOTE_FORECAST": "{{ include "config.setForecastUrl" $ }}",
          "REMOTE_LONG_FORECAST": "{{ include "config.setLongForecastUrl" $ }}",
          "REMOTE_ECA": "{{ include "config.setEcaUrl" $ }}"
        },
        "rules": {
          "update_period": 0,
          "nodes": [
            "{{ .Values.naviback.rulesUrl }}"
          ],
          "timeout_seconds": 30
        },
        "cities": {
          "update_period": 0,
          {{- /* search .zip in files */}}
          {{- if regexMatch ".*\\.zip.*" .Values.naviback.citiesFilename }}
          "content": "cities.conf",
          {{- end }}
          "nodes": [
            "{REMOTE_PATH}/{{ .Values.naviback.citiesFilename }}"
          ],
          "timeout_seconds": 30
        },
        "indices": [
          {
            "index_name": "default",
            "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 600 }},
            {{- /* search .zip in files */}}
            {{- if regexMatch ".*\\.zip.*" .Values.naviback.indexFilename }}
            "content": "index.json",
            {{- end }}
            "nodes": [
              "{REMOTE_PATH}/{{ .Values.naviback.indexFilename }}"
            ],
            "timeout_seconds": 30
          }
          {{- if .Values.naviback.castleUrlProxy -}}
          ,
          {
            "index_name": "proxy",
            "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 600 }},
            {{- /* search .zip in files */}}
            {{- if regexMatch ".*\\.zip.*" .Values.naviback.indexFilename }}
            "content": "index.json",
            {{- end }}
            "nodes": [
              "{REMOTE_PATH_PROXY}/{{ .Values.naviback.indexFilename }}"
            ],
            "timeout_seconds": 30
          }
          {{- end }}
          {{- if not (include "config.isCTX" $) }}
          {{- if .Values.naviback.indices.speedIndex.enabled -}}
          ,
          {
            "index_name": "speed_index",
            "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 20 }},
            "nodes": [
              "{REMOTE_ECA}/{{ .Values.naviback.indices.speedIndex.filename | default "traffic/moses/speeds5.json" }}"
            ],
            "timeout_seconds": 60
          }
          {{- end }}{{- /* .Values.naviback.indices.speedIndex.enabled */}}
          {{- if and .Values.naviback.indices.forecastedSpeedsIndex.enabled (or .Values.naviback.forecastHost .Values.naviback.forecastUrl) -}}
          ,
          {
            "index_name": "forecasted_speeds_index",
            "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 20 }},
            "nodes": [
              "{REMOTE_FORECAST}/{{ .Values.naviback.forecastFilename | default "index.json" }}"
            ],
            "timeout_seconds": 30
          }
          {{- end }}{{- /* .Values.naviback.indices.forecastedSpeedsIndex.enabled */}}
          {{- if and .Values.naviback.indices.forecastedLongSpeedsIndex.enabled .Values.naviback.longForecastUrl -}}
          ,
          {
            "index_name": "forecasted_long_speeds_index",
            "update_period": {{ .Values.naviback.indices.forecastedLongSpeedsIndex.updatePeriod }},
            "nodes": [
              "{REMOTE_LONG_FORECAST}/{{ .Values.naviback.longForecastFilename | default "index.json" }}"
            ],
            "timeout_seconds": 60
          }
          {{- end }}{{- /* .Values.naviback.indices.forecastedLongSpeeds.enabled */}}
          {{- if .Values.naviback.indices.tugcUsersIndex.enabled -}}
          ,
          {
            "index_name": "tugc_users_index",
            "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 150 }},
            "nodes": [
              "{REMOTE_PATH}/tugc_users.json.zip"
            ],
            "timeout_seconds": 30
          }
          {{- end }}{{- /* .Values.naviback.indices.tugcUsersIndex.enabled */}}
          {{- if .Values.naviback.indices.tugc2gisIndex.enabled -}}
          ,
          {
            "index_name": "tugc_2gis_index",
            "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 300 }},
            "nodes": [
              "{REMOTE_PATH}/tugc_2gis.json.zip"
            ],
            "timeout_seconds": 30
          }
          {{- end }}{{- /* .Values.naviback.indices.tugc2gisIndex.enabled */}}
          {{- end }}{{- /* if not (include "config.isCTX" .) */}}
          {{- if (include "config.isTaxi" . ) }}
          {{- end }}{{- /* if (include "config.isTaxi" . ) */}}
          {{- if .Values.naviback.etaScheduleIndex.enabled -}}
          ,
          {
            "index_name": "eta_schedule_index",
            "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 10 }},
            "nodes": [
              "{{ .Values.naviback.etaScheduleIndex.url }}"
            ],
            "timeout_seconds": 5
          }
          {{- end }}{{- /* if .Values.naviback.etaScheduleIndex.enabled */}}
          {{- if .Values.naviback.rtr.enabled -}}
          ,
          {
            "index_name": "restrictions_index",
            "update_period": {{ .Values.naviback.rtr.updatePeriod | int }},
            "nodes": [
              "{{ .Values.naviback.rtr.url }}/{{ .Values.naviback.rtr.filename | default "restrictions_index.json.zip" }}"
            ],
            "timeout_seconds": {{ .Values.naviback.rtr.timeoutSeconds | int }}
          }
        {{- end }}{{- /* if .Values.naviback.rtr.enabled */}}
        ],{{- /* end "indices" */}}
        {{- if not (include "config.isCTX" $) }}
        {{- if and .Values.naviback.indices.forecastedSpeedsIndex.enabled (or .Values.naviback.forecastHost .Values.naviback.forecastUrl)}}
        "forecasted_speeds": {
          "index_name": "forecasted_speeds_index",
          "update_period": 0,
          "nodes": [
            "{REMOTE_FORECAST}/"
          ],
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.forecastedSpeeds.enabled */}}
        {{- if and .Values.naviback.indices.forecastedLongSpeeds.enabled .Values.naviback.longForecastUrl }}
        "forecasted_long_speeds": {
          "index_name": "forecasted_long_speeds_index",
          "update_period": 0,
          "nodes": [
            "{REMOTE_LONG_FORECAST}/"
          ],
          "timeout_seconds": 60
        },
        {{- end }}{{- /* .Values.naviback.indices.forecastedLongSpeeds.enabled */}}
        {{- if .Values.naviback.indices.etaCorrectionCores.enabled }}
        "eta_correction_cores": {
          "index_name": {{ .Values.naviback.indices.etaCorrectionCores.proxy | ternary "proxy" "default" | quote }},
          "update_period": 0,
          "timeout_seconds": 60
        },
        {{- end }}{{- /* .Values.naviback.indices.etaCorrectionCores.enabled */}}
        {{- else }}
        {{- if .Values.naviback.indices.restrictedTransportIndex.enabled }}
        "restricted_transport_index": {
          "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 300 }},
          "nodes": [
            "{{ .Values.naviback.indices.restrictedTransportIndex.proxy | ternary "{REMOTE_PATH_PROXY}" "{REMOTE_PATH}" }}/restricted_transport.json.zip"
          ],
          "timeout_seconds": 10
        },
        {{- end }}{{- /* .Values.naviback.indices.restrictedTransportIndex.enabled */}}
        {{- end }}
        {{- if .Values.naviback.indices.ctxOptions.enabled }}
        "ctx_options": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/options/ctx_config.json"
          ],
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.ctxOptions.enabled */}}
        {{- if .Values.naviback.indices.carOptions.enabled }}
        "car_options": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/options/{{ .Values.naviback.indices.carOptions.filename | default "carrouting.json" }}"
          ],
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.carOptions.enabled */}}
        {{- if .Values.naviback.indices.countryCarOptions.enabled }}
        "country_car_options": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/options/{payload}.json"
          ],
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.countryCarOptions.enabled */}}
        {{- if .Values.naviback.indices.projectCarOptions.enabled }}
        "project_car_options": {
          "index_name": "default",
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.projectCarOptions.enabled */}}
        "routing_resources": {
          "nodes": [
            "dir:///usr/share/2gis/moses2-routing-resources/"
          ],
          "timeout_seconds": 30
        },
        "packages": {
          "index_name": "default",
          "update_period": 0,
          "timeout_seconds": 60
        },
        {{- if .Values.naviback.rtr.enabled }}
        "restrictions": {
          "index_name": "restrictions_index",
          "update_period": 0,
          "nodes": [
            "{{ include "config.setRestrictionUrl" $ }}/"
          ],
          "timeout_seconds": {{ .Values.naviback.rtr.timeoutSeconds | int }}
        },
        {{- end }}{{- /* if .Values.naviback.rtr.enabled */}}
        {{- if .Values.naviback.indices.entrances.enabled }}
        "entrances": {
          "index_name": "default",
          "update_period": 0,
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.entrances.enabled */}}
        {{- if not (include "config.isCTX" $) }}

        {{- if .Values.naviback.indices.smatrix.enabled }}
        "smatrix": {
          "index_name": {{ .Values.naviback.indices.smatrix.proxy | ternary "proxy" "default" | quote}},
          "update_period": 0,
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.smatrix.enabled */}}
        {{- if .Values.naviback.indices.speedCams.enabled }}
        "speed_cams": {
          "index_name": "default",
          "update_period": 0,
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.speedCams.enabled */}}
        {{- if .Values.naviback.indices.tugcUsers.enabled }}
        "tugc_users": {
          "index_name": "tugc_users_index",
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.tugcUsers.enabled */}}
        {{- if .Values.naviback.indices.tugc2gis.enabled }}
        "tugc_2gis": {
          "index_name": "tugc_2gis_index",
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.tugc2gis.enabled */}}
        {{- if .Values.naviback.indices.onlineSpeeds.enabled }}
        "online_speeds": {
          "index_name": "speed_index",
          "update_period": 0,
          "max_updated_time_diff_minutes": 20,
          "nodes": [
            "{REMOTE_ECA}/"
          ],
          "timeout_seconds": 30
        },
        {{- end }}{{- /* .Values.naviback.indices.onlineSpeeds.enabled */}}
        {{- end }}
        {{- if (include "config.isTaxi" $) }}
        {{- if .Values.naviback.indices.taxiReferers.enabled }}
        "taxi_referers": {
          "update_period": 3600,
          "nodes": [
            "{REMOTE_PATH}/options/taxi_referers.json"
          ],
          "timeout_seconds": 360
        },
        {{- end }}{{- /* .Values.naviback.indices.taxiReferers.enabled */}}
        {{- end }}{{- /* if (include "config.isTaxi" .) */}}
        {{- if (include "config.isTruck" $) }}
        {{- if .Values.naviback.indices.passZones.enabled }}
        "pass_zones": {
          "index_name": "default",
          "update_period": 0,
          "timeout_seconds": 60
        },
        {{- end }}{{- /* .Values.naviback.indices.passZones.enabled */}}
        {{- end }}
        "edge_transition_probability": {
          "index_name": {{ include "config.setCastleProxyIndex" $ | quote }},
          "update_period": 0,
          "timeout_seconds": 60
        },
        "turn_penalties": {
          "index_name": {{ include "config.setCastleProxyIndex" $ | quote }},
          "update_period": 0,
          "timeout_seconds": 60
        },
        {{- if .Values.naviback.indices.snImport.enabled }}
        "sn_import": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": 60
        },
        {{- end }}{{- /* .Values.naviback.indices.snImport.enabled */}}
        {{- if .Values.naviback.indices.routeAsUsual.enabled }}
        "route_as_usual": {
          "update_period": 28800,
          "nodes": [
            "{{ .Values.naviback.routeAsUsualUrl }}"
          ],
          "timeout_seconds": 60
        },
        {{- end }}{{- /* .Values.naviback.indices.routeAsUsual.enabled */}}
        {{- if .Values.naviback.indices.walkingUserSpeeds.enabled }}
        "walking_user_speeds": {
          "update_period": 0,
          "nodes": [
            "{{ .Values.naviback.walkingUserSpeedsUrl }}"
          ],
          "timeout_seconds": 60
        },
        {{- end }}{{- /* .Values.naviback.indices.walkingUserSpeeds.enabled */}}
        {{- if .Values.naviback.indices.geoImport.enabled }}
        "geo_import": {
          "update_period": 0,
          "nodes": [
            "{REMOTE_PATH}/"
          ],
          "timeout_seconds": 60
        },
        {{- end }}{{- /* .Values.naviback.indices.geoImport.enabled */}}
        {{- if .Values.s3.enabled }}
        "s3": {
          "distance_matrix": {
            {{- if .Values.s3.suffix }}
            "suffix": {{ .Values.s3.suffix | quote }},
            {{- end }}
            "endpoint": {{ .Values.s3.host | quote }},
            "bucket": {{ .Values.s3.bucket | quote }},
            "access_key": {{ .Values.s3.accessKey | quote }},
            "secret_key": {{ .Values.s3.secretKey | quote }}
          }
        },
        {{- end }}
        {{- if (include "config.isMapMatching" $) }}
        "map_matching": {
          "fmm": {
            "k": "24",
            "radius": "4000",
            "gps_error": "2000",
            "vmax": "40",
            "factor": "1.5",
            "reverse_tolerance": "0.1"
          }
        },
        {{- end }}
        {{- if .Values.kafka.enabled }}
        "kafka": {
          "task_group_id": {{ .Values.kafka.groupId | quote }},
          "cancel_group_id": {{ .Values.kafka.groupId | quote }},
          "handlers_number": {{ .Values.kafka.handlersNumber }},
          {{- /*
               Collect merged Kafka properties from these dictionaries:
                 - kafka.properties: this is a simple key/value dictionary
                 - kafka.fileProperties: this is a key/content dictionary given in values,
                   content is sensitive and stored in Secret resource, they get
                   mounted as files sonamed after key. While actual secret values are
                   hidden this way, what actually goes here in environment properties is
                   file names. This value substitution is implemented down here.
              */ -}}
          {{- $kafkaProperties := dict -}}
          {{- range $key, $_ := .Values.kafka.fileProperties -}}
          {{- $_ := set $kafkaProperties $key (printf "/etc/2gis/mosesd/secret/%s" $key) -}}
          {{- end -}}
          {{- $kafkaProperties := mustMerge $kafkaProperties .Values.kafka.properties }}
          "kafka_properties":
            {{- mustToPrettyJson $kafkaProperties | nindent 12 -}},
          "distance_matrix": {
            "task_topic": {{ .Values.kafka.distanceMatrix.taskTopic | quote }},
            "cancel_topic": {{ .Values.kafka.distanceMatrix.cancelTopic | quote }},
            "status_topic": {{ .Values.kafka.distanceMatrix.statusTopic | quote }},
            "update_task_status_period_sec": {{ .Values.kafka.distanceMatrix.updateTaskStatusPeriodSec | int }},
            "message_expired_period_sec": {{ .Values.kafka.distanceMatrix.messageExpiredPeriodSec | int }},
            "request_download_timeout_sec": {{ .Values.kafka.distanceMatrix.requestDownloadTimeoutSec | int }},
            "response_upload_timeout_sec": {{ .Values.kafka.distanceMatrix.responseUploadTimeoutSec | int }}
          }
        },
        {{- end }}
        {{- if .Values.routesharing.enabled }}
        "sharing": {
          {{- $kafkaProperties := dict -}}
          {{- range $key, $_ := .Values.routesharing.kafka.fileProperties -}}
          {{- $_ := set $kafkaProperties $key (printf "/etc/2gis/mosesd/secret-routesharing/%s" $key) -}}
          {{- end -}}
          {{- $kafkaProperties := mustMerge $kafkaProperties .Values.routesharing.kafka.properties }}
          "kafka_properties":
            {{- mustToPrettyJson $kafkaProperties | nindent 12 }},
          "topic": {{ .Values.routesharing.kafka.topic | required "routesharing.kafka.topic is not set" | quote }}
        },
        {{- end }}{{/* .Values.routesharing.enabled */}}
        {{- if and .Values.naviback.bss.enabled .Values.naviback.bss.client.serviceRemoteAddress }}
        "business_statistics_system": {
          "client": {
              "service_remote_address": {{ .Values.naviback.bss.client.serviceRemoteAddress | mustToJson }},
              "message_count_to_flush": {{ .Values.naviback.bss.client.messageCountToFlush | mustToJson }},
              "use_compression": {{ .Values.naviback.bss.client.useCompression | mustToJson }},
              "package_size_max_bytes": {{ .Values.naviback.bss.client.packageSizeMaxBytes | mustToJson }},
              "pending_transmission_max_count": {{ .Values.naviback.bss.client.pendingTransmissionMaxCount | mustToJson }},
              "timeout_ms": {{ .Values.naviback.bss.client.timeoutLimitMilSec | mustToJson }}
            }
        },
        {{- end }}{{- /* .Values.naviback.bss.enabled */}}
        {{- if not .Values.license.notSupported }}
        {{- $licenseUrl := .Values.license.url | required "Valid license.url required!" }}
        "pasportool_client": {
          "url": {{ .Values.license.url | quote }},
          "additional_time_after_connection_lost": {{ .Values.license.additionalTimeAfterConnectionLost | default 3600 | int }},
          {{- /* these parameters are not publicly useful, left undocumented intentionally */}}
          "is_enabled": {{ .Values.license.isEnabled | default "" | quote }},
          "license_check_interval": {{ .Values.license.licenseCheckInterval | default 120 | int }}
        },
        {{- end }}{{- /* if not .Values.license.notSupported */}}
        {{- if .Values.naviback.hierarchies.enabled }}
          {{- if (not .Values.naviback.hierarchies.skipShortcuts) }}
        "hierarchies": {
          "use_hierarchy": true,
            {{- if (not .Values.naviback.hierarchies.skipPatches) }}
          "patches_file_name": "{PATCHES_PATH}",
            {{- end }}{{- /* if (not .Values.naviback.hierarchies.skipPatches) */}}
          "graphs_file_name": "{SHORTCUT_PATH}"
        },
        "hierarchy_shortcuts": {
          "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 600 }},
          "nodes": [
            "{S3_CACHE_PATH}/shortcuts/shortcuts.tar.gz"
          ],
          "timeout_seconds": 600
        },
          {{- if (not .Values.naviback.hierarchies.skipPatches) }}
        "hierarchy_patches": {
          "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 600 }},
          "nodes": [
            "{S3_CACHE_PATH}/patches/patches.tar.gz"
          ],
          "timeout_seconds": 600
        },
          {{- end }}{{- /* if (not .Values.naviback.hierarchies.skipPatches) */}}
        {{- end }}{{- /* (not .Values.naviback.hierarchies.skipShortcuts) */}}
        "sn_import": {
          "update_period": {{ .Values.naviback.disableUpdates | ternary 604800 600 }},
          "nodes": [
            "{S3_CACHE_PATH}/sn/export_sn.tar.gz"
          ],
          "timeout_seconds": 600
        },
        {{- end }}{{- /* if .Values.naviback.hierarchies.enabled */}}
        {{- if .Values.naviback.etaScheduleIndex.enabled }}
        "eta_schedule": {
          "index_name": "eta_schedule_index",
          "update_period": 0,
          {{- if .Values.naviback.etaScheduleIndex.etaScheduleNodes }}
          "nodes": [
            "{{ .Values.naviback.etaScheduleIndex.etaScheduleNodes }}"
          ],
          {{- end }}{{/* if .Values.naviback.etaScheduleIndex.etaScheduleNodes */}}
          "timeout_seconds": 5
        },
        {{- end }}{{- /* if .Values.naviback.etaScheduleIndex.enabled */}}
        {{- if .Values.trafficLights.enabled }}
        "traffic_lights_kafka": {
          {{- $kafkaProperties := dict -}}
          {{- range $key, $_ := .Values.trafficLights.kafka.fileProperties -}}
          {{- $_ := set $kafkaProperties $key (printf "/etc/2gis/mosesd/secret-trafficLights/%s" $key) -}}
          {{- end -}}
          {{- $kafkaProperties := mustMerge $kafkaProperties .Values.trafficLights.kafka.properties }}
          "kafka_properties":
            {{- mustToPrettyJson $kafkaProperties | nindent 12 }},
          "topic": {{ .Values.trafficLights.kafka.topic | required "trafficLights.kafka.topic is not set" | quote }},
          {{- with .Values.trafficLights.projects }}
          "projects":
            {{ . | mustToPrettyJson | nindent 12 }}
          {{- end }}
        },
        {{- end }}{{/* .Values.trafficLigths.enabled */}}

        {{- if .Values.roadLocks.enabled }}
        "road_locks": {
          {{- $kafkaProperties := dict -}}
          {{- range $key, $_ := .Values.roadLocks.kafka.fileProperties -}}
          {{- $_ := set $kafkaProperties $key (printf "/etc/2gis/mosesd/secret-roadLocks/%s" $key) -}}
          {{- end -}}
          {{- $kafkaProperties := mustMerge $kafkaProperties .Values.roadLocks.kafka.properties }}
          "kafka_properties":
            {{- mustToPrettyJson $kafkaProperties | nindent 12 }},
          "modifications_limit_for_merge": "{{ .Values.roadLocks.modifications_limit_for_merge }}",
          "merge_timeout_limit_ms": "{{ .Values.roadLocks.merge_timeout_limit_ms }}",
          "merge_poll_ms": "{{ .Values.roadLocks.merge_poll_ms }}",
          "kafka_messages_queue_size_limit": "{{ .Values.roadLocks.kafka_messages_queue_size_limit }}",
          "kafka_group_id_prefix": "{{ .Values.roadLocks.kafka_group_id_prefix }}"
        },
        {{- end }}{{/* .Values.roadLocks.enabled */}}

        {{- if .Values.naviback.additionalSections }}
          {{- include "tplvalues.render" ( dict "value" .Values.naviback.additionalSections "context" $) | nindent 8 }}
        {{- end }}
        "server_info": {
          "tiles_metrics_threshold": {{ .Values.naviback.tilesMetricsThreshold | int }},
          "simple_network_car": {{ include "config.setSimpleNetworkCar" $ | default false -}},
          "simple_network_pedestrian": {{ include "config.setSimpleNetworkPedestrian" $ | default false -}},
          "simple_network_taxi": {{ include "config.setSimpleNetworkTaxi" $ | default false -}},
          "simple_network_bicycle": {{ include "config.setSimpleNetworkBicycle" $ | default false -}},
          "simple_network_truck": {{ include "config.setSimpleNetworkTruck" $ | default false -}},
          "simple_network_emergency": {{ include "config.setSimpleNetworkEmergency" $ | default false -}},
          "simple_network_motorcycle": {{ include "config.setSimpleNetworkMotorcycle" $ | default false -}},
          "ctx_only": {{ include "rules.inRoutingSectionOnly" (dict "routingValue" "ctx" "context" $) -}},
          "attractor_car": {{ include "config.setAttractorCar" $ | default false -}},
          "attractor_pedestrian": {{ include "config.setAttractorPedestrian" $ | default false -}},
          "attractor_bicycle": {{ include "config.setAttractorBicycle" $ | default false -}},
          "attractor_taxi": {{ include "config.setAttractorTaxi" $ | default false -}},
          "attractor_truck": {{ include "config.setAttractorTruck" $ | default false -}},
          "attractor_motorcycle": {{ include "config.setAttractorMotorcycle" $ | default false -}},
          "reduce_edges_optimization_flag": {{ include "config.setReduceEdgesOptimizationFlag" $ | default false -}},
          {{- if ((.Values.resources).limits).cpu }}
          "dist_matrix_thread_pool_size": {{ include "config.setCpuNumber" . }},
          "simple_network_build_thread_pool_size": {{ include "config.setCpuNumber" . }},
          {{- end }}
          "update_projects_limit": 2,
          "carrouting_page_cache_size": 8192,
          "carrouting_tile_cache_size": 8192,
          "carrouting_bit_tile_cache_size": 2048,
          "dump_query": {{ mustToJson (.Values.naviback.dump).query }},
          "dump_result": {{ mustToJson (.Values.naviback.dump).result }},
          "dump_answer": {{ mustToJson (.Values.naviback.dump).answer }},
          "max_parallel_workers": 2,
          "use_memory_mapped_vfs": true,
          "clear_cache_threshold": {{ .Values.naviback.clearCacheThreshold | int }},
          "engine_update_period_sec": {{ .Values.naviback.engineUpdatePeriodSec }},
          "lightweight_mode" : {{ .Values.naviback.lightweightMode }},
          {{- if .Values.naviback.server_id }}
          "server_id": "{{- include "tplvalues.render" ( dict "value" .Values.naviback.server_id "context" .) }}",
          {{- else }}
          "server_id": "{{- include "generic-chart.fullname" . }}",
          {{- end }}
          "extended_metrics": [],
          "dm_sources_limit": {{ .Values.naviback.dmSourcesLimit | int }},
          "dm_targets_limit": {{ .Values.naviback.dmTargetsLimit | int }},
          "carrouting_options": {
            "distance_matrix_options": {
              "enable_passable_barriers": {{ .Values.naviback.enablePassableBarriers | default false | mustToJson }}
            }
          },
          "traffic_color_options": {
            "from_0_to_5_km": {
              "deep_green_jam_ratio": 40,
              "green_jam_ratio": 50,
              "yellow_jam_minutes": 10,
              "orange_jam_minutes": 15,
              "deep_red_jam_minutes": 20
            },
            "from_5_to_10_km": {
              "deep_green_jam_ratio": 30,
              "green_jam_ratio": 40,
              "yellow_jam_minutes": 15,
              "orange_jam_minutes": 20,
              "deep_red_jam_minutes": 25
            },
            "from_10_km": {
              "deep_green_jam_ratio": 20,
              "green_jam_ratio": 30,
              "yellow_jam_minutes": 20,
              "orange_jam_minutes": 25,
              "deep_red_jam_minutes": 30
            }
          }
          {{- if .Values.naviback.excludedAreasLimit -}}
          ,
          "excluded_areas_limit": {{ .Values.naviback.excludedAreasLimit | int }}
          {{- end }}{{- /* .Values.naviback.excludedAreasLimit */}}
          {{- if .Values.naviback.serverAdditionalSections -}}
          ,{{- include "tplvalues.render" ( dict "value" .Values.naviback.serverAdditionalSections "context" $) | nindent 10 }}
          {{- end }}
        }
      }
    }
  {{- end }}{{- /* .Values.naviback.overrideConfig */}}
  rules.conf: |-
    {{- include "rules.renderRules" . }}
  {{- if .Values.transmitter.enabled }}
  envoy.yaml: |
    admin:
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9901
    static_resources:
      listeners:
      - name: attractor_listener
        address:
          socket_address:
            protocol: TCP
            address: 127.0.0.1
            port_value: 9999
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: attractor
                      timeout: {{ .Values.transmitter.clusterTimeout }}
                      {{- if .Values.transmitter.retry.enabled }}
                      retry_policy:
                        retry_on: {{ .Values.transmitter.retry.retryOn | quote }}
                        num_retries: {{ .Values.transmitter.retry.numRetries | int }}
                        per_try_timeout: {{ .Values.transmitter.retry.perTryTimeout }}
                        retry_host_predicate:
                          - name: envoy.retry_host_predicates.previous_hosts
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.retry.host.previous_hosts.v3.PreviousHostsPredicate
                      {{- end }}
              http_filters:
              - name: envoy.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      - name: attractor
        connect_timeout: {{ .Values.transmitter.connectTimeout }}
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        # empty parameter specifying not to sway off gRPC
        http2_protocol_options: {}
        load_assignment:
          cluster_name: attractor
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.transmitter.host | default "localhost" | quote }}
                    port_value: {{ .Values.transmitter.port | default 8080 | int }}
  {{- end }}{{- /* if .Values.transmitter.enabled */}}

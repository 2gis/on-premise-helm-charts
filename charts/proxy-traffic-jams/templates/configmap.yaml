---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "proxy-traffic-jams.fullname" . }}
  labels:
    {{- include "proxy-traffic-jams.labels" . | nindent 4 }}
data:
  nginx.conf: |
    worker_processes  2;

    pid /run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format main escape=json '{"remote_addr":"$remote_addr",'
                                    '"remote_user":"$remote_user",'
                                    '"time_local":"$time_local",'
                                    '"time_msec":"$msec",'
                                    '"request":"$request",'
                                    '"status":"$status",'
                                    '"host":"$host",'
                                    '"request_time":"$request_time",'
                                    '"upstream_response_time":"$upstream_response_time",'
                                    '"body_bytes_sent":"$body_bytes_sent",'
                                    '"http_referer":"$http_referer",'
                                    '"http_user_agent":"$http_user_agent",'
                                    '"request_id":"$http_x_request_id",'
                                    '"upstream_request_id":"$upstream_http_x_request_id"}';

        access_log off;
        error_log  /dev/stderr  error;

        sendfile       on;
        tcp_nopush     on;
        keepalive_timeout  65;

      {{ if .Values.proxy.cache.enabled }}
        proxy_cache_path /var/cache/nginx/trafficcache keys_zone=trafficcache:{{ .Values.proxy.chacheValid }};
      {{ end }}

        server {
          listen {{ .Values.proxy.listen }} default;
          server_name _;
        {{ if .Values.proxy.cache.enabled }}
          proxy_cache trafficcache;
        {{ end }}

          location / {
              proxy_pass         {{ .Values.proxy.host }};
              proxy_set_header   Upgrade $http_upgrade;
              proxy_set_header   Connection keep-alive;
              proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header   X-Forwarded-Proto $scheme;
              proxy_cache_bypass $http_upgrade;
          }

          location /health {
              default_type text/html;
              return 200 "<!DOCTYPE html><h2>OK</h2>\n";
          }
        }
    }

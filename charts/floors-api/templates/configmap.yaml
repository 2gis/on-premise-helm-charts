---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "floors.fullname" . }}
  labels:
    {{- include "floors.labels" . | nindent 4 }}
data:
  nginx_config: |
    daemon off;
    worker_processes 2;

    pid        /var/run/nginx.pid;

    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format main escape=json '{"remote_addr":"$remote_addr","remote_user":"$remote_user","time_local":"$time_local","time_msec":"$msec","request":"$request","status":$status,"host":"$host","request_time":$request_time,"upstream_response_time":"$upstream_response_time","body_bytes_sent":$body_bytes_sent,"http_referer":"$http_referer","http_user_agent":"$http_user_agent","request_id":"$http_x_request_id","upstream_request_id":"$upstream_http_x_request_id"}';

        access_log off;
        error_log  /dev/stderr  error;

        sendfile       on;
        tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include servers.conf;
    }

  servers_conf: |
    proxy_cache_path /var/cache/nginx/floors-backend levels=1:2 keys_zone=floors-backend:15m inactive=60m max_size=1000m;

    upstream nodejs {
        # чтобы работало через docker-compose up нужно поменять localhost на nodejs
        server localhost:8881;
    }

    server {
        server_name localhost;
        listen 8080;
        charset utf-8;
        server_tokens off;
        root /usr/share/nginx/html;
        index index.html
        absolute_redirect off;

        add_header X-Cache-Status $upstream_cache_status always;

        location / {
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_intercept_errors on;
            proxy_pass http://nodejs;

            proxy_ignore_headers X-Accel-Expires;
            proxy_ignore_headers Expires;
            proxy_ignore_headers Cache-Control;
            proxy_cache          floors-backend;
            proxy_cache_valid    200 301 302 304 4h;
            proxy_cache_valid    any 1m;
            expires 1h;
        }

        location = /healthcheck {
            access_log off;
            expires 0;
            default_type 'text/plain';
            return 200 'OK';
        }
    }

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keys.api.name" . }}
  {{- if or .Values.api.annotations .Values.customCAs.bundle }}
  annotations:
    {{- if .Values.customCAs.bundle }}
    checksum/config: {{ include (print $.Template.BasePath "/configmap-deploys.yaml") . | sha256sum }}
    {{- end }}
    {{- with .Values.api.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
  labels:
    {{- include "keys.api.labels" . | nindent 4 }}
    {{- with .Values.api.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.api.hpa.enabled }}
  replicas: {{ .Values.api.replicas }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.api.revisionHistoryLimit }}
  strategy:
    {{- toYaml .Values.api.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "keys.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keys.api.labels" . | nindent 8 }}
        {{- with .Values.api.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with include "keys.psql.initTLS" . }}
      initContainers:
      {{- . | nindent 8 }}
      {{- end }}
      containers:
        - name: keys-api
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: [ "keys-api" ]
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          env:
            {{- include "keys.env.featureFlags" . | nindent 12 }}
            {{- include "keys.env.api" . | nindent 12 }}
            {{- include "keys.env.db.deploys" . | nindent 12 }}
            {{- include "keys.env.redis" . | nindent 12 }}
            {{- include "keys.env.auth" . | nindent 12 }}
            {{- include "keys.env.kafka.audit" . | nindent 12 }}
            {{- if .Values.customCAs.bundle }}
            {{- include "keys.env.custom.ca.path" . | nindent 12 }}
            {{- end }}
          volumeMounts:
          {{- if .Values.customCAs.bundle }}
          {{- include "keys.custom.ca.volumeMounts" . | nindent 12 }}
          {{- end }}
          {{- include "keys.psql.volumeMount" . | nindent 12 }}
      volumes:
      {{- if .Values.customCAs.bundle }}
      {{- include "keys.custom.ca.deploys.volumes" . | nindent 8 }}
      {{- end }}
      {{- include "keys.psql.volume" . | nindent 8 }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

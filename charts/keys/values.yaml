# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.

dgctlDockerRegistry: ''


# @section Common settings

# @param imagePullSecrets Kubernetes image pull secrets.
# @param imagePullPolicy Pull policy.
# @param backend.image.repository Backend service image repository.
# @param backend.image.tag Backend service image tag.
# @param admin.image.repository Admin service image repository.
# @param admin.image.tag Admin service image tag.
# @param redis.image.repository Redis image repository.
# @param redis.image.tag Redis image tag.

imagePullSecrets: []
imagePullPolicy: IfNotPresent

backend:
  image:
    repository: 2gis-on-premise/keys-backend
    tag: 1.34.0


# @section Admin service settings

admin:
  image:
    repository: 2gis-on-premise/keys-ui
    tag: 0.3.0

  # @param admin.replicas A replica count for the pod.

  replicas: 1

  resources:
    requests:
      cpu: 300m
      memory: 256Mi
    limits:
      cpu: 1
      memory: 384Mi

  # @param admin.apiUrl Base URL for the admin API.
  # @param admin.appHost Base URL for the admin web interface.

  apiUrl: https://keys-api.host
  appHost: https://keys-ui.host

  # @param admin.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param admin.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  annotations: {}
  labels: {}

  # @param admin.podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param admin.podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  podAnnotations: {}
  podLabels: {}

  # @param admin.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
  # @param admin.affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
  # @param admin.tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.

  nodeSelector: {}
  affinity: {}
  tolerations: {}

  # @param admin.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param admin.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
  # @param admin.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  # @param admin.service.port Service port.

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80

  # @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

  # @param admin.ingress.enabled If Ingress is enabled for the service.
  # @param admin.ingress.hosts[0].host Hostname for the Ingress service.

  ingress:
    enabled: false
    hosts:
    - host: keys-ui.host


# @section API service settings

api:

  # @param api.adminUsers Usernames and passwords of admin users. Format: `username1:password1,username2:password2`.

  adminUsers: ''

  # @param api.replicas A replica count for the pod.

  replicas: 1

  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 1
      memory: 256Mi

  # @param api.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param api.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  annotations: {}
  labels: {}

  # @param api.podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param api.podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  podAnnotations: {}
  podLabels: {}

  # @param api.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
  # @param api.affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
  # @param api.tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.

  nodeSelector: {}
  affinity: {}
  tolerations: {}

  # @param api.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param api.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
  # @param api.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  # @param api.service.port Service port.

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80

  # @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

  # @param api.ingress.enabled If Ingress is enabled for the service.
  # @param api.ingress.hosts[0].host Hostname for the Ingress service.

  ingress:
    enabled: false
    hosts:
    - host: keys-api.host


  # @section Kubernetes [Horizontal Pod Autoscaling](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/) settings

  # @param api.hpa.enabled If HPA is enabled for the service.
  # @param api.hpa.minReplicas Lower limit for the number of replicas to which the autoscaler can scale down.
  # @param api.hpa.maxReplicas Upper limit for the number of replicas to which the autoscaler can scale up.
  # @param api.hpa.scaleDownStabilizationWindowSeconds Scale-down window.
  # @param api.hpa.scaleUpStabilizationWindowSeconds Scale-up window.
  # @param api.hpa.targetCPUUtilizationPercentage Target average CPU utilization (represented as a percentage of requested CPU) over all the pods; if not specified the default autoscaling policy will be used.
  # @param api.hpa.targetMemoryUtilizationPercentage Target average memory utilization (represented as a percentage of requested memory) over all the pods; if not specified the default autoscaling policy will be used.

  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    scaleDownStabilizationWindowSeconds: ''
    scaleUpStabilizationWindowSeconds: ''
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: ''


# @section Import service settings

import:

  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi

  # @param import.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).

  nodeSelector: {}


# @section Migrate service settings

migrate:

  # @param migrate.initialDelaySeconds Delay in seconds at the service startup.

  initialDelaySeconds: 0

  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi

  # @param migrate.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).

  nodeSelector: {}


# @section Tasker service settings

tasker:

  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      cpu: 100m
      memory: 64Mi

  # @param tasker.delay Delay in seconds at the service startup.

  delay: 30s

  # @param tasker.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param tasker.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  annotations: {}
  labels: {}

  # @param tasker.podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param tasker.podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  podAnnotations: {}
  podLabels: {}

  # @param tasker.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
  # @param tasker.affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
  # @param tasker.tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.

  nodeSelector: {}
  affinity: {}
  tolerations: {}


# @section Redis settings

redis:
  image:
    repository: 2gis-on-premise/keys-redis
    tag: 6.2.6-alpine3.15

  resources:
    requests:
      cpu: 50m
      memory: 32Mi
    limits:
      cpu: 1
      memory: 256Mi

  # @param redis.port HTTP port for Redis to listen.
  # @param redis.configPath Configuration file for Redis.

  port: 6379
  configPath: /opt/redis.conf

  # @param redis.password Password for use in Redis.

  password: ''

  # @param redis.useExternalRedis If you want to use an external Redis.
  # @param redis.host Redis hostname (external mode only).
  # @param redis.db Redis database number (external mode only).

  useExternalRedis: false
  host: redis.host
  db: 1

  # @param redis.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param redis.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  annotations: {}
  labels: {}

  # @param redis.podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param redis.podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  podAnnotations: {}
  podLabels: {}

  # @param redis.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
  # @param redis.affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
  # @param redis.tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.

  nodeSelector: {}
  affinity: {}
  tolerations: {}


# @section Database access settings

db:

  # @extra db.ro **Settings for the read-only access**

  # @param db.ro.host PostgreSQL host.
  # @param db.ro.port PostgreSQL port.
  # @param db.ro.name PostgreSQL database name.
  # @param db.ro.username PostgreSQL username.
  # @param db.ro.password PostgreSQL password.

  ro:
    host: postgres.host
    port: 5432
    name: keys
    username: keys
    password: secret

  # @extra db.rw **Settings for the read-write access**

  # @param db.rw.host PostgreSQL host.
  # @param db.rw.port PostgreSQL port.
  # @param db.rw.name PostgreSQL database name.
  # @param db.rw.username PostgreSQL username.
  # @param db.rw.password PostgreSQL password.

  rw:
    host: postgres.host
    port: 5432
    name: keys
    username: keys
    password: secret


# @section LDAP connection settings

# @param ldap.host LDAP host.
# @param ldap.port LDAP port.
# @param ldap.useStartTLS If LDAP should use TLS.
# @param ldap.useLDAPS Use LDAPS instead of LDAP.
# @param ldap.skipServerCertificateVerify Trust the server certificate without verification.
# @param ldap.serverName Server name.
# @param ldap.clientCertificatePath Path to client certificate for authentication.
# @param ldap.clientKeyPath Path to client key for authentication.
# @param ldap.rootCertificateAuthoritiesPath Path to the Root CA certificate.

ldap:
  host: ldap.host
  port: 3268

  useStartTLS: false
  useLDAPS: false
  skipServerCertificateVerify: false
  serverName: ''
  clientCertificatePath: ''
  clientKeyPath: ''
  rootCertificateAuthoritiesPath: ''

  # @extra ldap.bind **LDAP bind settings**
  # @param ldap.bind.dn LDAP distinguished name.
  # @param ldap.bind.password LDAP password.

  bind:
    dn: user
    password: secret

  # @extra ldap.search **LDAP search settings**
  # @param ldap.search.baseDN LDAP base distinguished name.
  # @param ldap.search.filter LDAP search filter.

  search:
    baseDN: dc=2gis
    filter: (&(objectClass=user)(sAMAccountName=%s))


# @section Limits

# @extra admin.resources **Limits for the Admin service**
# @param admin.resources.requests.cpu A CPU request.
# @param admin.resources.requests.memory A memory request.
# @param admin.resources.limits.cpu A CPU limit.
# @param admin.resources.limits.memory A memory limit.

# @extra api.resources **Limits for the API service**
# @param api.resources.requests.cpu A CPU request.
# @param api.resources.requests.memory A memory request.
# @param api.resources.limits.cpu A CPU limit.
# @param api.resources.limits.memory A memory limit.

# @extra import.resources **Limits for the Import service**
# @param import.resources.requests.cpu A CPU request.
# @param import.resources.requests.memory A memory request.
# @param import.resources.limits.cpu A CPU limit.
# @param import.resources.limits.memory A memory limit.

# @extra migrate.resources **Limits for the Migrate service**
# @param migrate.resources.requests.cpu A CPU request.
# @param migrate.resources.requests.memory A memory request.
# @param migrate.resources.limits.cpu A CPU limit.
# @param migrate.resources.limits.memory A memory limit.

# @extra tasker.resources **Limits for the Tasker service**
# @param tasker.resources.requests.cpu A CPU request.
# @param tasker.resources.requests.memory A memory request.
# @param tasker.resources.limits.cpu A CPU limit.
# @param tasker.resources.limits.memory A memory limit.

# @extra redis.resources **Limits for Redis**
# @param redis.resources.requests.cpu A CPU request.
# @param redis.resources.requests.memory A memory request.
# @param redis.resources.limits.cpu A CPU limit.
# @param redis.resources.limits.memory A memory limit.

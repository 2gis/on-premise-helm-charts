---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "generic-chart.fullname" . }}-configmap
data:
  envoy.yaml: |
    admin:
      address:
        socket_address:
          protocol: TCP
          address: 127.0.0.1
          port_value: 9901
    {{- if eq .Values.envoy.systemLogs.logFormat "json" }}
    application_log_config:
      log_format:
        json_format:
          system_log: "true"
          time: "%Y-%m-%dT%T.%F"
          thread_id: "%t"
          source_line: "%s:%#"
          level: "%l"
          message: "%j"
    {{- end }}{{- /* if eq .Values.envoy.systemLogs.logFormat "json" */}}
    static_resources:
      listeners:
      - name: attractor_listener
        address:
          socket_address:
            protocol: TCP
            address: 127.0.0.1
            port_value: 9999
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              preserve_external_request_id: true
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: attractor
                      timeout: {{ .Values.envoy.clusterTimeout }}
                      {{- if .Values.envoy.retry.enabled }}
                      retry_policy:
                        retry_on: {{ .Values.envoy.retry.retryOn | quote }}
                        num_retries: {{ .Values.envoy.retry.numRetries | int }}
                        per_try_timeout: {{ .Values.envoy.retry.perTryTimeout }}
                        retry_host_predicate:
                          - name: envoy.retry_host_predicates.previous_hosts
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.retry.host.previous_hosts.v3.PreviousHostsPredicate
                      {{- end }}{{- /* .Values.envoy.retry.enabled */}}
              http_filters:
              - name: envoy.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              {{- if .Values.envoy.accessLogs.enabled }}
              access_log: &access_log
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StderrAccessLog
                  log_format:
                    json_format:
                      access_log: "true"
                      authority: "%REQ(:AUTHORITY)%"
                      bytes_received: "%BYTES_RECEIVED%"
                      bytes_sent: "%BYTES_SENT%"
                      connection_termination_details: "%CONNECTION_TERMINATION_DETAILS%"
                      downstream_local_address: "%DOWNSTREAM_LOCAL_ADDRESS%"
                      downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                      duration: "%DURATION%"
                      method: "%REQ(:METHOD)%"
                      path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                      protocol: "%PROTOCOL%"
                      request_id: "%REQ(X-REQUEST-ID)%"
                      requested_server_name: "%REQUESTED_SERVER_NAME%"
                      response_code: "%RESPONSE_CODE%"
                      response_code_details: "%RESPONSE_CODE_DETAILS%"
                      response_flags: "%RESPONSE_FLAGS%"
                      route_name: "%ROUTE_NAME%"
                      start_time: "%START_TIME%"
                      upstream_cluster: "%UPSTREAM_CLUSTER%"
                      upstream_host: "%UPSTREAM_HOST%"
                      upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
                      upstream_service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                      upstream_transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                      user_agent: "%REQ(USER-AGENT)%"
                      x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                      message: "%LOCAL_REPLY_BODY%"
              {{- end }}{{- /* .Values.envoy.accessLogs.enabled */}}
      - name: oneToMany_listener
        address:
          socket_address:
            protocol: TCP
            address: 127.0.0.1
            port_value: 9998
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              preserve_external_request_id: true
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: oneToMany
                      timeout: {{ .Values.envoy.clusterTimeout }}
                      {{- if .Values.envoy.retry.enabled }}
                      retry_policy:
                        retry_on: {{ .Values.envoy.retry.retryOn | quote }}
                        num_retries: {{ .Values.envoy.retry.numRetries | int }}
                        retry_host_predicate:
                          - name: envoy.retry_host_predicates.previous_hosts
                            typed_config:
                              "@type": type.googleapis.com/envoy.extensions.retry.host.previous_hosts.v3.PreviousHostsPredicate
                      {{- end }}{{- /* .Values.envoy.retry.enabled */}}
              http_filters:
              - name: envoy.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              {{- if .Values.envoy.accessLogs.enabled }}
              access_log: *access_log
              {{- end }}{{- /* .Values.envoy.accessLogs.enabled */}}
      clusters:
      - name: attractor
        connect_timeout: {{ .Values.envoy.connectTimeout }}
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: ROUND_ROBIN
        # empty parameter specifying not to sway off gRPC
        http2_protocol_options: {}
        load_assignment:
          cluster_name: attractor
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.attractor.host | quote }}
                    port_value: {{ .Values.attractor.port | int }}
      - name: oneToMany
        connect_timeout: {{ .Values.envoy.connectTimeout }}
        type: STRICT_DNS
        dns_lookup_family: V4_ONLY
        lb_policy: LEAST_REQUEST
        # empty parameter specifying not to sway off gRPC
        http2_protocol_options: {}
        load_assignment:
          cluster_name: oneToMany
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: {{ .Values.oneToMany.host | quote }}
                    port_value: {{ .Values.oneToMany.port | int }}

# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.

dgctlDockerRegistry: ''

# @section Common settings

# @param appName Name of the service.
# @param replicaCount A replica count for the pod.
# @param imagePullSecrets Kubernetes image pull secrets.
# @param nameOverride Base name to use in all the Kubernetes entities deployed by this chart.
# @param fullnameOverride Base fullname to use in all the Kubernetes entities deployed by this chart.
# @param nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
# @param priorityClassName Kubernetes [pod priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/).
# @param terminationGracePeriodSeconds Kubernetes [termination grace period](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/).
# @param tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).

appName: pro-api
replicaCount: 2
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
nodeSelector: {}
affinity: {}
priorityClassName: ''
terminationGracePeriodSeconds: 60
tolerations: []
podAnnotations: {}
podLabels: {}
annotations: {}
labels: {}
revisionHistoryLimit: 3

# @section Deployment Artifacts Storage settings

# @param dgctlStorage.host S3 endpoint. Format: `host:port`. **Required**
# @param dgctlStorage.bucket S3 bucket name. **Required**
# @param dgctlStorage.accessKey S3 access key for accessing the bucket. **Required**
# @param dgctlStorage.secretKey S3 secret key for accessing the bucket. **Required**
# @param dgctlStorage.manifest The path to the [manifest file](https://docs.2gis.com/en/on-premise/overview#nav-lvl2@paramCommon_deployment_steps). Format: `manifests/0000000000.json`.<br> This file contains the description of pieces of data that the service requires to operate. **Required**

dgctlStorage:
  host: ''
  bucket: ''
  accessKey: ''
  secretKey: ''
  manifest: ''

# @section Strategy settings

# @param strategy.type Type of Kubernetes deployment. Can be `Recreate` or `RollingUpdate`.
# @param strategy.rollingUpdate.maxUnavailable Maximum number of pods that can be created over the desired number of pods when doing [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment).
# @param strategy.rollingUpdate.maxSurge Maximum number of pods that can be unavailable during the [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment) process.

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1

# @section Service settings

# @param service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
# @param service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
# @param service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param service.port PRO API service port.

service:
  annotations: {}
  labels: {}
  type: ClusterIP
  port: 80

# @skip permissionApiService

permissionApiService:
  annotations: {}
  labels: {}
  type: ClusterIP
  port: 80

# @section Kubernetes [Vertical Pod Autoscaling](https://github.com/kubernetes/autoscaler/blob/master/vertical-pod-autoscaler/README.md) settings

# @param vpa.enabled If VPA is enabled for the service.
# @param vpa.updateMode VPA [update mode](https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler#quick-start).
# @param vpa.minAllowed.cpu Lower limit for the number of CPUs to which the autoscaler can scale down.
# @param vpa.minAllowed.memory Lower limit for the RAM size to which the autoscaler can scale down.
# @param vpa.maxAllowed.cpu Upper limit for the number of CPUs to which the autoscaler can scale up.
# @param vpa.maxAllowed.memory Upper limit for the RAM size to which the autoscaler can scale up.

vpa:
  enabled: false
  updateMode: Auto
  minAllowed:
    cpu: 400m
    memory: 256M
  maxAllowed:
    cpu: 1
    memory: 1024M

# @section Deployment settings

# @param image.repository Repository
# @param image.tag Tag
# @param image.pullPolicy Pull Policy

image:
  repository: 2gis-on-premise/pro-api
  tag: 1.0.23
  pullPolicy: IfNotPresent

# @skip permissionsApiImage

permissionsApiImage:
  repository: 2gis-on-premise/pro-permissions-api
  tag: latest
  pullPolicy: IfNotPresent

# @param curlImage.repository Docker Repository Image.
# @param curlImage.tag Docker image tag.
# @param curlImage.pullPolicy Pull policy
curlImage:
  repository: 2gis-on-premise/pro-curl
  tag: 1.0.23
  pullPolicy: IfNotPresent

# @section 2GIS PRO Storage configuration

# @param s3.layerDataBucket S3 bucket with prepared layer data. **Required**
# @param s3.userAssetsDataBucket S3 bucket with user-created assets, aggregations, and filters. **Required**

s3:
  layerDataBucket: ''
  userAssetsDataBucket: ''

# @section 2GIS PRO API configuration

# @param api.serviceAccount  Kubernetes service account
# @param api.tempPath Path to directory used for temp data
# @param api.allowAnyOrigin Cors policy: allow any origin to perform requests to pro-api service
# @param api.loggingFormat Possible options: 'default' - compact json, 'renderedCompactJson' - rendered json format, 'simple' - just text
# @skip api.diggerPassword
# @skip api.diggerUserName
# @skip api.logEsQueries
# @skip api.debug
# @skip api.env
# @skip api.useMockAuth
# @skip api.token
# @skip api.filterByZoneCodes

api:
  serviceAccount: runner
  tempPath: /tmp
  diggerPassword: ''
  diggerUserName: ''
  allowAnyOrigin: false
  logEsQueries: false
  debug: false
  env: ''
  useMockAuth: true
  token: ''
  filterByZoneCodes: false
  loggingFormat: 'simple'

# @skip auth
# @skip auth.url

auth:
  url: ''

# @section PostgreSQL settings

# @param postgres.connectionString Connection string to the PostgreSQL database. Format: `Server=SERVER_URL;Database=DB_NAME;UID=USER_NAME;`
# @param postgres.connectionStringReadonly Connection string to the readonly node of PostgreSQL database. Format: `Server=SERVER_URL;Database=DB_NAME;UID=USER_NAME;`
# @param postgres.password User password to connect to the PostgreSQL database.

postgres:
  connectionString: ''
  connectionStringReadonly: ''
  password: ''

# @section Keys Service settings
# @param keys.url API URL of service for managing partners' keys to 2GIS services (keys.api). **Required**
# @param keys.token keys.api access token. **Required**

keys:
  url: ''
  token: ''

# @section ElasticSearch settings (supported version 7.x)

# @param elastic.host ElasticSearch host address. Format: `http(s)://HOST:PORT`
# @param elastic.credentials User name and password to connect to the ElasticSearch. Format: `USER_NAME:PASSWORD`

elastic:
  host: ''
  credentials: ''

# @section Redis settings (supported version 6.x)

# @param redis.host Redis host address. **Required**
# @param redis.port Redis port. **Required**
# @skip redis.enabled

redis:
  host: ''
  port: 6379
  enabled: true

# @section Catalog API settings

# @param catalog.url URL for [Catalog API](https://docs.2gis.com/en/on-premise/search).
# @param catalog.key Access key to [Catalog API](https://docs.2gis.com/en/on-premise/search).

catalog:
  url: http://catalog-api.svc
  key: ''

# @section Navigation API settings

# @param navi.url URL for [Navigation API](https://docs.2gis.com/en/on-premise/navigation/overview).
# @param navi.key Access key to [Navigation API](https://docs.2gis.com/en/on-premise/navigation/overview).

navi:
  url: http://navi-back.svc
  key: ''

# @section Search API settings

# @param search.url URL for [Search API](https://docs.2gis.com/en/on-premise/search)
search:
  url: http://search-api.svc


# @section 2GIS PRO API Job settings

# @param appAssetImporterName Data Import job name.
# @param appUserAssetImporterName User Data Import job name.
# @skip appAssetPreparerName

appAssetImporterName: asset-importer
appUserAssetImporterName: user-asset-importer
appAssetPreparerName: asset-preparer

# @skip permissionsPodSettings

permissionsPodSettings:
  replicaCount: 1
  imagePullSecrets: []
  nodeSelector: {}
  affinity: {}
  priorityClassName: ''
  terminationGracePeriodSeconds: 60
  tolerations: []
  podAnnotations: {}
  podLabels: {}
  annotations: {}
  labels: {}
  revisionHistoryLimit: 3
  resources:
    requests:
      cpu: 300m
      memory: 256M
    limits:
      cpu: 500m
      memory: 512M

# @skip permissionsApi

permissionsApi:
  key: ''
  host: ''
  enabled: false

# @section Import job settings

# @param assetImporter.repository Docker Repository Image.
# @param assetImporter.tag Docker image tag.
# @param assetImporter.schedule Import job schedule.
# @param assetImporter.backoffLimit The number of [retries](https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-backoff-failure-policy) before considering a Job as failed.
# @param assetImporter.successfulJobsHistoryLimit How many completed and failed jobs should be kept. See [docs](https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#jobs-history-limits).
# @param assetImporter.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param assetImporter.maxParallelJobs How many import jobs can be run simultaneously
# @param assetImporter.enabled If assetImporter is enabled for the service.
# @param assetImporter.startOnDeploy Indicates that asset import should start when service installed or updated
# @skip assetImporter.files
# @skip assetImporter.imageProxyUrl

assetImporter:
  repository: 2gis-on-premise/pro-importer
  tag: 1.0.23
  schedule: '0 18 * * *'
  backoffLimit: 2
  successfulJobsHistoryLimit: 3
  nodeSelector: {}
  resources:
    requests:
      cpu: 700m
      memory: 768M
    limits:
      cpu: 1000m
      memory: 1280M
  maxParallelJobs: 4
  enabled: true
  startOnDeploy: true
  files: ''
  imageProxyUrl: ''

# @skip assetPreparer

assetPreparer:
  repository: 2gis-on-premise/pro-importer
  tag: 1.0.23
  schedule: 0 16 * * 6
  backoffLimit: 2
  successfulJobsHistoryLimit: 1
  nodeSelector: {}
  resources:
    requests:
      cpu: 300m
      memory: 256M
    limits:
      cpu: 500m
      memory: 512M
  enabled: true
  maxParallelJobs: 1

# @section Limits

# @extra resources **Limits for the application service**
# @param resources.requests.cpu A CPU request.
# @param resources.requests.memory A memory request.
# @param resources.limits.cpu A CPU limit.
# @param resources.limits.memory A memory limit.

# @extra assetImporter.resources **Limits for the import job**
# @param assetImporter.resources.requests.cpu A CPU request.
# @param assetImporter.resources.requests.memory A memory request.
# @param assetImporter.resources.limits.cpu A CPU limit.
# @param assetImporter.resources.limits.memory A memory limit.

resources:
  requests:
    cpu: 400m
    memory: 256M
  limits:
    cpu: 1
    memory: 1024M

# @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

# @param ingress.enabled If Ingress is enabled for the service.
# @param ingress.hosts[0].host Hostname for the Ingress service.

ingress:
  enabled: false
  hosts:
  - host: pro-api.host

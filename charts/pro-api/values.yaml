# @section Geo API configuration & settings

api:

  # @param api.appName Name of the service
  appName: pro-api

  # @param api.image.repository Repository
  # @param api.image.tag Tag
  # @param api.image.pullPolicy Pull Policy
  image:
    repository: 2gis-on-premise/pro-api
    tag: 1.50.1
    pullPolicy: IfNotPresent

  # @param api.ingress.enabled If Ingress is enabled for the service.
  # @param api.ingress.className Name of the Ingress controller class.
  # @param api.ingress.hosts[0].host Hostname for the Ingress service.
  # @param api.ingress.hosts[0].paths[0].path Path of the host for the Ingress service.
  # @param api.ingress.hosts[0].paths[0].pathType Type of the path for the Ingress service.
  # @param api.ingress.tls TLS configuration
  ingress:
    enabled: false
    className: nginx
    hosts:
    - host: pro-api.example.com
      paths:
      - path: /
        pathType: Prefix
    tls: []
    #   secretName: secret.tls

  # @param api.pod.replicaCount A replica count for the pod.
  # @param api.pod.imagePullSecrets Kubernetes image pull secrets.
  # @param api.pod.nameOverride Base name to use in all the Kubernetes entities deployed by this chart.
  # @param api.pod.fullnameOverride Base fullname to use in all the Kubernetes entities deployed by this chart.
  # @param api.pod.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
  # @param api.pod.affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
  # @param api.pod.priorityClassName Kubernetes [pod priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/).
  # @param api.pod.terminationGracePeriodSeconds Kubernetes [termination grace period](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/). Should be at least 300 seconds
  # @param api.pod.tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
  # @param api.pod.podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param api.pod.podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
  # @param api.pod.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param api.pod.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
  # @param api.pod.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).
  # @extra api.pod.resources **Limits for the application service**
  # @param api.pod.resources.requests.cpu A CPU request.
  # @param api.pod.resources.requests.memory A memory request.
  # @param api.pod.resources.limits.cpu A CPU limit.
  # @param api.pod.resources.limits.memory A memory limit.
  # @param api.pod.strategy.type Type of Kubernetes deployment. Can be `Recreate` or `RollingUpdate`.
  # @param api.pod.strategy.rollingUpdate.maxUnavailable Maximum number of pods that can be created over the desired number of pods when doing [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment).
  # @param api.pod.strategy.rollingUpdate.maxSurge Maximum number of pods that can be unavailable during the [rolling update](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#rolling-update-deployment) process.
  pod:
    replicaCount: 2
    imagePullSecrets: []
    nameOverride: ''
    fullnameOverride: ''
    nodeSelector: {}
    affinity: {}
    priorityClassName: ''
    terminationGracePeriodSeconds: 300
    tolerations: []
    podAnnotations: {}
    podLabels: {}
    annotations: {}
    labels: {}
    revisionHistoryLimit: 3
    resources:
      requests:
        cpu: 400m
        memory: 256M
      limits:
        cpu: 1
        memory: 1024M
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1

  # @param api.vpa.enabled If VPA is enabled for the service.
  # @param api.vpa.updateMode VPA [update mode](https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler#quick-start).
  # @param api.vpa.minAllowed.cpu Lower limit for the number of CPUs to which the autoscaler can scale down.
  # @param api.vpa.minAllowed.memory Lower limit for the RAM size to which the autoscaler can scale down.
  # @param api.vpa.maxAllowed.cpu Upper limit for the number of CPUs to which the autoscaler can scale up.
  # @param api.vpa.maxAllowed.memory Upper limit for the RAM size to which the autoscaler can scale up.
  vpa:
    enabled: false
    updateMode: Auto
    minAllowed:
      cpu: 400m
      memory: 256M
    maxAllowed:
      cpu: 1
      memory: 1024M

  # @param api.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
  # @param api.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
  # @param api.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  # @param api.service.port PRO API service port.
  # @param api.service.serviceAccount  Kubernetes service account
  # @param api.service.serviceAccountOverride The name of an existing custom service account. If specified, the services in the chart will use this existing service account. If not specified, a new service account will be created and used with the name from the variable `api.serviceAccount`.
  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80
    serviceAccount: runner
    serviceAccountOverride: ''

  # @param api.settings.licenseKey License key. **Required**
  # @param api.settings.tempPath Path to directory used for temp data
  # @param api.settings.allowAnyOrigin Cors policy: allow any origin to perform requests to pro-api service
  # @skip api.settings.logEsQueries
  # @skip api.settings.debug
  # @skip api.settings.env
  # @skip api.settings.filterByZoneCodes
  # @skip api.settings.esDataCentersCount
  # @extra api.settings.logging Logging settings
  # @param api.settings.logging.format Log message format, possible options: 'default' - compact json, 'renderedCompactJson' - rendered json format, 'simple' - plain text
  # @param api.settings.logging.targets Collection of logging targets divided by comma. Currently only 'console' and 'database' are supported. Console is used by default (no need to specify).
  # @extra api.settings.rateLimiter rate limiter settings
  # @param api.settings.rateLimiter.requestsLimit max number of requests from one user during time window (0 means rate limiter is disabled)
  # @param api.settings.rateLimiter.windowSizeInSeconds the size of time windows to count and limit incoming requests
  # @skip api.settings.localCache.enabled
  # @skip api.settings.localCache.trackStatistics
  # @skip api.settings.openApi.servers
  # @param api.settings.auth.type Authentication type: 'none' - disabled, 'openid10' - [OpenId 1.0 / OAuth 2.0 authentication protocol](https://openid.net/specs/openid-connect-core-1_0.html), 'urbi' - urbi authentication protocol
  # @param api.settings.auth.url API URL of authentication service. Example: `http(s)://keycloak.ingress.host`
  # @param api.settings.auth.userInfoEndpoint The [UserInfo endpoint](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo). Example: `realms/URBI_Pro/protocol/openid-connect/userinfo`
  # @param api.settings.auth.wellKnownConfigEndpoint The [Well-Known Config endpoint](https://openid.net/specs/openid-connect-discovery-1_0.html). Example: `realms/URBI_Pro/.well-known/openid-configuration`
  # @param api.settings.auth.apiKey Secret API Key to perform authorized service actions, random string. Must be set if type not 'none'. Example: `4230b288-301e-4ec6-82c6-db6a8a72c2af`
  # @skip api.settings.auth.autoRegisterUsers
  # @param api.settings.auth.turnOffCertValidation Turn off certificate validation for auth.url
  # @param api.settings.auth.shareKeys Secret keys for creating and validating shared links. Must contain at least 32 characters. All keys are used for validation. The last one is used for creation. Example: `m7nShlX1a8+IqE9ZcDqRCVjlhEud850ucT0av9bS+tcMTwIwUOUqpNikM+G8teDR`
  # @param api.settings.backgroundJobs.enableUserAssetsImporter If user data importer job is enabled for the service.
  # @param api.settings.backgroundJobs.enableAssetsStreaming If the streaming data processing job is enabled for the service.
  # @param api.settings.layerGeneration.isochroneLayerMaxPointsCount If layer contains more points, isochrone is not avalible.
  settings:
    licenseKey: ''
    tempPath: /tmp
    allowAnyOrigin: false
    logEsQueries: false
    debug: false
    env: ''
    filterByZoneCodes: false
    esDataCentersCount: 1
    logging:
      format: simple
      targets: ''
    rateLimiter:
      requestsLimit: 1024
      windowSizeInSeconds: 1
    localCache:
      enabled: true
      trackStatistics: false
    openApi:
      servers: []
    auth:
      type: none
      url: ''
      userInfoEndpoint: ''
      wellKnownConfigEndpoint: ''
      apiKey: ''
      autoRegisterUsers: true
      turnOffCertValidation: false
      shareKeys: []
    backgroundJobs:
      enableUserAssetsImporter: true
      enableAssetsStreaming: false
    layerGeneration:
      isochroneLayerMaxPointsCount: 500

# @section Permissions API configuration & settings

permissions:

  # @param permissions.image.repository Repository
  # @param permissions.image.tag Tag
  # @param permissions.image.pullPolicy Pull Policy
  image:
    repository: 2gis-on-premise/pro-permissions-api
    tag: 1.50.1
    pullPolicy: IfNotPresent

  # @param permissions.ingress.enabled If Ingress is enabled for the service
  # @param permissions.ingress.className Name of the Ingress controller class
  # @param permissions.ingress.hosts[0].host Hostname for the Ingress service
  # @param permissions.ingress.hosts[0].paths[0].path Path of the host for the Ingress service
  # @param permissions.ingress.hosts[0].paths[0].pathType Type of the path for the Ingress service
  # @param permissions.ingress.tls TLS configuration
  ingress:
    enabled: false
    className: nginx
    hosts:
    - host: pro-permissions-api.example.com
      paths:
      - path: /
        pathType: Prefix
    tls: []
    #   secretName: secret.tls

  # @param permissions.pod.replicaCount A replica count for the pod.
  # @param permissions.pod.imagePullSecrets Kubernetes image pull secrets.
  # @param permissions.pod.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
  # @param permissions.pod.affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
  # @param permissions.pod.priorityClassName Kubernetes [pod priority](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/).
  # @param permissions.pod.terminationGracePeriodSeconds Kubernetes [termination grace period](https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/). Should be at least 300 seconds
  # @param permissions.pod.tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
  # @param permissions.pod.podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param permissions.pod.podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
  # @param permissions.pod.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param permissions.pod.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
  # @param permissions.pod.revisionHistoryLimit Revision history limit (used for [rolling back](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) a deployment).
  # @extra permissions.pod.resources **Limits for the application service**
  # @param permissions.pod.resources.requests.cpu A CPU request.
  # @param permissions.pod.resources.requests.memory A memory request.
  # @param permissions.pod.resources.limits.cpu A CPU limit.
  # @param permissions.pod.resources.limits.memory A memory limit.
  pod:
    replicaCount: 1
    imagePullSecrets: []
    nodeSelector: {}
    affinity: {}
    priorityClassName: ''
    terminationGracePeriodSeconds: 60
    tolerations: []
    podAnnotations: {}
    podLabels: {}
    annotations: {}
    labels: {}
    revisionHistoryLimit: 3
    resources:
      requests:
        cpu: 300m
        memory: 256M
      limits:
        cpu: 1
        memory: 1G

  # @param permissions.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
  # @param permissions.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
  # @param permissions.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  # @param permissions.service.port PRO API service port.
  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80

  # @skip permissions.settings.host
  # @param permissions.settings.enabled If permissionsApi is enabled for the service.
  # @skip permissions.settings.localCache.enabled
  # @skip permissions.settings.localCache.trackStatistics
  # @param permissions.settings.auth.apiKey Secret Permissions API Key to perform authorized service actions, random string. Must be set if type not 'none'. Example: `c7d74870-ec28-4543-b408-b49bfed84399`
  settings:
    host: ''
    enabled: false
    localCache:
      enabled: true
      trackStatistics: false
    auth:
      apiKey: ''


# @skip tasks

tasks:

  image:
    repository: 2gis-on-premise/pro-tasks-api
    tag: 1.50.1
    pullPolicy: IfNotPresent

  ingress:
    enabled: false
    className: nginx
    hosts:
    - host: ''
      paths:
      - path: /
        pathType: Prefix
    tls: []
    #   secretName: secret.tls

  pod:
    apiReplicaCount: 2
    workerReplicaCount: 2
    imagePullSecrets: []
    nodeSelector: {}
    affinity: {}
    priorityClassName: ''
    terminationGracePeriodSeconds: 60
    tolerations: []
    podAnnotations: {}
    podLabels: {}
    annotations: {}
    labels: {}
    revisionHistoryLimit: 3
    resources:
      requests:
        cpu: 400m
        memory: 256M
      limits:
        cpu: 1
        memory: 1024M
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1

  vpa:
    enabled: false
    updateMode: Auto
    minAllowed:
      cpu: 400m
      memory: 256M
    maxAllowed:
      cpu: 1
      memory: 1024M

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 80

  settings:
    enabled: false
    env: ''
    tempPath: /tmp
    logging:
      format: simple
      targets: ''
    worker:
      resourceIntensiveTasksWorkersCount: 5
      regularTasksWorkersCount: 5


# @section asset importer settings

# @param assetImporter.appName Data Import job name.
# @param assetImporter.repository Docker Repository Image.
# @param assetImporter.tag Docker image tag.
# @param assetImporter.schedule Import job schedule.
# @param assetImporter.backoffLimit The number of [retries](https://kubernetes.io/docs/concepts/workloads/controllers/job/#pod-backoff-failure-policy) before considering a Job as failed.
# @param assetImporter.successfulJobsHistoryLimit How many completed and failed jobs should be kept. See [docs](https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/#jobs-history-limits).
# @param assetImporter.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @extra assetImporter.resources **Limits for the import job**
# @param assetImporter.resources.requests.cpu A CPU request.
# @param assetImporter.resources.requests.memory A memory request.
# @param assetImporter.resources.limits.cpu A CPU limit.
# @param assetImporter.resources.limits.memory A memory limit.
# @param assetImporter.enabled If assetImporter is enabled for the service.
# @skip assetImporter.suspended
# @param assetImporter.startOnDeploy Indicates that asset import should start when service installed or updated
# @param assetImporter.startOnDeployMode Import mode: 'ScheduleManifest' - copy data from manifest and schedule import, 'ManifestData' - just copy data from manifest.
# @extra Asset importer settings
# @param assetImporter.settings.maxParallelJobs How many import jobs can be run simultaneously
# @skip assetImporter.settings.files
# @param assetImporter.settings.imageProxyUrl URL to proxy image links (including query parameters, if any, i.e. 'https://someserver.com/proxy?url=' )
# @param assetImporter.settings.externalLinksProxyUrl URL to proxy http links from assets data (including query parameters, if any, i.e. 'https://someserver.com/proxy?url=' )
# @param assetImporter.settings.externalLinksAllowedHosts Comma separated hosts, i.e. 'someserver.com,someserver2.com' )
# @skip assetImporter.settings.esMetricsEnabled

assetImporter:
  appName: asset-importer
  repository: 2gis-on-premise/pro-importer
  tag: 1.50.1
  schedule: 0 18 * * *
  backoffLimit: 2
  successfulJobsHistoryLimit: 3
  nodeSelector: {}
  resources:
    requests:
      cpu: 700m
      memory: 768M
    limits:
      cpu: 1000m
      memory: 8Gi
  enabled: true
  suspended: false
  startOnDeploy: true
  startOnDeployMode: ScheduleManifest
  settings:
    maxParallelJobs: 1
    files: ''
    imageProxyUrl: ''
    externalLinksProxyUrl: ''
    externalLinksAllowedHosts: ''
    esMetricsEnabled: false


# @section asset preparer settings

# @skip assetPreparer

assetPreparer:
  appName: asset-preparer
  repository: 2gis-on-premise/pro-importer
  tag: 1.50.1
  schedule: 0 16 * * 6
  backoffLimit: 2
  successfulJobsHistoryLimit: 1
  nodeSelector: {}
  resources:
    requests:
      cpu: 300m
      memory: 256M
    limits:
      cpu: 500m
      memory: 512M
  enabled: true
  settings:
    files: ''
    maxParallelJobs: 1


# @section common infrastructure settings


# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.

dgctlDockerRegistry: ''

# @section Deployment Artifacts Storage settings

# @param dgctlStorage.host S3 endpoint. Format: `host:port`. **Required**
# @param dgctlStorage.secure Set to `true` if dgctlStorage.host must be accessed via https. **Required**
# @param dgctlStorage.bucket S3 bucket name. **Required**
# @param dgctlStorage.accessKey S3 access key for accessing the bucket. **Required**
# @param dgctlStorage.secretKey S3 secret key for accessing the bucket. **Required**
# @param dgctlStorage.manifest The path to the [manifest file](https://docs.2gis.com/en/on-premise/overview#nav-lvl2@paramCommon_deployment_steps). Format: `manifests/0000000000.json`.<br> This file contains the description of pieces of data that the service requires to operate. **Required**
# @param dgctlStorage.region AuthenticationRegion property for S3 client. Used in AWS4 request signing, this is an optional property
# @param dgctlStorage.disablePayloadSigning Turns off payload signing, this is an optional property. Should be TRUE for Oracle S3 storage

dgctlStorage:
  host: ''
  secure: false
  bucket: ''
  accessKey: ''
  secretKey: ''
  manifest: ''
  region: ''
  disablePayloadSigning: false


# @section 2GIS PRO Storage configuration

# @param s3.assetsDataBucket S3 bucket with base urbi assets, aggregations, and filters. **Required**
# @param s3.userAssetsDataBucket S3 bucket with user-created assets, aggregations, and filters. **Required**
# @param s3.layerDataBucket S3 bucket with prepared layer data. **Required**
# @param s3.snapshotBucket S3 bucket for storing snapshots of inclemental data updates. **Required**
# @param s3.resourcesBucket S3 bucket for storing static resources. **Required**

s3:
  assetsDataBucket: ''
  userAssetsDataBucket: ''
  layerDataBucket: ''
  snapshotBucket: ''
  resourcesBucket: ''


# @section PostgreSQL settings (minimum supported version 15)

# @param postgres.connectionString Connection string to the PostgreSQL database. Format: `Server=SERVER_URL;Database=DB_NAME;UID=USER_NAME;`
# @param postgres.connectionStringReadonly Connection string to the readonly node of PostgreSQL database. Format: `Server=SERVER_URL;Database=DB_NAME;UID=USER_NAME;`
# @param postgres.password User password to connect to the PostgreSQL database.

postgres:
  connectionString: ''
  connectionStringReadonly: ''
  password: ''


# @section Kafka settings (supported version 2.7)

# @param kafka.bootstrapServers Kafka bootstrap servers. Format: 'host1:port1,host2:port2'
# @param kafka.securityProtocol Kafka security protocol. Supported options: SaslPlaintext.
# @extra kafka.sasl **Kafka sasl settings** (see [the documentation](https://kafka.apache.org/documentation/#security_sasl_config))
# @param kafka.sasl.mechanism Kafka sasl mechanism. Supported options: ScramSha512.
# @param kafka.sasl.username Kafka sasl username.
# @param kafka.sasl.password Kafka sasl password.
# @param kafka.assetTopicsReaderGroupId Kafka consumer group for reading streaming assets data.
# @extra kafka.importTasksTopic Kafka topic settings to run import tasks.
# @param kafka.importTasksTopic.name Kafka topic name.
# @param kafka.importTasksTopic.readerGroupId Kafka consumer group for reading importing tasks.
# @extra kafka.eventsTopic Kafka topic settings to manage events.
# @param kafka.eventsTopic.name Kafka events topic name. **Required**
# @param kafka.eventsTopic.readerGroupId Kafka consumer group for reading events. **Required**
# @extra kafka.assetDataTopic Kafka topic settings to manage asset data updates.
# @param kafka.assetDataTopic.name Kafka topic name.
# @skip kafka.permissionsTopic
# @param kafka.refreshAssetsIntervalMinutes Refresh interval for reading streaming assets settings in minutes.
# @param kafka.useReplicaTopics Use topic replica when using multiple kafka clusters. Each topic in the kafka settings must have a corresponding ".replica" topic

kafka:
  bootstrapServers: ''
  securityProtocol: SaslPlaintext
  sasl:
    mechanism: ScramSha512
    username: ''
    password: ''
  assetTopicsReaderGroupId: ''
  importTasksTopic:
    name: ''
    readerGroupId: ''
  assetDataTopic:
    name: ''
  eventsTopic:
    name: ''
    readerGroupId: ''
  permissionsTopic:
    name: ''
    readerGroupId: ''
  refreshAssetsIntervalMinutes: 60
  useReplicaTopics: false


# @section ElasticSearch settings (supported version 7.x)

# @param elastic.host ElasticSearch host address. Format: `http(s)://HOST:PORT`
# @param elastic.credentials User name and password to connect to the ElasticSearch. Format: `USER_NAME:PASSWORD`
# @skip elastic.indexPrefix

elastic:
  host: ''
  credentials: ''
  indexPrefix: ''


# @section Redis settings (supported version 6.x)

# @param redis.host Redis host address. **Required**
# @param redis.port Redis port. **Required**
# @skip redis.enabled
# @param redis.username Username used to connect to Redis
# @param redis.password Password used to connect to Redis

redis:
  host: ''
  port: 6379
  enabled: true
  username: ''
  password: ''


# @section external services


# @section digger settings

# @skip digger

digger:
  url: ''
  userName: ''
  password: ''


# @section Keys Service settings

# @param keys.url API URL of service for managing partners' keys to 2GIS services (keys.api). **Required**
# @param keys.token keys.api access token. **Required**

keys:
  url: ''
  token: ''


# @section Catalog API settings

# @param catalog.url URL for [Catalog API](https://docs.2gis.com/en/on-premise/search). Example: http://catalog-api.svc
# @param catalog.key Access key to [Catalog API](https://docs.2gis.com/en/on-premise/search).

catalog:
  url: ''
  key: ''


# @section Navigation API settings

# @param navi.url URL for [Navigation API](https://docs.2gis.com/en/on-premise/navigation/overview). Example: http://navi-back.svc
# @param navi.key Access key to [Navigation API](https://docs.2gis.com/en/on-premise/navigation/overview).

navi:
  url: ''
  key: ''


# @section License Service API settings

# @param license.url Licensing server v2 URL. Example: https://license.svc **Required**

license:
  url: ''


# @section Search API settings

# @param search.url URL for [Search API](https://docs.2gis.com/en/on-premise/search). Example: http://search-api.svc

search:
  url: ''


# @skip tileGen

tileGen:
  url: ''
  userDataTileSet: ''

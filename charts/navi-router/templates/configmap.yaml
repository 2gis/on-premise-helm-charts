---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "generic-chart.fullname" . }}-configmap
data:
  router.conf: |
    {
      "log": {
        "logger_name": "router",
        "file_prefix": "../../../../",
        "enable_syslog": true,
        "level": {{ .Values.router.logLevel | default "Warning"  | quote }},
        "disabled_tags_": [
          "http",
          "UploadData",
          "Download"
        ],
        "format": "Json",
        "json_message_field_name": {{ .Values.router.logMessageField | quote }}
      },
      "service": {
        "pid_file": "/var/run/2gis/router.pid"
      },
      "http": {
        "port": 8080,
        "handlers_number": 20,
        "queue_size" : 256,
        "log_verbose": false,
        "max_process_time": 20,
        "response_timelimit": 60,
        "request_timeout": 60,
        "server" : "0.0.0.0"
      },
      {{- if .Values.router.sentry.enabled }}
      "error_tracker": {
        "report_destination_address": {{ .Values.router.sentry.address | quote }},
        "project_name": {{ .Values.router.sentry.project | quote }},
        "user_name": {{ .Values.router.sentry.username | quote }},
        "print_outgoing_messages": {{ .Values.router.sentry.printMessages | default false }},
        "debug": {{ .Values.router.sentry.debug | default false }},
        "path": {{ .Values.router.sentry.reportPath | default "/tmp/sentry" | quote }},
        "handler": {{ .Values.router.sentry.handler | default "/usr/sbin/2gis/mosesd/crashpad_handler" | quote }}
      },
      {{- end }}
      "context": {
        "variables": {
          "REMOTE_PATH": "{{ required "A valid .Values.router.castleUrl  entry required!" .Values.router.castleUrl }}",
          "LOCAL_PATH": "/var/lib/2gis/castle/"
        },
        "cities": {
          "update_period": 600,
          "nodes": [
            "{REMOTE_PATH}/{{ .Values.router.citiesFilename }}"
          ],
          "timeout_seconds": 60
        },
        "rules": {
          "update_period": 600,
          "nodes": [
            "{{ .Values.router.rulesUrl | default "file:///src/etc/rules.conf" }}"
          ],
          "timeout_seconds": 60
        },
        "server_info": {
          "server_id": "{{ include "generic-chart.fullname" . }}"
        },
        "local_restrictions_for_demo_keys": {
          "distance_between_points_km": [
              {"type" : "directions-api", "value" : 50},
              {"type" : "distance-matrix-api", "value" : 50},
              {"type" : "pairs-directions-api", "value" : 50}
          ],
          "polygon_size": [
            {
              "type": "route-planner-api",
              "length": 5,
              "width": 5
            }
          ]
        },
        "local_restrictions":{
          "distance_between_points_km":
            {{- .Values.router.localRestrictions.distanceBetweenPointsKm | mustToPrettyJson | nindent 8 }},
          "points_count":
            {{- .Values.router.localRestrictions.pointsCount | mustToPrettyJson | nindent 8 }},
          "matrix_size":
            {{- .Values.router.localRestrictions.matrixSize | mustToPrettyJson | nindent 8 }},
          "private_routing_walking_distance_km":
            {{- .Values.router.localRestrictions.privateRoutingWalkingDistanceKm | mustToPrettyJson | nindent 8 }}
        }
        {{- with .Values.keys }}
        {{- if .enabled }}
        {{ println "," }}
        "key_management_service" :
        {
          "service_remote_address" : {{ required "A valid .Values.keys.url entry required" .url | quote }},
          "keys_refresh_interval_sec" : {{ .refreshIntervalSec | int }},
          "keys_download_timeout_sec" : {{ .downloadTimeoutSec | int }}
        }
        {{- end }}
        {{- end }}
        {{- if .Values.router.additionalSections }}
        {{ println "," }}
         {{- include "tplvalues.render" ( dict "value" .Values.router.additionalSections "context" $) | nindent 8 }}
        {{- end }}
        {{- if (.Values.requestsSignCheck).enabledKeys }}
        {{ println "," }}
        "requests_sign_check" :
        {
          "data":
            {{- (.Values.requestsSignCheck).enabledKeys | mustToPrettyJson | nindent 12 }}
        }
        {{- else if (.Values.requestsSignCheck).keys }}
        {{ println "," }}
        "requests_sign_check" :
        {
          "enabled_for_keys" :
            {{- (.Values.requestsSignCheck).keys | mustToPrettyJson | nindent 12 }}
        }
        {{- end }}
      }
    }
  rules.conf: |-
    {{- include "rules.renderRules" . }}

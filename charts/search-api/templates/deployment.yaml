---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "search_api.fullname" . }}
  {{- if or .Values.annotations .Values.customCAs.bundle }}
  annotations:
    {{- if .Values.customCAs.bundle }}
    checksum/config: {{ include (print .Template.BasePath "/configmap.yaml") . | sha256sum }}
    {{- end }}
    {{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}    
  {{- end }}
  labels:
    {{- include "search_api.labels" . | nindent 4 }}
  {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "search_api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "search_api.labels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      initContainers:
        - name: init
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          env:
          - name: STORAGE_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "search_api.fullname" . }}
                key: s3AccessKey
          - name: STORAGE_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "search_api.fullname" . }}
                key: s3SecretKey
          {{- if .Values.customCAs.bundle }}
          {{- include "search_api.env.custom.ca.path" . | nindent 10 }}
          {{- end }}
          command:
            - importer
            - --endpoint={{ required "Valid .Values.dgctlStorage.host required!" .Values.dgctlStorage.host }}
            - --access-key-id=$(STORAGE_ACCESS_KEY)
            - --secret-access-key=$(STORAGE_SECRET_KEY)
            - --bucket-name={{ required "Valid .Values.dgctlStorage.bucket required!" .Values.dgctlStorage.bucket }}
            - --region={{ .Values.dgctlStorage.region }}
            - --manifest={{ required "Valid .Values.dgctlStorage.manifest required!" .Values.dgctlStorage.manifest }}
            - --output-dir-path={{ .Values.api.dataDir }}
            {{- if .Values.dgctlStorage.secure }}
            - --secure
            {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          volumeMounts:
            - name: {{ include "search_api.name" $ }}-configmap
              mountPath: /etc/2gis
            - name: search-api-data
              mountPath: {{ .Values.api.dataDir }}
          {{- if .Values.customCAs.bundle }}
            {{- include "search_api.custom.ca.volumeMounts" . | nindent 12 }}
          {{- end }}
      containers:
        - name: api
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          command: ["Sapphire2", "--exec"]
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 15"]
          volumeMounts:
            - name: {{ include "search_api.name" $ }}-configmap
              mountPath: /etc/2gis
            - name: search-api-data
              mountPath: {{ .Values.api.dataDir }}
          {{- if .Values.customCAs.bundle }}
            {{- include "search_api.custom.ca.volumeMounts" . | nindent 12 }}
          {{- end }}
          env:
            - name: REDEPLOY_LABEL
              value: "{{ .Values.redeployLabel }}"
            {{- if .Values.customCAs.bundle }}
            {{- include "search_api.env.custom.ca.path" . | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.customCAs.bundle }}
        {{- include "search_api.custom.ca.deploys.volumes" . | nindent 8 }}
        {{- end }}
        - name: nginx
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          command: ["nginx", "-c", "/etc/2gis/nginx.conf"]
          {{- if (le .Values.nginx.httpPort 1024.0) }}
          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.nginx.httpPort }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /v2/status
              port: {{ .Values.nginx.httpPort }}
            successThreshold: 1
            failureThreshold: 5
            timeoutSeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 15"]
          volumeMounts:
            - name: {{ include "search_api.name" $ }}-configmap
              mountPath: /etc/2gis
          {{- if .Values.customCAs.bundle }}
            {{- include "search_api.custom.ca.volumeMounts" . | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.customCAs.bundle }}
            {{- include "search_api.env.custom.ca.path" . | nindent 12 }}
            {{- end }}
      volumes:
        - name: {{ include "search_api.name" . }}-configmap
          configMap:
            name: {{ include "search_api.fullname" . }}
            items:
              - key: search_api_config
                path: Sapphire2.xml
              - key: nginx_config
                path: nginx.conf
        - name: search-api-data
          emptyDir: {}
        {{- if .Values.customCAs.bundle }}
        {{- include "search_api.custom.ca.deploys.volumes" . | nindent 8 }}
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if .Values.geodetector.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "search-api.fullname" . }}-geodetector
  labels:
    {{- include "search-api.labels" . | nindent 4 }}
    search/part: geodetector
    {{- if (.Values.dgctlStorage).manifest }}
    {{- with (include "search-api.manifestCode" .) }}
    manifest: {{ . | quote }}
    {{- end }}{{- /* include "search-api.manifestCode" */}}
    {{- end }}{{- /* .Values.dgctlStorage */}}
spec:
  {{- if not .Values.geodetector.hpa.enabled }}
  replicas: {{ .Values.geodetector.replicaCount }}
  {{- end }}{{- /* not .Values.geodetector.hpa.enabled */}}
  selector:
    matchLabels:
      {{- include "search-api.selectorLabels" . | nindent 6 }}
    {{- with .Values.geodetector.matchLabels }}
      {{- toYaml . | nindent 6 }}
    {{- end }}{{- /* .Values.geodetector.matchLabels */}}
      search/part: geodetector
  template:
    metadata:
      annotations:
      {{- with .Values.geodetector.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}{{- /* .Values.geodetector.podAnnotations */}}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{ .Values.magg.ports.metrics | quote }}
        prometheus.io/scrape: "true"
      labels:
        {{- include "search-api.labels" . | nindent 8 }}
      {{- with .Values.geodetector.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}{{- /* .Values.geodetector.podLabels */}}
        search/part: geodetector
    spec:
      volumes:
        {{- if .Values.geodetector.data.persistent.enabled }}
        - name: geodetector-data
          ephemeral:
            volumeClaimTemplate:
              metadata:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  {{- .Values.geodetector.data.resources | toYaml | nindent 18 }}
                storageClassName: {{ .Values.geodetector.data.storageClassName | quote }}
                volumeMode: Filesystem
        {{ else }}
        - name: geodetector-data
          emptyDir:
            sizeLimit: {{ .Values.geodetector.data.resources.requests.storage }}
        {{- end }}{{- /* .Values.geodetector.data.persistent.enabled */}}
        - name: geodetector-config
          configMap:
            name: {{ include "search-api.fullname" . }}
            defaultMode: 420
      containers:
        - name: geodetector
          securityContext:
            {{- toYaml .Values.geodetector.securityContext | nindent 12 }}
          image: "{{ .Values.geodetector.image.repository }}:{{ .Values.geodetector.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.geodetector.image.pullPolicy }}
          ports:
            - name: geodetector-srv
              containerPort: {{ .Values.geodetector.ports.server }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.geodetector.ports.grpc }}
              protocol: TCP
            - name: monitor
              containerPort: {{ .Values.geodetector.ports.monitor }}
              protocol: TCP
            - name: http-syncer
              containerPort: {{ .Values.syncer.ports.http }}
              protocol: TCP
          resources:
            {{- toYaml .Values.geodetector.resources | nindent 12 }}
          {{- if .Values.customCAs.bundle }}
            {{- include "search-api.custom.ca.volumeMounts" . | nindent 12 }}
          {{- end }}{{- /* .Values.customCAs.bundle */}}
          volumeMounts:
            - name: geodetector-data
              mountPath: /data
            - name: geodetector-config
              mountPath: /app/geodetector_vars.yaml
              subPath: geodetector_vars.yaml
          {{- if .Values.geodetector.livenessProbe.enabled }}
          livenessProbe:
            {{- include "common.tplvalues.render" (dict "value" (omit .Values.geodetector.livenessProbe "enabled") "context" $) | nindent 12 -}}
          {{ end -}}{{- /* .Values.geodetector.livenessProbe.enabled */}}
          {{- if .Values.geodetector.readinessProbe.enabled }}
          readinessProbe:
            {{- include "common.tplvalues.render" (dict "value" (omit .Values.geodetector.readinessProbe "enabled") "context" $) | nindent 12 -}}
          {{ end -}}{{- /* .Values.geodetector.readinessProbe.enabled */}}
          {{- if .Values.geodetector.startupProbe.enabled }}
          startupProbe:
            {{- include "common.tplvalues.render" (dict "value" (omit .Values.geodetector.startupProbe "enabled") "context" $) | nindent 12 -}}
          {{ end -}}{{- /* .Values.geodetector.startupProbe.enabled */}}
          {{- if .Values.geodetector.prestopHook.enabled }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - sleep 30
          {{- end }}{{- /* .Values.geodetector.prestopHook.enabled */}}
        - name: syncer
          securityContext:
            {{- toYaml .Values.syncer.securityContext | nindent 12 }}
          image: {{ .Values.syncer.image.repository }}:{{ .Values.syncer.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.syncer.image.pullPolicy }}
          resources:
            {{- toYaml .Values.syncer.resources | nindent 12 }}
          env:
            - name: GINMODE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "search-api.fullname" . }}
                  key: GINMODE
            {{- if .Values.customCAs.bundle }}
            {{- include "search-api.env.custom.ca.path" . | nindent 12 }}
            {{- end }}{{- /* .Values.customCAs.bundle */}}
          volumeMounts:
            - name: geodetector-data
              mountPath: /data
            - name: geodetector-config
              mountPath: /app/config.yaml
              subPath: syncer-worker.yaml
          {{- if .Values.customCAs.bundle }}
            {{- include "search-api.custom.ca.volumeMounts" . | nindent 12 }}
          {{- end }}{{- /* .Values.customCAs.bundle */}}
        {{- if .Values.magg.enabled }}
        - name: magg
          image: {{ .Values.magg.image.repository }}:{{ .Values.magg.image.tag }}
          imagePullPolicy: {{ .Values.magg.image.pullPolicy }}
          env:
            - name: METRICS_AGGREGATOR_PORT
              value: {{ .Values.magg.ports.metrics | quote }}
            - name: METRICS_AGGREGATOR_SOURCES
              value: "http://127.0.0.1:{{ .Values.geodetector.ports.monitor }}/metrics,\
                http://127.0.0.1:{{ .Values.syncer.ports.http }}/metrics"
            - name: GOMAXPROCS
              value: "1"
            {{- if .Values.customCAs.bundle }}
            {{- include "search-api.env.custom.ca.path" . | nindent 12 }}
            {{- end }}{{- /* .Values.customCAs.bundle */}}
          {{- if .Values.customCAs.bundle }}
          volumeMounts:
            {{- include "search-api.custom.ca.volumeMounts" . | nindent 12 }}
          {{- end }}{{- /* .Values.customCAs.bundle */}}
          ports:
            - containerPort: {{ .Values.magg.ports.metrics }}
          resources:
            {{- toYaml .Values.magg.resources | nindent 12 }}
        {{ end }}{{- /* .Values.magg.enabled */}}
      serviceAccountName: {{ include "search-api.serviceAccountName" . }}
      securityContext: {{- toYaml .Values.geodetector.podSecurityContext | nindent 8 }}
  strategy:
  {{- .Values.geodetector.strategy | toYaml | nindent 4 }}
{{ end }}{{- /* .Values.geodetector.enabled */}}

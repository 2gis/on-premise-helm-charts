{{- if .Values.keycloakConfigCli.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "keycloak.fullname" . }}-config-cli
  namespace: {{ include "keycloak.names.namespace" . | quote }}
  labels: {{- include "keycloak.labels" . | nindent 4 }}
    app.kubernetes.io/component: keycloak-config-cli
  annotations:
    {{- include "keycloak.tplvalues.render" ( dict "value" .Values.keycloakConfigCli.annotations "context" $ ) | nindent 4 }}
spec:
  backoffLimit: {{ .Values.keycloakConfigCli.backoffLimit }}
  {{- if .Values.keycloakConfigCli.cleanupAfterFinished.enabled }}
  ttlSecondsAfterFinished: {{ .Values.keycloakConfigCli.cleanupAfterFinished.seconds }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "keycloak.labels" . | nindent 8 }}
        app.kubernetes.io/component: keycloak-config-cli
        {{- if .Values.keycloakConfigCli.podLabels }}
        {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configuration: {{ include (print $.Template.BasePath "/configmap-realm.yaml") . | sha256sum }}
        {{- if .Values.keycloakConfigCli.podAnnotations }}
        {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "keycloak.serviceAccount" . }}
      restartPolicy: Never
      {{- if .Values.keycloakConfigCli.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.keycloakConfigCli.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.keycloakConfigCli.hostAliases }}
      hostAliases: {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.keycloakConfigCli.nodeSelector }}
      nodeSelector: {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.keycloakConfigCli.podTolerations }}
      tolerations: {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.podTolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if not (empty .Values.imagePullSecrets) }}
      imagePullSecrets:
      {{- include "keycloak.tplvalues.render" ( dict "value" .Values.imagePullSecrets "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.keycloakConfigCli.initContainers }}
      initContainers:
        {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: keycloak-config-cli
          {{- with .Values.keycloakConfigCli.image }}
          image: "{{ required "A valid $.Values.dgctlDockerRegistry entry required" $.Values.dgctlDockerRegistry }}/{{ .repository }}:{{ .tag }}"
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          {{- if .Values.keycloakConfigCli.command }}
          command: {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.command "context" $) | nindent 12 }}
          {{- else }}
          command:
            - java
            - -jar
            - /opt/bitnami/keycloak-config-cli/keycloak-config-cli.jar
          {{- end }}
          {{- if .Values.keycloakConfigCli.args }}
          args: {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.args "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.keycloakConfigCli.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.keycloakConfigCli.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          env:
            - name: KEYCLOAK_URL
              value: {{ printf "http://%s-headless:%d%s" (include "keycloak.fullname" .) (.Values.containerPorts.http | int) (.Values.httpRelativePath) }}
            - name: KEYCLOAK_USER
              value: {{ .Values.auth.adminUser | quote }}
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "keycloak.secretName" . }}
                  key: {{ include "keycloak.secretKey" . }}
            - name: IMPORT_FILES_LOCATIONS
              value: /config/*
            - name: KEYCLOAK_AVAILABILITYCHECK_ENABLED
              value: "true"
            {{- if .Values.keycloakConfigCli.extraEnvVars }}
            {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.keycloakConfigCli.extraEnvVarsCM .Values.keycloakConfigCli.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.keycloakConfigCli.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.keycloakConfigCli.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /config
            {{- if .Values.keycloakConfigCli.extraVolumeMounts }}
            {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.keycloakConfigCli.resources }}
          resources: {{- toYaml .Values.keycloakConfigCli.resources | nindent 12 }}
          {{- end }}
        {{- if .Values.keycloakConfigCli.sidecars }}
        {{- include "keycloak.tplvalues.render" ( dict "value" .Values.keycloakConfigCli.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "keycloak.fullname" . }}-realm
        {{- if .Values.keycloakConfigCli.extraVolumes }}
        {{- include "keycloak.tplvalues.render" (dict "value" .Values.keycloakConfigCli.extraVolumes "context" $) | nindent 8 }}
        {{- end }}

{{- end }}

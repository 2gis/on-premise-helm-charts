apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "citylens-ui.name" . }}
  {{- with .Values.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.service.labels }}
  labels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "citylens-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ (include (print $.Template.BasePath "/secrets.yaml") . | fromYaml).data | toYaml | sha256sum }}
        checksum/config: {{ (include (print $.Template.BasePath "/configmap.yaml") . | fromYaml).data | toYaml | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "citylens-ui.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      enableServiceLinks: false
      containers:
        - name: {{ include "citylens-ui.name" . }}
          image: "{{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
          lifecycle:
            preStop:
              exec:
                command: [ "/bin/sh", "-c", "sleep 5" ]
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
            - name: CATALOG_API_URL
              value: {{ required "A valid .Values.env.CATALOG_API_URL entry required" .Values.env.CATALOG_API_URL | quote }}
            - name: MAPGL_API_URL
              value: {{ printf "%s/api/js" (required "A valid .Values.env.MAPGL_API_URL entry required" .Values.env.MAPGL_API_URL) | quote }}
            - name: MAPGL_COPYRIGHT_VARIANT
              value: {{ .Values.env.MAPGL_COPYRIGHT_VARIANT | quote }}
            - name: MAPGL_STYLE_ID
              value: {{ .Values.env.MAPGL_STYLE_ID | quote }}
            - name: SSO_API_URL
              value: {{ required "A valid .Values.env.SSO_API_URL entry required" .Values.env.SSO_API_URL | quote }}
            - name: SSO_CLIENT_ID
              value: {{ required "A valid .Values.env.SSO_CLIENT_ID entry required" .Values.env.SSO_CLIENT_ID | quote }}
            - name: SSO_SCOPE
              value: {{ required "A valid .Values.env.SSO_SCOPE entry required" .Values.env.SSO_SCOPE | quote }}
            - name: ROUTES_API_URL
              value: {{ required "A valid .Values.env.ROUTES_API_URL entry required" .Values.env.ROUTES_API_URL | quote }}
            - name: ENV_FLAGS_ENABLE_Q1_FEATURES
              value: {{ .Values.env.ENV_FLAGS_ENABLE_Q1_FEATURES | quote }}
            - name: MAPGL_KEY
              valueFrom:
                secretKeyRef:
                  key: MAPGL_KEY
                  name: {{ include "citylens-ui.name" . }}-secret
            - name: SSO_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: SSO_CLIENT_SECRET
                  name: {{ include "citylens-ui.name" . }}-secret
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthcheckPath }}
              port: http
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthcheckPath }}
              port: http
          {{- end }}
          volumeMounts:
            - name: {{ include "citylens-ui.name" $ }}-configmap
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: {{ include "citylens-ui.name" $ }}-configmap
              mountPath: /etc/nginx/templates/default.conf.template
              subPath: default.conf.template
      volumes:
        - name: {{ include "citylens-ui.name" . }}-configmap
          configMap:
            name: {{ include "citylens-ui.name" . }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}

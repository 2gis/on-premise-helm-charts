---

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  repository: navi/dm-async-service-dev
  pullPolicy: IfNotPresent
  # Chart.AppVersion if unset
  tag:

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

annotations: {}
labels: {}
podAnnotations: {}
podLabels: {}

imagePullSecrets: []
# affinity gets passed through render, references to other values allowed, e.g.:
#
# affinity:
#   podAntiAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#     # do not stack up on the same node
#     - labelSelector:
#         matchExpressions:
#         - key: app.kubernetes.io/instance
#           operator: In
#           values:
#           - "{{ .Release.Name }}"
#       topologyKey: kubernetes.io/hostname
#
# to avoide iterpolation use the following syntax: '{{ "{{ .Release.Name }}" }}'
affinity: {}
nodeSelector: {}
tolerations: []

priorityClassName: ""

podSecurityContext: {}
securityContext: {}

terminationGracePeriodSeconds: 60

# if prometheus metrics needed
prometheusEnabled: true

updateStrategy:
  type: RollingUpdate

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 1000m
    memory: 1Gi

service:
  enabled: true
  type: ClusterIP
  port: 80
  annotations: {}
  labels: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

podDisruptionBudget:
  enabled: true
  maxUnavailable: 1

hpa:
  enabled: false
  maxReplicas: 2
  minReplicas: 1
  targetCPUUtilizationPercentage: 80

vpa:
  enabled: false
  updateMode: "Auto"
  minAllowed:
    cpu: 1000m
    memory: 1Gi
  maxAllowed:
    cpu: 2000m
    memory: 2Gi

dm:
  # port exposed by DM Async
  port: 8000
  configType: env
  workerCount: 4
  citiesUrl: 'http://example.com/cities.conf'
  citiesUpdatePeriod: 3600

db:
  host: localhost
  port: 5432
  name: dm
  user: dbuser
  # must be specified in overrides
  password: dbpassword

kafka:
  bootstrap: "example.com:9092"
  groupId: test_id
  user: kafkauser
  password: kafkapassword
  mechanism: SCRAM-SHA-512
  protocol: SASL_SSL
  consumerTaskTopic: service_message_bus
  consumerCancelTopic: cancel_topic
  topicRules:
  # topic for requests with no specific match
  - topic: task_request_topic
    default: true
  - topic: task_request_topic
    projects:
    - dammam

s3:
  url: "https://example.com"
  bucket: samplebucket
  keyId: sampleid
  key: samplekey

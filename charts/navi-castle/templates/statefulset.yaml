---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "castle.fullname" . }}
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
  labels:
    {{- include "castle.labels" . | nindent 4 }}
  {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ include "castle.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "castle.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configbuilder: {{ include (print $.Template.BasePath "/configmapbuilder.yaml") . | sha256sum }}
        checksum/configbuilder-runnable: {{ include (print $.Template.BasePath "/configmapbuilder-runnable.yaml") . | sha256sum }}
        checksum/confignginx: {{ include (print $.Template.BasePath "/configmapnginx.yaml") . | sha256sum }}
        {{- if .Values.customCAs.bundle }}
        checksum/custom-ca: {{ (include (print $.Template.BasePath "/configmap-ca.yaml") . | fromYaml).data | toYaml | sha256sum }}
        {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "castle.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "castle.fullname" . }}-builder-config
          configMap:
            name: {{ include "castle.fullname" . }}-builder-config
        - name: {{ include "castle.fullname" . }}-runnable
          configMap:
            name: {{ include "castle.fullname" . }}-runnable
            defaultMode: 0775
        - name: {{ include "castle.fullname" . }}-castle-nginx-config
          configMap:
            name: {{ include "castle.fullname" . }}-castle-nginx-config
        {{- if .Values.customCAs.bundle }}
        - name: {{ include "castle.fullname" $ }}-ca
          configMap:
            name: {{ include "castle.fullname" $ }}-ca
        {{- end }}
        {{- if (not .Values.persistentVolume.enabled) }}
        - name: {{ include "castle.fullname" . }}-data
          emptyDir: {}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      containers:
        - name: castle-nginx
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: {{ include "castle.fullname" . }}-castle-nginx-config
            mountPath: /etc/nginx/conf.d/castle.conf
            subPath: castle.conf
          {{- if .Values.persistentVolume.enabled }}
          - name: {{ include "castle.fullname" . }}-pvc
            mountPath: {{ .Values.castle.castleDataPath }}
          {{- else }}
          - name: {{ include "castle.fullname" . }}-data
            mountPath: {{ .Values.castle.castleDataPath }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.nginx.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
        - name: castle-cron
          image: {{ required "A valid $.Values.dgctlDockerRegistry entry required" $.Values.dgctlDockerRegistry }}/{{ $.Values.castle.image.repository }}:{{ $.Values.castle.image.tag }}
          imagePullPolicy: {{ .Values.castle.image.pullPolicy }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["/tini","--"]
          args:
          - /opt/update_services_init.sh
          env:
          {{- if .Values.customCAs.bundle }}
          - name: SSL_CERT_FILE
            value: {{ include "custom.ca.mountPath" . }}/custom-ca.crt
          {{- end }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          startupProbe:
            {{- /* checks if supercronic prometheus port is open */}}
            httpGet:
              path: /health
              port: {{ .Values.cron.prometheusPort | int }}
            failureThreshold: {{ (.Values.castle.startupProbe).failureThreshold | default 180 | int }}
            periodSeconds: {{ (.Values.castle.startupProbe).periodSeconds | default 5 | int }}
          livenessProbe:
            {{- /* checks if supercronic prometheus port is open */}}
            httpGet:
              path: /health
              port: {{ .Values.cron.prometheusPort | int }}
            initialDelaySeconds: 10
            periodSeconds: 10
          ports:
            - name: cron-prom
              containerPort: {{ .Values.cron.prometheusPort | int }}
              protocol: TCP
          volumeMounts:
          - name: {{ include "castle.fullname" $ }}-builder-config
            mountPath: /opt/config_builder.conf
            subPath: config_builder.conf
          - name: {{ include "castle.fullname" $ }}-runnable
            mountPath: /opt/update_services_init.sh
            subPath: update_services_init.sh
          - name: {{ include "castle.fullname" $ }}-builder-config
            mountPath: {{ $.Values.castle.castleDataPath }}/cities_template
            subPath: cities_template
          - name: {{ include "castle.fullname" $ }}-builder-config
            mountPath: /opt/update_services
            subPath: update_services
          {{- if .Values.customCAs.bundle }}
          - name: {{ include "castle.fullname" $ }}-ca
            mountPath: {{ include "custom.ca.mountPath" . }}/custom-ca.crt
            subPath: custom-ca.crt
          {{- end }}
          {{- if .Values.persistentVolume.enabled }}
          - name: {{ include "castle.fullname" . }}-pvc
            mountPath: {{ .Values.castle.castleDataPath }}
          {{- else }}
          - name: {{ include "castle.fullname" . }}-data
            mountPath: {{ .Values.castle.castleDataPath }}
          {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        {{- include "tplvalues.render" ( dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "castle.fullname" . }}-pvc
      spec:
        {{- with .Values.persistentVolume.accessModes }}
        accessModes:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        storageClassName: {{ .Values.persistentVolume.storageClass }}
        resources:
          requests:
            storage: {{ .Values.persistentVolume.size }}
  {{- end }}

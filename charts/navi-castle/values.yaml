# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.

dgctlDockerRegistry: ''


# @section Deployment settings

# @param castle.image.repository Navi-Castle service image repository.
# @param castle.image.pullPolicy Navi-Castle service pull policy.
# @param castle.image.tag Navi-Castle service image tag.
# @param nginx.image.repository Navi-Front image repository.
# @param nginx.image.tag Navi-Front image tag.


# @section Deployment Artifacts Storage settings

# @param dgctlStorage.host S3 endpoint. Format: `host:port`.
# @param dgctlStorage.secure If S3 uses https.
# @param dgctlStorage.region S3 region.
# @param dgctlStorage.bucket S3 bucket name.
# @param dgctlStorage.accessKey S3 access key for accessing the bucket.
# @param dgctlStorage.secretKey S3 secret key for accessing the bucket.
# @param dgctlStorage.manifest The path to the [manifest file](https://docs.2gis.com/en/on-premise/overview#nav-lvl2@paramCommon_deployment_steps). Format: `manifests/0000000000.json`.<br> This file contains the description of pieces of data that the service requires to operate.

dgctlStorage:
  host: ''
  secure: false
  region: ''
  bucket: ''
  accessKey: ''
  secretKey: ''
  manifest: ''


# @section Common settings

# @param enableServiceLinks Services injection into containers environment [Accessing the Service](https://kubernetes.io/docs/tutorials/services/connect-applications-service/#accessing-the-service)
# @param replicaCount A replica count for the pod.
# @param imagePullSecrets Kubernetes image pull secrets.
# @param nameOverride Base name to use in all the Kubernetes entities deployed by this chart.
# @param fullnameOverride Base fullname to use in all the Kubernetes entities deployed by this chart.
# @param podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param podSecurityContext Kubernetes [pod security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
# @param securityContext Kubernetes [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
# @param nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
# @param terminationGracePeriodSeconds Maximum time allowed for graceful shutdown.

enableServiceLinks: true
replicaCount: 1
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
nodeSelector: {}
tolerations: []
affinity: {}
terminationGracePeriodSeconds: 60


# @section Service account settings

# @param serviceAccount.create Specifies whether a service account should be created.
# @param serviceAccount.annotations Annotations to add to the service account.
# @param serviceAccount.name The name of the service account to use. If not set and create is true, a name is generated using the fullname template.

serviceAccount:
  create: false
  annotations: {}
  name: ''


# @section Service settings

# @param service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param service.port Service port.

service:
  type: ClusterIP
  port: 80


# @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

# @param ingress.enabled If Ingress is enabled for the service.
# @param ingress.className Name of the Ingress controller class.
# @param ingress.hosts[0].host Hostname for the Ingress service.
# @param ingress.hosts[0].paths[0].path Path of the host for the Ingress service.
# @param ingress.hosts[0].paths[0].pathType Type of the path for the Ingress service.
# @param ingress.tls TLS configuration

ingress:
  enabled: false
  className: nginx
  hosts:
  - host: navi-castle.example.com
    paths:
    - path: /
      pathType: Prefix
  tls: []
  #  hosts:
  #    navi-castle.example.com
  #  secretName: secret.tls

# @section Limits

# @param resources [nullable] Container resources requirements structure.
# @param resources.requests.cpu [nullable] CPU request, recommended value `100m`.
# @param resources.requests.memory [nullable] Memory request, recommended value `128Mi`.
# @param resources.limits.cpu [nullable] CPU limit, recommended value `1000m`.
# @param resources.limits.memory [nullable] Memory limit, recommended value `512Mi`.

resources: {}


# @section Navi-Castle service settings

# @param castle.castleDataPath Path to the data directory.
# @param castle.excludeProjects Array of project labels to exclude
# @extra castle.restrictions Section ignored if castle.restriction.enabled=false
# @param castle.restrictions.host Restrictions API base URL.
# @param castle.restrictions.key Restrictions API key.
# @param castle.jobs Number of parallel downloading jobs.
# @param castle.logLevel Logging level, one of: DEBUG, INFO, WARNING, ERROR, CRITICAL.
# @extra castle.startupProbe [nullable] Settings for startup probes
# @param castle.startupProbe.periodSeconds Check period for startup probes.
# @param castle.startupProbe.failureThreshold Threshold for startup probes.
# @extra castle.storePeriod [nullable] Retention period for the corresponding data if enabled, ref. `cron`, `init` and `rtr` sections. Supported values: `day`, `month`, `week` or a specific number of days.
# @param castle.storePeriod.import Retention period for `import` job data, ref. `cron/init.enabled.import`
# @param castle.storePeriod.restriction Retention period for `restriction` job data, ref. `cron/init.enabled.restriction`
# @param castle.storePeriod.restrictionImport Retention period for `restrictionImport` job data, ref. `cron/init.enabled.restrictionImport`
# @param castle.storePeriod.rtr Retention period for `rtr` data, ref. `rtr.enabled`

castle:
  image:
    repository: 2gis-on-premise/navi-castle
    pullPolicy: IfNotPresent
    tag: 1.9.8
  castleDataPath: /opt/castle/data/
  restrictions:
    host: http://restrictions-api.host
    key: ''
  excludeProjects: []
  jobs: 1
  logLevel: INFO
  startupProbe:
    periodSeconds: 5
    failureThreshold: 180
  storePeriod:
    import: month
    restriction: week
    restrictionImport: week
    rtr: week


# @section Navi-Front settings

# @param nginx.port HTTP port on which Navi-Front will be listening.
# @param nginx.nodeHeader Enable header with node name (X-Node).

nginx:
  port: 8080
  image:
    repository: 2gis-on-premise/navi-front
    tag: 1.25.2
  nodeHeader: false


# @section Cron settings

# @param cron.enabled.import If the `import` cron job is enabled.
# @param cron.enabled.restriction If restrictions API enabled, incompatible with `restrictionImport`.
# @param cron.enabled.restrictionImport If restrictions import enabled, incompatible with `restriction`.
# @param cron.schedule.import Cron job schedule for `import`.
# @param cron.schedule.restriction Cron job schedule for `restriction`.
# @param cron.schedule.restrictionImport Cron job schedule for `restrictionImport`.
# @param cron.concurrencyPolicy Cron job concurrency policy: `Allow` or `Forbid`.
# @param cron.successfulJobsHistoryLimit How many completed and failed jobs should be kept.
# @param cron.prometheusPort Container port for supercronic prometheus

cron:
  enabled:
    import: false
    restriction: false
    restrictionImport: false
  schedule:
    import: '11 * * * *'
    restriction: '*/5 * * * *'
    restrictionImport: '*/5 * * * *'
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  prometheusPort: 9476


# @section Init settings

# @param init.enabled.import If the `import` on init is enabled. Warning: if disable data not imported. Old data will be lost if not persistentVolume.enabled.
# @param init.enabled.restriction If restrictions API enabled, incompatible with `restrictionImport`.
# @param init.enabled.restrictionImport If restrictions import enabled, incompatible with `restriction`.

init:
  enabled:
    import: true
    restriction: false
    restrictionImport: false


# @section Kubernetes [Persistence Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) settings

# @param persistentVolume.enabled If Kubernetes persistence volume should be enabled for Castle.
# @param persistentVolume.accessModes Volume access mode.
# @param persistentVolume.storageClass Volume [storage class](https://kubernetes.io/docs/concepts/storage/storage-classes/).
# @param persistentVolume.size Volume size.
# @param persistentVolume.type Volume type `pvc` or `ephemeral`.

persistentVolume:
  enabled: false
  type: pvc
  accessModes:
  - ReadWriteOnce
  storageClass: ceph-csi-rbd
  size: 5Gi

# @section RTR settings. Leave with defaults, FOR FUTURE RELEASE.

# @param rtr.enabled If the RTR is enabled.
# @param rtr.http.baseDir Base dir on server.
# @param rtr.http.serverUrl Server URL.
# @param rtr.kafka.topic Name of the topic.
# @param rtr.kafka.groupId Kafka consumer group id.
# @extra rtr.kafka.properties Properties as supported by kafka-python. Refer to inline comments for details.
# @skip rtr.kafka.properties.bootstrap.servers
# @skip rtr.kafka.properties.security.protocol
# @param rtr.kafka.sensitiveProperties As rtr.kafka.properties, but kept in Secrets. Refer to inlines comments for details.
# @param rtr.kafka.fileProperties As rtr.kafka.properties, but kept in a file, which passed to application as a filename. Refer to inline comments for details.
# @param rtr.buildFtp.baseDir Base dir on build ftp.
# @param rtr.buildFtp.login Login on build ftp.
# @param rtr.buildFtp.password Password on build ftp.
# @param rtr.buildFtp.serverUrl URL build ftp.
# @param rtr.prometheus.baseDir Base dir on premtheus.
# @param rtr.prometheus.serverUrl URL premtheus.
# @param rtr.puzzle.baseDir Base dir on puzzle.
# @param rtr.puzzle.serverUrl URL puzzle.
# @param rtr.puzzleSegments.baseDir Base dir on puzzle segments.
# @param rtr.puzzleSegments.serverUrl URL puzzle segments.
# @param rtr.webapi.baseDir Base dir on webapi.
# @param rtr.webapi.serverUrl URL webapi.

rtr:
  enabled: false
  http:
    baseDir: export-restrictions-json
    serverUrl: ''
  kafka:
    groupId: castle-rtr
    properties:
      bootstrap.servers: ''
      security.protocol: PLAINTEXT
    sensitiveProperties: {}
    fileProperties: {}
    topic: ''
  buildFtp:
    serverUrl: ''
    baseDir: trafficedro
    login: ''
    password: ''
  webapi:
    serverUrl: ''
    baseDir: /2.0/region/list?fields=*&type=segment,region
  puzzle:
    serverUrl: ''
    baseDir: api/segments-to-download?version=%version%
  puzzleSegments:
    serverUrl: ''
    baseDir: api/segments/%code%?version=%version%
  prometheus:
    serverUrl: ''
    baseDir: api/private/Export/segmentGrid/freezeVersions

# More on Kafka properties.
#
# kafka.properties, kafka.sensitiveProperties and kafka.fileProperties are sections to specify
# Kafka properties as supported by kafka-python:
# https://buildmedia.readthedocs.org/media/pdf/kafka-python/master/kafka-python.pdf
#
# Properties are case-insensitive, '.' and '_' can be used interchangeably, i.e.
# the following ones mean the same thing:
# - bootstrap.servers
# - bootstrap_servers
# - BOOTstrap.SERVErs
# Even though kafka-python native word splitter is '_', there '.' is rather used for similiarity
# with corresponding settings in navi-back.
#
# Both kafka.properties and kafka.sensitiveProperties pass values through to the application,
# the difference is that kafka.properties are openly disclosed in Pod specification, while
# kafka.sensitiveProperties is kept in Secrets and never disclosed.
#
# kafka.fileProperties keep their values in Secrets the same way as kafka.sensitiveProperties,
# but these secrets get mounted in application container as files. Application gets pathnames
# to these files instead of actual values.
#
# Kafka properties for common use-cases:
#
# Note that <Set-by-CI from user.p12> means that actual content passed from
# file user.p12 with --set-file (especially binary data), e.g.:
#
#   $ helm install navi-back . --set-file 'kafka.fileProperties.ssl\.keystore\.location=user.p12'
#
# 1. SSL authentication with key file protected with password 'password':
#
#  properties:
#    bootstrap.servers: kafka:9092
#    security.protocol: SSL
#  sensitiveProperties:
#    ssl.password: "password"
#  fileProperties:
#    ssl.cafile: "<Set-by-CI from ca.crt>"
#    ssl.certfile: "<Set-by-CI from user.crt>"
#    ssl.keyfile: "<Set-by-CI from user.pem>"
#
# 2. login/password SASL as kafkauser/123:
#
#  properties:
#    bootstrap.servers: kafka:9092
#    security.protocol: SASL_PLAINTEXT
#    sasl.mechanism: SCRAM-SHA-512
#    sasl.plain.username: user
#  sensitiveProperties:
#    sasl.plain.password: "password"
#
# 3. Unauthenticated:
#
#  properties:
#    bootstrap.servers: kafka:9092
#    security.protocol: PLAINTEXT
#
# Note that .p12 or .jks formats are not supported, they need to be
# converted to PEM/RSA with openssl or other utility:
#   https://github.com/dpkp/kafka-python/issues/2052


# @section customCAs **Custom Certificate Authority**

# @param customCAs.bundle Custom CA [text representation of the X.509 PEM public-key certificate](https://www.rfc-editor.org/rfc/rfc7468#section-5.1)
# @param customCAs.certsPath Custom CA bundle mount directory in the container. If empty, the default value: "/usr/local/share/ca-certificates"

customCAs:
  bundle: ''
# bundle: |
    # -----BEGIN CERTIFICATE-----
    # ...
    # -----END CERTIFICATE-----
  certsPath: ''

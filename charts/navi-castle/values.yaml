# @section Docker Registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.

dgctlDockerRegistry: ''


# @section Deployment settings

# @param castle.image.repository Navi-Castle service image repository.
# @param castle.image.pullPolicy Navi-Castle service pull policy.
# @param castle.image.tag Navi-Castle service image tag.
# @param nginx.image.repository Navi-Front image repository.
# @param nginx.image.tag Navi-Front image tag.


# @section Deployment Artifacts Storage settings

# @param dgctlStorage.host S3 endpoint. Format: `host:port`.
# @param dgctlStorage.secure If S3 uses https.
# @param dgctlStorage.region S3 region.
# @param dgctlStorage.bucket S3 bucket name.
# @param dgctlStorage.accessKey S3 access key for accessing the bucket.
# @param dgctlStorage.secretKey S3 secret key for accessing the bucket.
# @param dgctlStorage.manifest The path to the [manifest file](https://docs.2gis.com/en/on-premise/overview#nav-lvl2@paramCommon_deployment_steps). Format: `manifests/0000000000.json`.<br> This file contains the description of pieces of data that the service requires to operate.

dgctlStorage:
  host: ''
  secure: false
  region: ''
  bucket: ''
  accessKey: ''
  secretKey: ''
  manifest: ''


# @section Common settings

# @param replicaCount A replica count for the pod.
# @param imagePullSecrets Kubernetes image pull secrets.
# @param nameOverride Base name to use in all the Kubernetes entities deployed by this chart.
# @param fullnameOverride Base fullname to use in all the Kubernetes entities deployed by this chart.
# @param podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
# @param podSecurityContext Kubernetes [pod security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
# @param securityContext Kubernetes [security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).
# @param nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
# @param tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.
# @param affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
# @param terminationGracePeriodSeconds Maximum time allowed for graceful shutdown.

replicaCount: 1
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
podAnnotations: {}
podSecurityContext: {}
securityContext: {}
nodeSelector: {}
tolerations: []
affinity: {}
terminationGracePeriodSeconds: 60


# @section Service account settings

# @param serviceAccount.create Specifies whether a service account should be created.
# @param serviceAccount.annotations Annotations to add to the service account.
# @param serviceAccount.name The name of the service account to use. If not set and create is true, a name is generated using the fullname template.

serviceAccount:
  create: false
  annotations: {}
  name: ''


# @section Service settings

# @param service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
# @param service.port Service port.

service:
  type: ClusterIP
  port: 80


# @section Kubernetes [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) settings

# @param ingress.enabled If Ingress is enabled for the service.
# @param ingress.className Name of the Ingress controller class.
# @param ingress.hosts[0].host Hostname for the Ingress service.
# @param ingress.hosts[0].paths[0].path Path of the host for the Ingress service.
# @param ingress.hosts[0].paths[0].pathType Type of the path for the Ingress service.
# @param ingress.tls TLS configuration

ingress:
  enabled: false
  className: nginx
  hosts:
  - host: navi-castle.example.com
    paths:
    - path: /
      pathType: Prefix
  tls: []
  #  hosts:
  #    navi-castle.example.com
  #  secretName: secret.tls

# @section Limits

# @param resources [nullable] Container resources requirements structure.
# @param resources.requests.cpu [nullable] CPU request, recommended value `100m`.
# @param resources.requests.memory [nullable] Memory request, recommended value `128Mi`.
# @param resources.limits.cpu [nullable] CPU limit, recommended value `1000m`.
# @param resources.limits.memory [nullable] Memory limit, recommended value `512Mi`.

resources: {}


# @section Navi-Castle service settings

# @param castle.castleDataPath Path to the data directory
# @param castle.excludeProjects Array of project labels to exclude
# @extra castle.restrictions Section ignored if castle.restriction.enabled=false
# @param castle.restrictions.host Restrictions API base URL
# @param castle.restrictions.key Restrictions API key
# @param castle.jobs Number of parallel downloading jobs
# @extra castle.startupProbe [nullable] Settings for startup probes
# @param castle.startupProbe.periodSeconds Check period for startup probes
# @param castle.startupProbe.failureThreshold Threshold for startup probes

castle:
  image:
    repository: 2gis-on-premise/navi-castle
    pullPolicy: IfNotPresent
    tag: 1.9.4
  castleDataPath: /opt/castle/data/
  restrictions:
    host: http://restrictions-api.host
    key: ''
  excludeProjects: []
  jobs: 1
  startupProbe:
    periodSeconds: 5
    failureThreshold: 180


# @section Navi-Front settings

# @param nginx.port HTTP port on which Navi-Front will be listening.

nginx:
  port: 8080
  image:
    repository: 2gis-on-premise/navi-front
    tag: 1.24.1


# @section Cron settings

# @param cron.enabled.import If the `import` cron job is enabled.
# @param cron.enabled.restriction If restrictions API enabled, incompatible with `restrictionImport`.
# @param cron.enabled.restrictionImport If restrictions import enabled, incompatible with `restriction`.
# @param cron.schedule.import Cron job schedule for `import`.
# @param cron.schedule.restriction Cron job schedule for `restriction`.
# @param cron.schedule.restrictionImport Cron job schedule for `restrictionImport`.
# @param cron.concurrencyPolicy Cron job concurrency policy: `Allow` or `Forbid`.
# @param cron.successfulJobsHistoryLimit How many completed and failed jobs should be kept.
# @param cron.prometheusPort Container port for supercronic prometheus

cron:
  enabled:
    import: false
    restriction: false
    restrictionImport: false
  schedule:
    import: 11 * * * *
    restriction: '*/5 * * * *'
    restrictionImport: '*/5 * * * *'
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  prometheusPort: 9476


# @section Init settings

# @param init.enabled.import If the `import` on init is enabled. Warning: if disable data not imported. Old data will be lost if not persistentVolume.enabled.
# @param init.enabled.restriction If restrictions API enabled, incompatible with `restrictionImport`.
# @param init.enabled.restrictionImport If restrictions import enabled, incompatible with `restriction`.

init:
  enabled:
    import: true
    restriction: false
    restrictionImport: false


# @section Kubernetes [Persistence Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) settings

# @param persistentVolume.enabled If Kubernetes persistence volume should be enabled for ZooKeeper.
# @param persistentVolume.accessModes Volume access mode.
# @param persistentVolume.storageClass Volume [storage class](https://kubernetes.io/docs/concepts/storage/storage-classes/).
# @param persistentVolume.size Volume size.

persistentVolume:
  enabled: false
  accessModes:
  - ReadWriteOnce
  storageClass: ceph-csi-rbd
  size: 5Gi

# @section Docker registry settings

# @param dgctlDockerRegistry Docker Registry endpoint where On-Premise services' images reside. Format: `host:port`.
# @param imagePullSecrets Kubernetes image pull secrets.
# @param imagePullPolicy Pull policy.
# @param ui.image.repository UI service image repository.
# @param ui.image.tag UI service image tag.

dgctlDockerRegistry: ""
imagePullSecrets: []
imagePullPolicy: IfNotPresent

# @section UI service settings

ui:
  image:
    repository: 2gis-on-premise/pro-ui
    tag: 0.0.0

  # @param ui.replicas A replica count for the pod.

  replicas: 1

  resources:
    requests:
      cpu: 300m
      memory: 256Mi
    limits:
      cpu: 1
      memory: 384Mi

  # @param ui.URBI_API_URL Base URL for the UI API.
  # @param ui.MAPGL_HOST Host for MapGL service.
  # @param ui.MAPGL_KEY A key to MapGL service.
  # @param ui.LOG_LEVEL Log messages importance.
  # @param ui.IS_ON_PREM Application's environment.

  URBI_API_URL: https://2gis-pro.host
  MAPGL_HOST: https://mapgl.host
  MAPGL_KEY: ""
  LOG_LEVEL: error
  IS_ON_PREM: 'True'

  # @param ui.annotations Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param ui.labels Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  annotations: {}
  labels: {}

  # @param ui.strategy.rollingUpdate.maxSurge Kubernetes [maxSurge](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#max-surge).
  # @param ui.strategy.rollingUpdate.maxUnavailable Kubernetes [maxUnavailable](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#max-unavailable).
  # @param ui.strategy.type Kubernetes [type](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy).

  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate

  # @param ui.podAnnotations Kubernetes [pod annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param ui.podLabels Kubernetes [pod labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).

  podAnnotations: {}
  podLabels: {}

  # @param ui.nodeSelector Kubernetes [node selectors](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector).
  # @param ui.affinity Kubernetes pod [affinity settings](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity).
  # @param ui.tolerations Kubernetes [tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/) settings.

  nodeSelector: {}
  affinity: {}
  tolerations: {}

  # @param ui.service.annotations Kubernetes [service annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/).
  # @param ui.service.labels Kubernetes [service labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/).
  # @param ui.service.type Kubernetes [service type](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
  # @param ui.service.port UI service port.

  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    port: 3000

  # @param ui.ingress If [Ingress](https://kubernetes.io/docs/concepts/services-networking/ingress/) is enabled for the service.

  ingress: {}

# @section Limits

# @extra ui.resources **Limits for the UI service**
# @param ui.resources.requests.cpu A CPU request.
# @param ui.resources.requests.memory A memory request.
# @param ui.resources.limits.cpu A CPU limit.
# @param ui.resources.limits.memory A memory limit.

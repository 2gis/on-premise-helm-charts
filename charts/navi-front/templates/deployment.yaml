{{- define "front.deployment" }}
spec:
  template:
    metadata:
      annotations:
        checksum/configBase: {{ include (print $.Template.BasePath "/configmap-base.yaml") . | sha256sum }}
        checksum/configExtra: {{ include (print $.Template.BasePath "/configmap-extra.yaml") . | sha256sum }}
    spec:
      volumes:
      - name: {{ include "generic-chart.fullname" . }}-base
        configMap:
          name: {{ include "generic-chart.fullname" . }}-base
      {{- if or .Values.serverBlock .Values.locationsBlock }}
      - name: {{ include "generic-chart.fullname" . }}-extra
        configMap:
          name: {{ include "generic-chart.fullname" . }}-extra
          items:
          {{- if or .Values.serverBlock }}
            - key: server-block.conf
              path: server-block.conf
          {{- end }}
          {{- if or .Values.locationsBlock }}
            - key: locations-block.conf
              path: locations-block.conf
          {{- end }}
      {{- end }}
      containers:
        - name: {{ include "generic-chart.containerName" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ required "A valid .Values.dgctlDockerRegistry entry required" .Values.dgctlDockerRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.nginx.opentracing.enabled }}
          env:
            - name: JAEGER_SERVICE_NAME
              value: {{ .Values.nginx.opentracing.serviceName | quote }}
            - name: JAEGER_SAMPLER_TYPE
              value: {{ .Values.nginx.opentracing.samplerType | quote }}
            - name: JAEGER_SAMPLER_PARAM
              value: {{ .Values.nginx.opentracing.samplerParam | quote }}
            - name: JAEGER_AGENT_PORT
              value: {{ .Values.nginx.opentracing.port | quote }}
            - name: JAEGER_AGENT_HOST
              {{- if .Values.nginx.opentracing.host }}
              value: {{ .Values.nginx.opentracing.host | quote }}
              {{- else }}
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
              {{- end }}
          {{- end }}
          volumeMounts:
          - name: {{ include "generic-chart.fullname" . }}-base
            mountPath: /etc/nginx/conf.d/front.conf
            subPath: front.conf
          {{- if or .Values.serverBlock .Values.locationsBlock }}
          - name: {{ include "generic-chart.fullname" . }}-extra
            mountPath: /etc/nginx/conf.d/extra
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 5; /usr/sbin/nginx -s quit; while killall -0 nginx; do sleep 1; done"]
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.sidecars }}
        {{- include "tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 8 }}
        {{- end }}
{{- end }}{{- /* define "front.deployment" */}}
{{- template "generic-chart.merge" (list . "front.deployment" "generic-chart.deployment.tpl") }}
